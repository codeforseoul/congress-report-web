<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>동작 메서드에서 응답할 HTTP 동사를 지정하는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>동작 메서드에서 응답할 HTTP 동사 목록을 사용하여 <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="verbs">동작 메서드에서 응답할 HTTP 동사입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="verbs" /> 매개 변수가 null이거나 길이가 0입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>동작 메서드에서 응답할 HTTP 동사를 사용하여 <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="verbs">동작 메서드에서 응답할 HTTP 동사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>지정된 메서드 정보가 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>메서드 정보가 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">메서드 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext " /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>동작 메서드에서 응답할 HTTP 동사 목록을 가져오거나 설정합니다.</summary>
      <returns>동작 메서드에서 응답할 HTTP 동사 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>동작 메서드의 이름, 컨트롤러, 매개 변수, 특성, 필터 등의 동작 메서드에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>동작 메서드의 이름을 가져옵니다.</summary>
      <returns>동작 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>컨트롤러 설명자를 가져옵니다.</summary>
      <returns>컨트롤러 설명자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 매개 변수와 컨트롤러 컨텍스트를 사용하여 동작 메서드를 실행합니다.</summary>
      <returns>동작 메서드 실행 결과입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 지정된 형식의 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attritubeType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시를 사용하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>이 동작 메서드에 연결된 필터를 반환합니다.</summary>
      <returns>이 동작 메서드에 연결된 필터입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>동작 메서드의 매개 변수를 반환합니다.</summary>
      <returns>동작 메서드의 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>동작 메서드 선택기를 반환합니다.</summary>
      <returns>동작 메서드 선택기입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 지정된 특성 형식의 인스턴스가 하나 이상 정의되어 있는지 확인합니다.</summary>
      <returns>이 멤버에 대해 <paramref name="attributeType" />이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attritubeType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>초기화 지연을 사용하여 동작 설명자의 고유 ID를 가져옵니다.</summary>
      <returns>고유 ID입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 ActionExecuted 메서드에 대한 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">동작 메서드 설명자입니다.</param>
      <param name="canceled">작업이 취소되었으면 true입니다.</param>
      <param name="exception">예외 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionDescriptor" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>작업 설명자를 가져오거나 설정합니다.</summary>
      <returns>작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>이 <see cref="T:System.Web.Mvc.ActionExecutedContext" /> 개체가 취소되었음을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>컨텍스트가 취소되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>동작 메서드를 실행하는 동안 발생한 예외를 가져오거나 설정합니다(있는 경우).</summary>
      <returns>동작 메서드를 실행하는 동안 발생한 예외입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>예외가 처리되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>예외가 처리되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>동작 메서드에서 반환되는 결과를 가져오거나 설정합니다.</summary>
      <returns>동작 메서드에서 반환되는 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 ActionExecuting 메서드에 대한 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionExecutingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 컨트롤러 컨텍스트, 작업 설명자 및 동작 메서드 매개 변수를 사용하여 <see cref="T:System.Web.Mvc.ActionExecutingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="actionParameters">동작 메서드 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ActionParameters" /> 또는 <paramref name="actionDescriptor" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>작업 설명자를 가져오거나 설정합니다.</summary>
      <returns>작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>동작 메서드 매개 변수를 가져오거나 설정합니다.</summary>
      <returns>동작 메서드 매개 변수입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>동작 메서드에서 반환되는 결과를 가져오거나 설정합니다.</summary>
      <returns>동작 메서드에서 반환되는 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>필터 특성에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>동작 메서드가 실행된 후 ASP.NET MVC 프레임워크에서 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>동작 메서드가 실행되기 전에 ASP.NET MVC 프레임워크에서 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>작업 결과가 실행된 후 ASP.NET MVC 프레임워크에서 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>작업 결과가 실행되기 전에 ASP.NET MVC 프레임워크에서 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>동작 메서드 선택에 영향을 주는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드 선택이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>선택한 동작 메서드가 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>작업 이름에 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">작업의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>작업 이름이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>작업 이름이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>작업 이름을 가져오거나 설정합니다.</summary>
      <returns>작업 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>동작 메서드의 선택에 영향을 주는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>작업 이름이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>작업 이름이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>동작 메서드의 결과를 캡슐화하고 동작 메서드 대신 프레임워크 수준 작업을 수행하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>동작 메서드의 선택 논리가 들어 있는 대리자를 나타냅니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>추가 메타데이터를 지원하기 위해 <see cref="T:System.Web.Mvc.IMetadataAware" /> 인터페이스를 구현하는 클래스를 제공합니다. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">모델 메타데이터의 이름입니다.</param>
      <param name="value">모델 메타데이터의 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>추가 메타데이터 특성의 이름을 가져옵니다.</summary>
      <returns>추가 메타데이터 특성의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>모델 메타데이터 생성 프로세스에 메타데이터를 제공합니다.</summary>
      <param name="metadata">메타 데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>추가 메타데이터 특성의 형식을 가져옵니다.</summary>
      <returns>추가 메타데이터 특성의 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>추가 메타데이터 특성의 값을 가져옵니다.</summary>
      <returns>추가 메타데이터 특성의 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>뷰 내에서 AJAX 시나리오의 HTML 렌더링 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>지정된 뷰 컨텍스트와 뷰 데이터 컨테이너를 사용하여 <see cref="T:System.Web.Mvc.AjaxHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <exception cref="T:System.ArgumentNullException">두 매개 변수 중 하나 이상이 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>지정된 뷰 컨텍스트, 뷰 데이터 컨테이너 및 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.AjaxHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <param name="routeCollection">URL 경로 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">두 매개 변수 중 하나 이상이 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>전역화 스크립트 파일에 사용할 위치의 루트 경로를 가져오거나 설정합니다.</summary>
      <returns>전역화 스크립트 파일이 저장되는 폴더의 위치입니다.기본 위치는 "~/Scripts/Globalization"입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>지정된 메시지를 직렬화하고 결과 JSON 형식 문자열을 반환합니다.</summary>
      <returns>JSON 형식 문자열로 직렬화된 메시지입니다.</returns>
      <param name="message">직렬화할 메시지입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>응용 프로그램에 대한 URL 경로의 컬렉션을 가져옵니다.</summary>
      <returns>응용 프로그램에 대한 URL 경로의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>ViewBag을 가져옵니다.</summary>
      <returns>ViewBag입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>뷰에 대한 컨텍스트 정보를 가져옵니다.</summary>
      <returns>뷰의 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>현재 뷰 데이터 사전을 가져옵니다.</summary>
      <returns>뷰 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>뷰 데이터 컨테이너를 가져옵니다.</summary>
      <returns>뷰 데이터 컨테이너입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>강력한 형식의 뷰 내에서 AJAX 시나리오의 HTML 렌더링 지원을 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>지정된 뷰 컨텍스트와 뷰 데이터 컨테이너를 사용하여 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>지정된 뷰 컨텍스트, 뷰 데이터 컨테이너 및 URL 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <param name="routeCollection">URL 경로 컬렉션입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>ViewBag을 가져옵니다.</summary>
      <returns>ViewBag입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>강력한 형식의 뷰 데이터 사전 버전을 가져옵니다.</summary>
      <returns>강력한 형식의 뷰 데이터 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>HTTP 요청이 AJAX 요청인지 확인하는 기능을 추가하여 <see cref="T:System.Web.HttpRequestBase" /> 클래스를 확장하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>지정된 HTTP 요청이 AJAX 요청인지 확인합니다.</summary>
      <returns>지정된 HTTP 요청이 AJAX 요청이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="request">HTTP 요청입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 매개 변수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>권한을 부여하는 동안 <see cref="T:System.Web.Mvc.AuthorizeAttribute" />를 건너뛰도록 컨트롤러와 작업에 표시하는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>속성에 대한 요청 유효성 검사를 건너뛰어 모델을 바인딩하는 동안 요청에 HTML 태그가 포함될 수 있도록 허용합니다.스크립트 악용을 방지하기 위해 요청 유효성 검사를 사용하지 않도록 설정하는 모든 모델을 응용 프로그램에서 명시적으로 확인하는 것이 좋습니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AllowHtmlAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>이 메서드는 ASP.NET MVC 유효성 검사 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>ASP.NET MVC 응용 프로그램의 영역을 하나 이상 등록하는 방법을 설명합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AreaRegistration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>등록할 영역의 이름을 가져옵니다.</summary>
      <returns>등록할 영역의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>ASP.NET MVC 응용 프로그램의 모든 영역을 등록합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>지정된 사용자 정의 정보를 사용하여 ASP.NET MVC 응용 프로그램의 모든 영역을 등록합니다.</summary>
      <param name="state">영역에 전달할 사용자 정의 정보를 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>지정된 영역의 컨텍스트 정보를 사용하여 ASP.NET MVC 응용 프로그램의 영역을 등록합니다.</summary>
      <param name="context">영역을 등록하는 데 필요한 정보를 캡슐화합니다.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>ASP.NET MVC 응용 프로그램 내의 영역을 등록하는 데 필요한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>지정된 영역 이름과 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="areaName">등록할 영역의 이름입니다.</param>
      <param name="routes">응용 프로그램에 대한 URL 경로의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>지정된 영역 이름, 경로 컬렉션 및 사용자 정의 데이터를 사용하여 <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="areaName">등록할 영역의 이름입니다.</param>
      <param name="routes">응용 프로그램에 대한 URL 경로의 컬렉션입니다.</param>
      <param name="state">영역에 전달할 사용자 정의 정보를 포함하는 개체입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>등록할 영역의 이름을 가져옵니다.</summary>
      <returns>등록할 영역의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>지정된 URL 경로를 매핑한 후 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>지정된 URL 경로를 매핑한 후 지정된 경로 기본값을 사용하여 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>지정된 URL 경로를 매핑한 후 지정된 경로 기본값과 제약 조건을 사용하여 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="constraints">URL 매개 변수에 대한 유효한 값을 지정하는 식의 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>지정된 URL 경로를 매핑한 후 지정된 경로 기본값, 제약 조건 및 네임스페이스를 사용하여 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="constraints">URL 매개 변수에 대한 유효한 값을 지정하는 식의 집합입니다.</param>
      <param name="namespaces">응용 프로그램에 대한 열거 가능한 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>지정된 URL 경로를 매핑한 후 지정된 경로 기본값과 네임스페이스를 사용하여 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="namespaces">응용 프로그램에 대한 열거 가능한 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>지정된 URL 경로를 매핑한 후 지정된 네임스페이스를 사용하여 <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> 속성으로 지정된 영역에 연결합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="name">경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="namespaces">응용 프로그램에 대한 열거 가능한 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>응용 프로그램의 네임스페이스를 가져옵니다.</summary>
      <returns>응용 프로그램에 대한 열거 가능한 네임스페이스 집합입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>응용 프로그램에 정의된 경로 컬렉션을 가져옵니다.</summary>
      <returns>응용 프로그램에 정의된 경로 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>영역에 전달할 사용자 정의 정보를 포함하는 개체를 가져옵니다.</summary>
      <returns>영역에 전달할 사용자 정의 정보를 포함하는 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>메타데이터 공급자를 구현하는 추상 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>파생 클래스에서 재정의되면 속성에 대한 모델 메타데이터를 만듭니다.</summary>
      <returns>이 속성에 대한 모델 메타데이터입니다.</returns>
      <param name="attributes">특성의 집합입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>특성 목록을 가져옵니다.</summary>
      <returns>특성 목록입니다.</returns>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="propertyDescriptor">속성 설명자입니다.</param>
      <param name="attributes">특성 컨테이너입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>모델의 속성 목록을 반환합니다.</summary>
      <returns>모델의 속성 목록입니다.</returns>
      <param name="container">모델 컨테이너입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>컨테이너 형식과 속성 설명자를 사용하여 지정된 속성에 대한 메타데이터를 가져옵니다.</summary>
      <returns>컨테이너 형식과 속성 설명자를 사용하는 지정된 속성에 대한 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="propertyDescriptor">속성 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>컨테이너 형식과 속성 이름을 사용하여 지정된 속성에 대한 메타데이터를 반환합니다.</summary>
      <returns>컨테이너 형식과 속성 이름을 사용하는 지정된 속성에 대한 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>모델 유형을 사용하여 지정된 속성에 대한 메타데이터를 반환합니다.</summary>
      <returns>모델 형식을 사용하는 지정된 속성에 대한 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>지정된 형식에서 형식 설명자를 반환합니다.</summary>
      <returns>형식 설명자입니다.</returns>
      <param name="type">유형입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>유효성 검사 공급자를 구현하는 클래스의 추상 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>지정된 형식의 형식 설명자를 가져옵니다.</summary>
      <returns>지정된 형식의 형식 설명자입니다.</returns>
      <param name="type">유효성 검사 공급자의 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>메타데이터 및 컨트롤러 컨텍스트를 사용하여 모델의 유효성 검사기를 가져옵니다.</summary>
      <returns>모델의 유효성 검사기입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>메타데이터, 컨트롤러 컨텍스트 및 특성 목록을 사용하여 모델의 유효성 검사기를 가져옵니다.</summary>
      <returns>모델의 유효성 검사기입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attributes">특성 목록입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>ASP.NET MVC 3에서는 이전 버전과의 호환성을 제공했습니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AsyncController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>비동기 메서드의 제한 시간 값(밀리초)을 설정하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="duration">제한 시간 값(밀리초)입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>제한 시간 기간(밀리초)을 가져옵니다.</summary>
      <returns>제한 시간 기간(밀리초)입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>비동기 동작 메서드가 실행되기 전에 ASP.NET에서 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 특성을 사용하는 데 필요한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">결과가 실행되는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>지정된 컨트롤러 컨텍스트와 작업 설명자를 사용하여 <see cref="T:System.Web.Mvc.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">결과가 실행되는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="actionDescriptor">이름, 컨트롤러, 매개 변수, 특성, 필터 등 동작 메서드에 대한 정보를 제공하는 개체입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>이름, 컨트롤러, 매개 변수, 특성, 필터 등 <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 특성으로 표시되는 동작 메서드에 대한 정보를 제공합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 특성으로 표시되는 동작 메서드에 대한 작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>동작 메서드에서 반환되는 결과를 가져오거나 설정합니다.</summary>
      <returns>동작 메서드에서 반환되는 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>호출자의 동작 메서드 액세스를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>재정의된 경우 사용자 지정 권한 부여 확인의 진입점을 제공합니다.</summary>
      <returns>사용자에게 권한이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">개별 HTTP 요청에 대한 HTTP 관련 정보를 모두 캡슐화하는 HTTP 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>권한 부여에 실패한 HTTP 요청을 처리합니다.</summary>
      <param name="filterContext">
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 사용에 대한 정보를 캡슐화합니다.<paramref name="filterContext" /> 개체에는 컨트롤러, HTTP 컨텍스트, 요청 컨텍스트, 작업 결과 및 경로 데이터가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>프로세스에서 권한 부여를 요청하는 경우 호출됩니다.</summary>
      <param name="filterContext">
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 사용에 대한 정보를 캡슐화하는 필터 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>캐싱 모듈에서 권한 부여를 요청하는 경우 호출됩니다.</summary>
      <returns>유효성 검사 상태에 대한 참조입니다.</returns>
      <param name="httpContext">개별 HTTP 요청에 대한 HTTP 관련 정보를 모두 캡슐화하는 HTTP 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>사용자 역할을 가져오거나 설정합니다.</summary>
      <returns>사용자 역할입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>이 특성의 고유 식별자를 가져옵니다.</summary>
      <returns>이 특성의 고유 식별자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>권한이 있는 사용자를 가져오거나 설정합니다.</summary>
      <returns>권한이 있는 사용자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>매개 변수에 대한 모델 바인딩 방법에 대한 세부 정보를 제공하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.BindAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>바인딩이 허용되지 않는 속성 이름의 쉼표로 구분된 목록을 가져오거나 설정합니다.</summary>
      <returns>제외 목록입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>바인딩이 허용되는 속성 이름의 쉼표로 구분된 목록을 가져오거나 설정합니다.</summary>
      <returns>포함 목록입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>지정된 속성이 허용되는지 확인합니다.</summary>
      <returns>지정된 속성이 허용되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>작업 인수 또는 모델 속성에 바인딩하기 위해 태그를 렌더링할 때 사용할 접두사를 가져오거나 설정합니다.</summary>
      <returns>사용할 접두사입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>뷰 엔진에서 렌더링하기 전 BuildManager 클래스에서 컴파일하는 뷰의 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트와 뷰 경로를 사용하여 <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>지정된 컨트롤러 컨텍스트, 뷰 경로 및 뷰 페이지 활성기를 사용하여 <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">현재 컨트롤러에 대한 컨텍스트 정보입니다.이 정보에는 HTTP 컨텍스트, 요청 컨텍스트, 경로 데이터, 부모 작업 뷰 컨텍스트 등이 포함됩니다.</param>
      <param name="viewPath">렌더링될 뷰에 대한 경로입니다.</param>
      <param name="viewPageActivator">런타임에 뷰 페이지를 동적으로 구성해야 하는 개체입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewPath" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>지정된 기록기 개체를 사용하여 지정된 뷰 컨텍스트를 렌더링합니다.</summary>
      <param name="viewContext">뷰 데이터, 임시 데이터, 폼 컨텍스트 등 뷰 렌더링과 관련된 정보입니다.</param>
      <param name="writer">기록기 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:SInvalidOperationException">뷰 형식의 인스턴스를 만들 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>파생 클래스에서 재정의된 경우, 지정된 기록기 개체 및 개체 인스턴스를 사용하여 지정된 뷰 컨텍스트를 렌더링합니다.</summary>
      <param name="viewContext">뷰 데이터, 임시 데이터, 폼 컨텍스트 등 뷰 렌더링과 관련된 정보입니다.</param>
      <param name="writer">기록기 개체입니다.</param>
      <param name="instance">뷰에 사용할 수 있는 추가 정보를 포함하는 개체입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>뷰 경로를 가져오거나 설정합니다.</summary>
      <returns>뷰 경로입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>뷰 엔진에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>지정된 뷰 페이지 활성기를 사용하여 <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewPageActivator">뷰 페이지 활성기입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 가상 파일 시스템(경로)에 파일이 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>가상 파일 시스템에 파일이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="virtualPath">가상 경로입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>뷰 페이지 활성기를 가져옵니다.</summary>
      <returns>뷰 페이지 활성기입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>브라우저 요청을 바이트 배열에 매핑합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ByteArrayModelBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 모델을 바인딩합니다.</summary>
      <returns>바인딩된 데이터 개체입니다.구현<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>캐시된 메타데이터 공급자를 구현하는 추상 클래스를 제공합니다.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>캐시 항목 정책을 가져옵니다.</summary>
      <returns>캐시 항목 정책입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>캐시 키 접두사를 가져옵니다.</summary>
      <returns>캐시 키 접두사입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>파생 클래스에서 재정의되면 속성에 대해 캐시된 모델 메타데이터를 만듭니다.</summary>
      <returns>속성에 대해 캐시된 모델 메타데이터입니다.</returns>
      <param name="attributes">특성입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>최종 메타데이터를 생성하기 위해 프로토타입 및 모델 접근자를 적용하여 프로토타입 메타데이터를 만듭니다.</summary>
      <returns>프로토타입 메타데이터입니다.</returns>
      <param name="prototype">프로토타입입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>메타데이터 프로토타입을 만듭니다.</summary>
      <returns>메타데이터 프로토타입입니다.</returns>
      <param name="attributes">특성입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="modelType">모델 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>속성에 대한 메타데이터를 가져옵니다.</summary>
      <returns>속성에 대한 메타데이터입니다.</returns>
      <param name="container">컨테이너입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>지정된 속성에 대한 메타데이터를 반환합니다.</summary>
      <returns>지정된 속성의 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="propertyDescriptor">속성 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>지정된 속성에 대한 메타데이터를 반환합니다.</summary>
      <returns>지정된 속성의 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>모델 형식을 사용하는, 지정된 속성에 대해 캐시된 메타데이터를 반환합니다.</summary>
      <returns>모델 형식을 사용하는, 지정된 속성에 대해 캐시된 메타데이터입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">컨테이너의 유형입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>프로토타입 캐시를 가져옵니다.</summary>
      <returns>프로토타입 캐시입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>캐시 <see cref="N:System.ComponentModel.DataAnnotations" /> 특성에 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>
        <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributes">특성입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>데이터 형식을 가져옵니다.</summary>
      <returns>데이터 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>표시를 가져옵니다.</summary>
      <returns>표시입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>표시 열을 가져옵니다.</summary>
      <returns>표시 열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>표시 형식을 가져옵니다.</summary>
      <returns>표시 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>표시 이름을 가져옵니다.</summary>
      <returns>표시 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>데이터 필드가 편집 가능한지 여부를 나타냅니다.</summary>
      <returns>필드가 편집 가능하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>숨겨진 입력을 가져옵니다.</summary>
      <returns>숨겨진 입력입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>데이터 필드가 읽기 전용인지 여부를 나타냅니다.</summary>
      <returns>필드가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>데이터 필드가 필수인지 여부를 나타냅니다.</summary>
      <returns>필드가 필수이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>데이터 필드가 스캐폴딩되는지 여부를 나타냅니다.</summary>
      <returns>필드가 스캐폴딩되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>UI 힌트를 가져옵니다.</summary>
      <returns>UI 힌트입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" /> 캐시에 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>프로토타입 및 모델 접근자를 사용하여 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="prototype">프로토타입입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>공급자, 컨테이너 형식, 모델 형식, 속성 이름 및 특성을 사용하여 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">공급자입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="modelType">모델 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
      <param name="attributes">특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>폼에 다시 게시된 빈 문자열을 Nothing으로 변환할지를 나타내는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>폼에 다시 게시된 빈 문자열을 Nothing으로 변환할지를 나타내는 값입니다. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>데이터 형식에 대한 메타 정보를 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>데이터 형식에 대한 메타 정보입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>모델의 설명을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>모델의 표시 형식 문자열을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델의 표시 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>모델의 표시 이름을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>모델의 편집 형식 문자열을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델의 편집 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>모델이 기본값이 아닌 편집 형식을 사용하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>기본값이 아닌 편집 형식이 사용되는지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 캐시된 값을 가져옵니다.관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 캐시된 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>모델이 읽기 전용인지를 나타내는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델이 읽기 전용인지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>모델이 필수인지를 나타내는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델이 필수인지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>null 값에 대해 표시할 문자열을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>null 값에 대해 표시할 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>현재 메타데이터의 순서를 나타내는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>현재 메타데이터의 순서를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>짧은 표시 이름을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>짧은 표시 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>편집 가능한 뷰에 모델을 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>모델의 단순 표시 문자열을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>모델의 단순 표시 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>이 모델에 사용할 템플릿을 제안하는 힌트를 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>이 모델에 사용할 템플릿을 제안하는 힌트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>워터마크로 사용할 수 있는 값을 가져옵니다.값이 캐시되면 캐시된 값이 반환됩니다. 그렇지 않으면 모델 메타데이터에서 값이 검색되어 캐시에 저장됩니다.</summary>
      <returns>워터마크로 사용할 수 있는 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>ASP.NET MVC에 대해 기본 캐시된 모델 메타데이터 공급자를 구현합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>프로토타입 및 모델 접근자에 기반하여 캐시된 메타데이터 클래스의 실제 인스턴스에 대한 컨테이너를 반환합니다.</summary>
      <returns>캐시된 메타데이터 클래스의 실제 인스턴스에 대한 컨테이너입니다.</returns>
      <param name="prototype">프로토타입입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>메타데이터 클래스의 컨테이너 프로토타입 인스턴스를 반환합니다.</summary>
      <returns>메타데이터 클래스의 컨테이너 프로토타입 인스턴스입니다.</returns>
      <param name="attributes">특성 형식입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="modelType">모델 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>캐시된 메타데이터에 대한 컨테이너를 제공합니다.</summary>
      <typeparam name="TPrototypeCache">컨테이너의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>프로토타입에 기반한 메타데이터 클래스의 실제 인스턴스를 만드는 생성자입니다.</summary>
      <param name="provider">공급자입니다.</param>
      <param name="containerType">컨테이너 형식입니다.</param>
      <param name="modelType">모델 형식입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
      <param name="prototypeCache">프로토타입입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>메타데이터 클래스의 프로토타입 인스턴스를 만드는 생성자입니다.</summary>
      <param name="prototype">프로토타입입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.폼에 다시 게시된 빈 문자열을 null로 변환할지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>폼에 다시 게시된 빈 문자열을 null로 변환할지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.데이터 형식에 대한 메타 정보를 가져오거나 설정합니다.</summary>
      <returns>데이터 형식에 대한 메타 정보입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>모델에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델의 표시 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델의 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델의 편집 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 편집 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.</summary>
      <returns>기본값이 아닌 편집 형식이 사용되는지를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델이 읽기 전용인지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 읽기 전용인지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델이 필요한지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 필수인지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.null 값에 대해 표시할 캐시된 문자열을 가져오거나 설정합니다.</summary>
      <returns>null 값에 대해 표시할 캐시된 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.현재 메타데이터의 순서를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>현재 메타데이터의 순서를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.짧은 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>짧은 표시 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.편집 가능한 뷰에 모델을 표시해야 하는지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>편집 가능한 뷰에 모델을 표시해야 하는지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.모델에 대해 캐시된 단순 표시 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델에 대해 캐시된 단순 표시 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.이 모델에 사용할 템플릿을 제안하는 캐시된 힌트를 가져오거나 설정합니다.</summary>
      <returns>이 모델에 사용할 템플릿을 제안하는 캐시된 힌트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>이 메서드는 보호되므로 직접 호출할 수 없습니다.이 메서드는 <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />와 같은 파생 클래스에서 재정의되도록 설계되었습니다.워터마크로 사용할 수 있는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>워터마크로 사용할 수 있는 캐시된 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>폼에 다시 게시된 빈 문자열을 null로 변환할지를 나타내는 캐시된 값을 가져오거나 설정합니다.</summary>
      <returns>폼에 다시 게시된 빈 문자열을 null로 변환할지를 나타내는 캐시된 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>데이터 형식에 대한 메타 정보를 가져오거나 설정합니다.</summary>
      <returns>데이터 형식에 대한 메타 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>모델에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>모델에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>모델의 표시 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 형식 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>모델의 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>모델의 편집 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 편집 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>모델의 단순 표시 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 단순 표시 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>모델이 읽기 전용인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 읽기 전용인지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>모델이 필요한지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 필수인지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>null 값에 대해 표시할 문자열을 가져오거나 설정합니다.</summary>
      <returns>null 값에 대해 표시할 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>현재 메타데이터의 순서를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>현재 메타데이터의 순서 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>프로토타입 캐시를 가져오거나 설정합니다.</summary>
      <returns>프로토타입 캐시입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>짧은 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>짧은 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>읽기 전용 뷰에 모델을 표시해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>편집 가능한 뷰에 모델을 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>편집 가능한 뷰에 모델을 표시해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>모델의 단순 표시 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 단순 표시 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>이 모델에 사용할 템플릿을 제안하는 힌트를 가져오거나 설정합니다.</summary>
      <returns>이 모델에 사용할 템플릿을 제안하는 힌트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>워터마크로 사용할 수 있는 값을 가져오거나 설정합니다.</summary>
      <returns>워터마크로 사용할 수 있는 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>모델 바인더 작업을 취소해야 한다는 알림을 전파하는 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>기본 취소 토큰을 반환합니다.</summary>
      <returns>기본 취소 토큰입니다.구현<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="bindingContext">바인딩 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>동작 메서드를 자식 동작으로만 호출해야 함을 표시하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>권한 부여가 필요한 경우 호출됩니다.</summary>
      <param name="filterContext">자식 동작에 대한 액세스 권한을 부여하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>자식 동작의 값에 대한 값 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 개체를 검색합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">키입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>자식 동작에 대한 값 공급자 개체를 만들기 위한 팩터리를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>클라이언트 데이터 형식 모델 유효성 검사기를 반환합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>클라이언트 데이터 형식 모델 유효성 검사기를 반환합니다.</summary>
      <returns>클라이언트 데이터 형식 모델 유효성 검사기입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>리소스 클래스 키를 가져옵니다.</summary>
      <returns>리소스 클래스 키입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>모델의 두 속성을 비교하는 특성을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.CompareAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="otherProperty">현재 속성을 비교할 속성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>비교 오류가 발생한 데이터 필드를 기반으로 오류 메시지에 서식을 적용합니다.</summary>
      <returns>형식이 지정된 오류 메시지입니다.</returns>
      <param name="name">유효성 검사 오류를 발생시킨 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>별표(*)와 점(.)을 앞에 추가하여 클라이언트 유효성 검사에 대한 속성의 서식을 지정합니다.</summary>
      <returns>"*." 문자열이 속성 앞에 추가됩니다.</returns>
      <param name="property">속성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>지정된 모델 메타데이터 및 컨트롤러 컨텍스트를 사용하여 속성에 대한 비교 값 클라이언트 유효성 검사 규칙의 목록을 가져옵니다.</summary>
      <returns>비교 값 클라이언트 유효성 검사 규칙 목록입니다.</returns>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>지정된 개체가 비교하는 개체와 같은지 확인합니다.</summary>
      <returns>비교하는 속성의 값이 값 매개 변수와 같으면 null이고, 그렇지 않으면 비교가 실패했음을 나타내는 오류 메시지가 포함된 유효성 검사 결과가 나타납니다.</returns>
      <param name="value">비교할 개체의 값입니다.</param>
      <param name="validationContext">유효성 검사 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>현재 속성과 비교할 속성을 가져옵니다.</summary>
      <returns>현재 속성을 비교할 속성입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>다른 속성의 표시 이름입니다.</summary>
      <returns>다른 속성의 표시 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>동작 메서드의 결과인 사용자 정의 콘텐츠 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ContentResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>콘텐츠를 가져오거나 설정합니다.</summary>
      <returns>콘텐츠입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>콘텐츠 인코딩을 가져오거나 설정합니다.</summary>
      <returns>콘텐츠 인코딩입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>콘텐츠의 형식을 가져오거나 설정합니다.</summary>
      <returns>콘텐츠의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>ASP.NET MVC 웹 사이트에 대한 HTTP 요청에 응답하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Controller" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>컨트롤러에 대한 작업 호출자를 가져옵니다.</summary>
      <returns>작업 호출자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>비동기 작업을 제공합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.Async.AsyncManager" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>지정된 요청 컨텍스트를 실행하기 시작합니다.</summary>
      <returns>IAsyncController 인스턴스를 반환합니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>현재 컨트롤러 컨텍스트에서 작업을 호출하기 시작합니다.</summary>
      <returns>IAsyncController 인스턴스를 반환합니다.</returns>
      <param name="callback">콜백입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>바인더를 가져오거나 설정합니다.</summary>
      <returns>바인더입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>문자열을 사용하여 콘텐츠 결과 개체를 만듭니다.</summary>
      <returns>콘텐츠 결과 인스턴스입니다.</returns>
      <param name="content">응답에 쓸 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>문자열과 콘텐츠 형식을 사용하여 콘텐츠 결과 개체를 만듭니다.</summary>
      <returns>콘텐츠 결과 인스턴스입니다.</returns>
      <param name="content">응답에 쓸 콘텐츠입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>문자열, 콘텐츠 형식 및 콘텐츠 인코딩을 사용하여 콘텐츠 결과 개체를 만듭니다.</summary>
      <returns>콘텐츠 결과 인스턴스입니다.</returns>
      <param name="content">응답에 쓸 콘텐츠입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="contentEncoding">콘텐츠 인코딩입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>작업 호출자를 만듭니다.</summary>
      <returns>작업 호출자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>임시 데이터 공급자를 만듭니다.</summary>
      <returns>임시 데이터 공급자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>컨트롤러에 대한 비동기 지원을 사용하지 않도록 설정할지 여부를 가져옵니다.</summary>
      <returns>컨트롤러에 대한 비동기 지원을 사용하지 않도록 설정하려면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>
        <see cref="T:System.Web.Mvc.Controller" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 모두 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>현재 컨트롤러 컨텍스트에서 작업 호출을 종료합니다.</summary>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>코어 실행을 종료합니다.</summary>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>현재 컨트롤러 컨텍스트에서 작업을 호출합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>파일 콘텐츠와 파일 형식을 사용하여 FileContentResult 개체를 만듭니다.</summary>
      <returns>파일 콘텐츠 결과 개체입니다.</returns>
      <param name="fileContents">응답에 보낼 이진 콘텐츠입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>파일 콘텐츠, 콘텐츠 형식 및 대상 파일 이름을 사용하여 FileContentResult 개체를 만듭니다.</summary>
      <returns>파일 콘텐츠 결과 개체입니다.</returns>
      <param name="fileContents">응답에 보낼 이진 콘텐츠입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="fileDownloadName">브라우저에 표시되는 파일 다운로드 대화 상자에서 사용할 파일 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Stream 개체와 콘텐츠 형식을 사용하여 FileStreamResult 개체를 만듭니다.</summary>
      <returns>파일 콘텐츠 결과 개체입니다.</returns>
      <param name="fileStream">응답에 보낼 스트림입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Stream 개체, 콘텐츠 형식 및 대상 파일 이름을 사용하여 FileStreamResult 개체를 만듭니다.</summary>
      <returns>파일 스트림 결과 개체입니다.</returns>
      <param name="fileStream">응답에 보낼 스트림입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="fileDownloadName">브라우저에 표시되는 파일 다운로드 대화 상자에서 사용할 파일 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>파일 이름과 콘텐츠 형식을 사용하여 FilePathResult 개체를 만듭니다.</summary>
      <returns>파일 스트림 결과 개체입니다.</returns>
      <param name="fileName">응답에 보낼 파일의 경로입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>파일 이름, 콘텐츠 형식 및 파일 다운로드 이름을 사용하여 FilePathResult 개체를 만듭니다.</summary>
      <returns>파일 스트림 결과 개체입니다.</returns>
      <param name="fileName">응답에 보낼 파일의 경로입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="fileDownloadName">브라우저에 표시되는 파일 다운로드 대화 상자에서 사용할 파일 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>요청이 이 컨트롤러와 일치하지만 지정된 작업 이름을 포함하는 메서드를 컨트롤러에서 찾을 수 없을 때 호출됩니다.</summary>
      <param name="actionName">시도된 작업의 이름입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>개별 HTTP 요청에 대한 HTTP 관련 정보를 가져옵니다.</summary>
      <returns>HTTP 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="statusDescription">상태 설명입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>생성자가 호출될 때 사용하지 못할 수 있는 데이터를 초기화합니다.</summary>
      <param name="requestContext">HTTP 컨텍스트 및 경로 데이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.JavaScriptResult" /> 개체를 만듭니다.</summary>
      <returns>응답에 스크립트를 쓰는 <see cref="T:System.Web.Mvc.JavaScriptResult" /> 개체입니다.</returns>
      <param name="script">클라이언트에서 실행할 JavaScript 코드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>지정된 개체를 JSON(JavaScript Object Notation)으로 serialize하는 <see cref="T:System.Web.Mvc.JsonResult" /> 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 JSON 결과 개체입니다.이 메서드에서 준비하는 결과 개체는 실행 시 ASP.NET MVC 프레임워크의 응답에 쓰여집니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>지정된 개체를 JSON(JavaScript Object Notation) 형식으로 serialize하는 <see cref="T:System.Web.Mvc.JsonResult" /> 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 JSON 결과 개체입니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>지정된 개체를 JSON(JavaScript Object Notation) 형식으로 serialize하는 <see cref="T:System.Web.Mvc.JsonResult" /> 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 JSON 결과 개체입니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="contentEncoding">콘텐츠 인코딩입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>콘텐츠 형식, 콘텐츠 인코딩 및 JSON(JavaScript Object Notation) 요청 동작을 사용하여 지정된 개체를 JSON 형식으로 serialize하는 <see cref="T:System.Web.Mvc.JsonResult" /> 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 결과 개체입니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="contentEncoding">콘텐츠 인코딩입니다.</param>
      <param name="behavior">JSON 요청 동작입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>지정된 콘텐츠 형식과 JSON(JavaScript Object Notation) 요청 동작을 사용하여 지정된 개체를 JSON 형식으로 serialize하는 <see cref="T:System.Web.Mvc.JsonResult" /> 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 결과 개체입니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
      <param name="contentType">콘텐츠 형식(MIME 형식)입니다.</param>
      <param name="behavior">JSON 요청 동작입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>지정된 JSON(JavaScript Object Notation) 요청 동작을 사용하여 지정된 개체를 JSON 형식으로 직렬화하는 JsonResult 개체를 만듭니다.</summary>
      <returns>지정된 개체를 JSON 형식으로 직렬화하는 결과 개체입니다.</returns>
      <param name="data">직렬화할 JavaScript 개체 그래프입니다.</param>
      <param name="behavior">JSON 요청 동작입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>모델과 모델 바인딩 유효성 검사의 상태를 포함하는 모델 상태 사전 개체를 가져옵니다.</summary>
      <returns>모델 상태 사전입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>동작 메서드가 호출된 후 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>동작 메서드가 호출되기 전에 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>권한이 부여될 때 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>권한 부여 챌린지가 발생할 때 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>권한이 부여될 때 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>작업에서 처리되지 않은 예외가 발생할 때 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>동작 메서드에서 반환되는 작업 결과가 실행된 후에 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업 결과에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>동작 메서드에서 반환되는 작업 결과가 실행되기 전에 호출됩니다.</summary>
      <param name="filterContext">현재 요청 및 작업 결과에 대한 정보입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>부분 뷰를 렌더링하는 <see cref="T:System.Web.Mvc.PartialViewResult" /> 개체를 만듭니다.</summary>
      <returns>부분 뷰 결과 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>지정된 모델을 사용하여 부분 뷰를 렌더링하는 <see cref="T:System.Web.Mvc.PartialViewResult" /> 개체를 만듭니다.</summary>
      <returns>부분 뷰 결과 개체입니다.</returns>
      <param name="model">부분 뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>지정된 뷰 이름을 사용하여 부분 뷰를 렌더링하는 <see cref="T:System.Web.Mvc.PartialViewResult" /> 개체를 만듭니다.</summary>
      <returns>부분 뷰 결과 개체입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>지정된 뷰 이름과 모델을 사용하여 부분 뷰를 렌더링하는 <see cref="T:System.Web.Mvc.PartialViewResult" /> 개체를 만듭니다.</summary>
      <returns>부분 뷰 결과 개체입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰의 이름입니다.</param>
      <param name="model">부분 뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>HTTP 컨텍스트 프로필을 가져옵니다.</summary>
      <returns>HTTP 컨텍스트 프로필입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>지정된 URL로 리디렉션하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 개체를 만듭니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="url">리디렉션할 URL입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Permanent 속성이 true로 설정된 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>Permanent 속성이 true로 설정된 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="url">리디렉션할 URL입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>작업 이름을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>작업 이름과 경로 값을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>작업 이름과 컨트롤러 이름을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>작업 이름, 컨트롤러 이름 및 경로 사전을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>작업 이름과 경로 사전을 사용하여 지정된 작업으로 리디렉션합니다.</summary>
      <returns>리디렉션 결과 개체입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>지정된 작업 이름을 사용하여 Permanent 속성이 true로 설정된 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>지정된 작업 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>지정된 작업 이름 및 컨트롤러 이름을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름 및 컨트롤러 이름을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 작업 이름 및 경로 값을 사용하여 Permanent 속성을 true로 설정하는 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 인스턴스입니다.</returns>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>지정된 경로 값을 사용하여 지정된 경로로 리디렉션합니다.</summary>
      <returns>경로로 리디렉션 결과 개체입니다.</returns>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>경로 이름을 사용하여 지정된 경로로 리디렉션합니다.</summary>
      <returns>경로로 리디렉션 결과 개체입니다.</returns>
      <param name="routeName">경로의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>경로 이름과 경로 값을 사용하여 지정된 경로로 리디렉션합니다.</summary>
      <returns>경로로 리디렉션 결과 개체입니다.</returns>
      <param name="routeName">경로의 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>경로 이름과 경로 사전을 사용하여 지정된 경로로 리디렉션합니다.</summary>
      <returns>경로로 리디렉션 결과 개체입니다.</returns>
      <param name="routeName">경로의 이름입니다.</param>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>경로 사전을 사용하여 지정된 경로로 리디렉션합니다.</summary>
      <returns>경로로 리디렉션 결과 개체입니다.</returns>
      <param name="routeValues">경로에 대한 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>지정된 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</summary>
      <returns>Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</returns>
      <param name="routeValues">경로 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>지정된 경로 이름을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 경로 이름을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>지정된 경로 이름 및 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 경로 이름 및 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 이름 및 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</summary>
      <returns>Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스를 반환합니다.</summary>
      <returns>지정된 경로 값을 사용하여 Permanent 속성이 true로 설정된 RedirectResult 클래스의 인스턴스입니다.</returns>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>현재 HTTP 요청에 대한 HttpRequestBase 개체를 가져옵니다.</summary>
      <returns>요청 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>현재 HTTP 응답에 대한 HttpResponseBase 개체를 가져옵니다.</summary>
      <returns>현재 HTTP 응답에 대한 HttpResponseBase 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>현재 요청에 대한 경로 데이터를 가져옵니다.</summary>
      <returns>경로 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>웹 요청 처리 중에 사용되는 메서드를 제공하는 HttpServerUtilityBase 개체를 가져옵니다.</summary>
      <returns>HTTP 서버 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>현재 HTTP 요청에 대한 HttpSessionStateBase 개체를 가져옵니다.</summary>
      <returns>현재 HTTP 요청에 대한 HTTP 세션 상태 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>이 메서드는 BeginExecute 메서드를 호출합니다.</summary>
      <returns>작업의 결과입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백입니다.</param>
      <param name="state">개체의 상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>이 메서드는 EndExecute 메서드를 호출합니다.</summary>
      <param name="asyncResult">작업의 비동기 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>이 메서드는 OnAuthentication 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>이 메서드는 OnAuthenticationChallenge 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>이 메서드는 OnActionExecuted 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>이 메서드는 OnActionExecuting 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>이 메서드는 OnAuthorization 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>이 메서드는 OnException 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>이 메서드는 OnResultExecuted 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>이 메서드는 OnResultExecuting 메서드를 호출합니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>다음 요청에 대한 데이터를 저장하는 데 사용되는 임시 데이터 공급자 개체를 가져옵니다.</summary>
      <returns>임시 데이터 공급자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>컨트롤러의 현재 값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 매개 변수 또는 ValueProvider 속성이 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>컨트롤러의 현재 값 공급자와 접두사의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 매개 변수 또는 ValueProvider 속성이 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>컨트롤러의 현재 값 공급자, 접두사 및 포함된 속성의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 매개 변수 또는 ValueProvider 속성이 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>컨트롤러의 현재 값 공급자, 접두사, 제외할 속성 목록 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="excludeProperties">업데이트에서 명시적으로 제외할 속성 목록입니다.이러한 속성은 includeProperties 매개 변수 목록에 나열된 경우에도 제외됩니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> 매개 변수 또는 ValueProvider 속성이 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사, 제외할 속성 목록 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="excludeProperties">업데이트에서 명시적으로 제외할 속성 목록입니다.이러한 속성은 includeProperties 매개 변수 목록에 나열된 경우에도 제외됩니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사 및 포함된 속성의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>값 공급자 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>컨트롤러의 현재 값 공급자 및 포함된 속성의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <returns>업데이트되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>지정된 모델 인스턴스의 유효성을 검사합니다.</summary>
      <returns>모델 유효성 검사에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">유효성을 검사할 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>HTML 접두사를 사용하여 지정된 모델 인스턴스의 유효성을 검사합니다.</summary>
      <returns>모델 유효성 검사에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="model">유효성을 검사할 모델입니다.</param>
      <param name="prefix">모델 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>컨트롤러의 현재 값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>컨트롤러의 현재 값 공급자와 접두사의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>컨트롤러의 현재 값 공급자, 접두사 및 포함된 속성의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>컨트롤러의 현재 값 공급자, 접두사, 제외할 속성 목록 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="excludeProperties">업데이트에서 명시적으로 제외할 속성 목록입니다.이러한 속성은 includeProperties 목록에 나열된 경우에도 제외됩니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사, 제외할 속성 목록 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="excludeProperties">업데이트에서 명시적으로 제외할 속성 목록입니다.이러한 속성은 includeProperties 매개 변수 목록에 나열된 경우에도 제외됩니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">값 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="prefix">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>컨트롤러 개체의 현재 값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>값 공급자, 접두사 및 포함할 속성 목록의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="includeProperties">업데이트할 모델의 속성 목록입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>값 공급자의 값을 사용하여 지정된 모델 인스턴스를 업데이트합니다.</summary>
      <param name="model">업데이트할 모델 인스턴스입니다.</param>
      <param name="valueProvider">모델을 업데이트하는 데 사용되는 값의 사전입니다.</param>
      <typeparam name="TModel">모델 개체의 형식입니다.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>라우팅을 사용하여 URL을 생성하는 데 사용되는 URL 도우미 개체를 가져옵니다.</summary>
      <returns>URL 도우미 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>현재 HTTP 요청에 대한 사용자 보안 정보를 가져옵니다.</summary>
      <returns>현재 HTTP 요청에 대한 사용자 보안 정보입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>지정된 모델 인스턴스의 유효성을 검사합니다.</summary>
      <param name="model">유효성을 검사할 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>HTML 접두사를 사용하여 지정된 모델 인스턴스의 유효성을 검사합니다.</summary>
      <param name="model">유효성을 검사할 모델입니다.</param>
      <param name="prefix">모델 공급자에서 값을 조회할 때 사용할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>뷰를 응답에 렌더링하는 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰를 응답에 렌더링하는 <see cref="M:System.Web.Mvc.Controller.View" /> 결과입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>뷰를 응답에 렌더링하는 모델을 사용하여 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="model">뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>뷰를 렌더링하는 뷰 이름을 사용하여 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>지정된 IView 개체를 렌더링하는 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰입니다.</param>
      <param name="model">뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>뷰를 응답에 렌더링하는 뷰 이름과 마스터 페이지 이름을 사용하여 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰의 이름입니다.</param>
      <param name="masterName">뷰를 렌더링할 때 사용할 마스터 페이지 또는 템플릿의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>뷰를 렌더링하는 뷰 이름, 마스터 페이지 및 모델을 사용하여 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="viewName">응답에 렌더링되는 뷰의 이름입니다.</param>
      <param name="masterName">뷰를 렌더링할 때 사용할 마스터 페이지 또는 템플릿의 이름입니다.</param>
      <param name="model">뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>지정된 IView 개체를 렌더링하는 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="view">응답에 렌더링되는 뷰입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>지정된 <see cref="T:System.Web.Mvc.IView" /> 개체를 렌더링하는 <see cref="T:System.Web.Mvc.ViewResult" /> 개체를 만듭니다.</summary>
      <returns>뷰 결과입니다.</returns>
      <param name="view">응답에 렌더링되는 뷰입니다.</param>
      <param name="model">뷰에서 렌더링되는 모델입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>뷰 엔진 컬렉션을 가져옵니다.</summary>
      <returns>뷰 엔진 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>컨트롤러의 동작 메서드를 호출하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerActionInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>작업에 연결된 모델 바인더를 가져오거나 설정합니다.</summary>
      <returns>작업에 연결된 모델 바인더입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>작업 결과를 만듭니다.</summary>
      <returns>작업 결과 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="actionReturnValue">작업 반환 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>동작 메서드에 대한 정보를 찾습니다.</summary>
      <returns>동작 메서드에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="controllerDescriptor">컨트롤러 설명자입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 컨트롤러에 대한 정보를 검색합니다.</summary>
      <returns>컨트롤러에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>작업 필터에 대한 정보를 검색합니다.</summary>
      <returns>작업 필터에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>지정된 동작 메서드 매개 변수의 값을 가져옵니다.</summary>
      <returns>동작 메서드 매개 변수의 값입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameterDescriptor">매개 변수 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>동작 메서드 매개 변수의 값을 가져옵니다.</summary>
      <returns>동작 메서드 매개 변수의 값입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 작업을 호출합니다.</summary>
      <returns>작업 실행 결과입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">호출할 작업의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">작업 호출 중에 스레드가 중단되었습니다.</exception>
      <exception cref="T:System.Exception">작업 호출 중에 지정되지 않은 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 매개 변수와 컨트롤러 컨텍스트를 사용하여 지정된 동작 메서드를 호출합니다.</summary>
      <returns>동작 메서드 실행 결과입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="parameters">매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 매개 변수, 컨트롤러 컨텍스트 및 작업 필터를 사용하여 지정된 동작 메서드를 호출합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 ActionExecuted 메서드에 대한 컨텍스트입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="filters">작업 필터입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="parameters">매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 작업 결과를 호출합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionResult">작업 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>지정된 작업 필터와 컨트롤러 컨텍스트를 사용하여 지정된 작업 결과를 호출합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 ResultExecuted 메서드에 대한 컨텍스트입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="filters">작업 필터입니다.</param>
      <param name="actionResult">작업 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>지정된 작업 설명자와 컨트롤러 컨텍스트를 사용하여 지정된 권한 부여 필터를 호출합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 개체에 대한 컨텍스트입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="filters">권한 부여 필터입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>지정된 예외와 컨트롤러 컨텍스트를 사용하여 지정된 예외 필터를 호출합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 개체에 대한 컨텍스트입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="filters">예외 필터입니다.</param>
      <param name="exception">예외입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>모든 MVC 컨트롤러에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>컨트롤러 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>컨트롤러 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 실행합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>요청을 실행합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 초기화합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 실행합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>임시 데이터 사전을 가져오거나 설정합니다.</summary>
      <returns>임시 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>이 요청에 대해 요청 유효성 검사가 수행되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 요청에 대해 요청 유효성 검사가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>컨트롤러에 대한 값 공급자를 가져오거나 설정합니다.</summary>
      <returns>컨트롤러에 대한 값 공급자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>동적 뷰 데이터 사전을 가져옵니다.</summary>
      <returns>동적 뷰 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>뷰 데이터 사전을 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>동적으로 컨트롤러를 빌드하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>현재 컨트롤러 빌더 개체를 가져옵니다.</summary>
      <returns>현재 컨트롤러 빌더입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>기본 네임스페이스를 가져옵니다.</summary>
      <returns>기본 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>연결된 컨트롤러 팩터리를 가져옵니다.</summary>
      <returns>컨트롤러 팩터리입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>지정된 형식을 사용해 컨트롤러 팩터리를 설정합니다.</summary>
      <param name="controllerFactoryType">컨트롤러 팩터리의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerFactoryType" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">컨트롤러 팩터리를 <paramref name="controllerFactoryType" /> 매개 변수의 형식에서 할당할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">컨트롤러 팩터리가 설정되는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>지정된 컨트롤러 팩터리를 설정합니다.</summary>
      <param name="controllerFactory">컨트롤러 팩터리입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerFactory" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>지정된 <see cref="T:System.Web.Routing.RouteBase" /> 및 <see cref="T:System.Web.Mvc.ControllerBase" /> 인스턴스와 일치하는 HTTP 요청에 대한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>지정된 HTTP 컨텍스트, URL 경로 데이터 및 컨트롤러를 사용하여 <see cref="T:System.Web.Mvc.ControllerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="routeData">경로 데이터입니다.</param>
      <param name="controller">컨트롤러입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.ControllerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>지정된 요청 컨텍스트와 컨트롤러를 사용하여 <see cref="T:System.Web.Mvc.ControllerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controller">컨트롤러입니다.</param>
      <exception cref="T:System.ArgumentNullException">두 매개 변수 중 하나 이상이 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>컨트롤러를 가져오거나 설정합니다.</summary>
      <returns>컨트롤러입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>표시 모드를 가져옵니다.</summary>
      <returns>표시 모드입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>HTTP 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>HTTP 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>연결된 동작 메서드가 자식 작업인지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결된 동작 메서드가 자식 작업이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>부모 동작 메서드에 대한 뷰 컨텍스트 정보를 포함하는 개체를 가져옵니다.</summary>
      <returns>부모 동작 메서드에 대한 뷰 컨텍스트 정보를 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>요청 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>요청 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>URL 경로 데이터를 가져오거나 설정합니다.</summary>
      <returns>URL 경로 데이터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>컨트롤러 이름, 형식, 작업 등 컨트롤러를 설명하는 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>컨트롤러의 이름을 가져옵니다.</summary>
      <returns>컨트롤러의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>컨트롤러의 형식을 가져옵니다.</summary>
      <returns>컨트롤러의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 이름과 컨트롤러 컨텍스트를 사용하여 동작 메서드를 찾습니다.</summary>
      <returns>동작 메서드에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>컨트롤러의 동작 메서드 설명자 목록을 검색합니다.</summary>
      <returns>컨트롤러의 동작 메서드 설명자 목록입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성을 검색합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 지정된 형식의 사용자 지정 특성을 검색합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 매개 변수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시를 사용해야 하면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 지정된 사용자 지정 특성의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값을 검색합니다.</summary>
      <returns>이 멤버에 대해 <paramref name="attributeType" />이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 매개 변수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>파생 클래스에서 구현되는 경우 초기화 지연을 사용하는 컨트롤러 설명자의 고유 ID를 가져옵니다.</summary>
      <returns>고유 ID입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>
        <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 인스턴스에 컨트롤러를 추가합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>컨트롤러 인스턴스 필터의 컬렉션을 반환합니다.</summary>
      <returns>컨트롤러 인스턴스 필터의 컬렉션입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>사용자 지정 모델 바인더를 호출하는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>연결된 모델 바인더를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.IModelBinder" /> 인터페이스를 구현하는 개체에 대한 참조입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>데이터 모델의 일반 메타데이터, <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 클래스 및 <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 클래스에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">데이터 주석 모델 메타데이터 공급자입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
      <param name="displayColumnAttribute">표시 열 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>모델 데이터에 대한 간단한 텍스트를 반환합니다.</summary>
      <returns>모델 데이터에 대한 간단한 텍스트입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>ASP.NET MVC에 대한 기본 모델 메타데이터 공급자를 구현합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>지정된 속성에 대한 메타데이터를 가져옵니다.</summary>
      <returns>속성의 메타데이터입니다.</returns>
      <param name="attributes">특성입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" /> 인스턴스를 만드는 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>모델 유효성 검사기를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델의 메타데이터입니다.</param>
      <param name="context">모델의 컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">모델의 유효성 검사 특성입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>모델 유효성 검사기의 유효성 검사 특성을 가져옵니다.</summary>
      <returns>모델 유효성 검사기의 유효성 검사 특성입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>유효성 검사 실패에 대한 오류 메시지를 가져옵니다.</summary>
      <returns>유효성 검사 실패에 대한 오류 메시지입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>클라이언트 유효성 검사 규칙 컬렉션을 검색합니다.</summary>
      <returns>클라이언트 유효성 검사 규칙 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>모델 유효성 검사가 필요한지를 나타내는 값을 가져옵니다.</summary>
      <returns>모델 유효성 검사가 필요하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>모델의 유효성 검사 오류 메시지 목록을 반환합니다.</summary>
      <returns>모델의 유효성 검사 오류 메시지 목록이거나 오류가 발생하지 않은 경우 빈 목록입니다.</returns>
      <param name="container">모델의 컨테이너입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>지정된 유효성 검사 형식에 대한 모델 유효성 검사기를 제공합니다.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델의 메타데이터입니다.</param>
      <param name="context">모델의 컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">모델의 유효성 검사 특성입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>모델 유효성 검사기에서 유효성 검사 특성을 가져옵니다.</summary>
      <returns>모델 유효성 검사기의 유효성 검사 특성입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>ASP.NET MVC에 대한 기본 유효성 검사 공급자를 구현합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>null을 허용하지 않는 값 형식이 필요한지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>null을 허용하지 않는 값 형식이 필요하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>유효성 검사기 목록을 가져옵니다.</summary>
      <returns>유효성 검사기 목록입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨텍스트입니다.</param>
      <param name="attributes">유효성 검사 특성 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>클라이언트 쪽 유효성 검사를 제공할 수 있도록 어댑터를 등록합니다.</summary>
      <param name="attributeType">유효성 검사 특성의 형식입니다.</param>
      <param name="adapterType">어댑터 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>유효성 검사 공급자에 대한 어댑터 팩터리를 등록합니다.</summary>
      <param name="attributeType">특성의 형식입니다.</param>
      <param name="factory">지정된 특성에 대한 <see cref="T:System.Web.Mvc.ModelValidator" /> 개체를 만드는 데 사용할 팩터리입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>기본 어댑터를 등록합니다.</summary>
      <param name="adapterType">어댑터 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>기본 어댑터 팩터리를 등록합니다.</summary>
      <param name="factory">기본 어댑터에 대한 <see cref="T:System.Web.Mvc.ModelValidator" /> 개체를 만드는 데 사용할 팩터리입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>기본 개체 유효성 검사를 제공하기 위해 어댑터를 등록합니다.</summary>
      <param name="adapterType">어댑터 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>기본 개체 유효성 검사 공급자에 대한 어댑터 팩터리를 등록합니다.</summary>
      <param name="factory">팩터리입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>개체 유효성 검사를 제공하기 위해 어댑터를 등록합니다.</summary>
      <param name="modelType">모델 유형입니다.</param>
      <param name="adapterType">어댑터 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>개체 유효성 검사 공급자에 대한 어댑터 팩터리를 등록합니다.</summary>
      <param name="modelType">모델 유형입니다.</param>
      <param name="factory">팩터리입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />에 기반한 유효성 검사기의 팩터리를 제공합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>오류 정보 모델 유효성 검사기에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>오류 정보 모델 유효성 검사기 목록을 가져옵니다.</summary>
      <returns>오류 정보 모델 유효성 검사기 목록입니다.</returns>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>기본적으로 등록되어 있는 컨트롤러 팩터리를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>컨트롤러 활성기를 사용하여 <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerActivator">컨트롤러 활성기 인터페이스를 구현하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>지정된 요청 컨텍스트를 사용하여 지정된 컨트롤러를 만듭니다.</summary>
      <returns>컨트롤러입니다.</returns>
      <param name="requestContext">HTTP 컨텍스트와 경로 데이터를 포함하는 HTTP 요청의 컨텍스트입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>지정된 요청 컨텍스트와 컨트롤러 형식에 대한 컨트롤러 인스턴스를 검색합니다.</summary>
      <returns>컨트롤러 인스턴스입니다.</returns>
      <param name="requestContext">HTTP 컨텍스트와 경로 데이터를 포함하는 HTTP 요청의 컨텍스트입니다.</param>
      <param name="controllerType">컨트롤러의 형식입니다.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerType" />을 할당할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="controllerType" />의 인스턴스를 만들 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>컨트롤러의 세션 동작을 반환합니다.</summary>
      <returns>컨트롤러의 세션 동작입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controllerType">컨트롤러의 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>지정된 이름과 요청 컨텍스트에 대한 컨트롤러 형식을 검색합니다.</summary>
      <returns>컨트롤러 형식입니다.</returns>
      <param name="requestContext">HTTP 컨텍스트와 경로 데이터를 포함하는 HTTP 요청의 컨텍스트입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>지정된 컨트롤러를 해제합니다.</summary>
      <param name="controller">해제할 컨트롤러입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.이 메서드는 <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" /> 메서드를 호출합니다.</summary>
      <returns>컨트롤러의 세션 동작입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>브라우저 요청을 데이터 개체에 매핑합니다.이 클래스는 모델 바인더의 구체적인 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DefaultModelBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>응용 프로그램의 모델 바인더를 가져오거나 설정합니다.</summary>
      <returns>응용 프로그램의 모델 바인더입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 모델을 바인딩합니다.</summary>
      <returns>바인딩된 개체입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext " /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트 및 지정된 속성 설명자를 사용하여 지정된 속성을 바인딩합니다.</summary>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="propertyDescriptor">바인딩할 속성에 대해 설명합니다.이 설명자는 구성 요소 형식, 속성 형식, 속성 값 등의 정보를 제공합니다.속성 값을 가져오거나 설정하기 위한 메서드도 제공합니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 지정된 모델 형식을 만듭니다.</summary>
      <returns>지정된 형식의 데이터 개체입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="modelType">반환할 모델 개체의 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>더 큰 인덱스를 구성하는 구성 요소의 범주를 기반으로 지정된 인덱스 값이 정수인 인덱스(하위 인덱스)를 만듭니다.</summary>
      <returns>하위 인덱스의 이름입니다.</returns>
      <param name="prefix">하위 인덱스의 접두사입니다.</param>
      <param name="index">인덱스 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>더 큰 인덱스를 구성하는 구성 요소의 범주를 기반으로 지정된 인덱스 값이 문자열인 인덱스(하위 인덱스)를 만듭니다.</summary>
      <returns>하위 인덱스의 이름입니다.</returns>
      <param name="prefix">하위 인덱스의 접두사입니다.</param>
      <param name="index">인덱스 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>지정된 접두사와 속성 이름을 사용하여 하위 속성의 이름을 만듭니다.</summary>
      <returns>하위 속성의 이름입니다.</returns>
      <param name="prefix">하위 속성의 접두사입니다.</param>
      <param name="propertyName">속성 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 <paramref name="binding context" />에서 설정된 속성 필터 제한과 일치하는 속성 집합을 반환합니다.</summary>
      <returns>열거 가능한 속성 설명자 집합입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 모델의 속성을 반환합니다.</summary>
      <returns>속성 설명자의 컬렉션입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>지정된 컨트롤러 컨텍스트, 바인딩 컨텍스트, 속성 설명자 및 속성 바인더를 사용하여 속성 값을 반환합니다.</summary>
      <returns>속성 값을 나타내는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="propertyDescriptor">액세스할 속성에 대한 설명자입니다.이 설명자는 구성 요소 형식, 속성 형식, 속성 값 등의 정보를 제공합니다.속성 값을 가져오거나 설정하기 위한 메서드도 제공합니다.</param>
      <param name="propertyBinder">속성을 바인딩하는 방법을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>컨트롤러 컨텍스트와 바인딩 컨텍스트로 지정된 형식에 대한 설명자 개체를 반환합니다.</summary>
      <returns>사용자 지정 형식 설명자 개체입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>데이터 모델이 지정된 바인딩 컨텍스트에 대해 유효한지 확인합니다.</summary>
      <returns>모델이 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>모델이 업데이트된 경우 호출됩니다.</summary>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>모델이 업데이트되고 있는 경우 호출됩니다.</summary>
      <returns>모델이 업데이트되고 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>지정된 속성의 유효성이 검사된 경우 호출됩니다.</summary>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="propertyDescriptor">유효성을 검사할 속성에 대해 설명합니다.이 설명자는 구성 요소 형식, 속성 형식, 속성 값 등의 정보를 제공합니다.속성 값을 가져오거나 설정하기 위한 메서드도 제공합니다.</param>
      <param name="value">속성에 설정할 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>지정된 속성의 유효성이 검사되고 있는 경우 호출됩니다.</summary>
      <returns>속성의 유효성을 검사 중이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="propertyDescriptor">유효성을 검사 중인 속성에 대해 설명합니다.이 설명자는 구성 요소 형식, 속성 형식, 속성 값 등의 정보를 제공합니다.속성 값을 가져오거나 설정하기 위한 메서드도 제공합니다.</param>
      <param name="value">속성에 설정할 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>지역화된 문자열 값을 포함하는 리소스 파일(클래스 키)의 이름을 가져오거나 설정합니다.</summary>
      <returns>리소스 파일(클래스 키)의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>지정된 컨트롤러 컨텍스트, 바인딩 컨텍스트 및 속성 값을 사용하여 지정된 속성을 설정합니다.</summary>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
      <param name="propertyDescriptor">설정할 속성에 대해 설명합니다.이 설명자는 구성 요소 형식, 속성 형식, 속성 값 등의 정보를 제공합니다.속성 값을 가져오거나 설정하기 위한 메서드도 제공합니다.</param>
      <param name="value">속성에 설정할 값입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>뷰 위치에 대한 메모리 캐시를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>지정된 캐시 시간 범위를 사용하여 <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="timeSpan">캐시 시간 범위입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="timeSpan" /> 매개 변수의 Ticks 특성이 음수로 설정됩니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>지정된 HTTP 컨텍스트와 캐시 키를 사용하여 기본 뷰 위치를 검색합니다.</summary>
      <returns>기본 뷰 위치입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="key">캐시 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>지정된 HTTP 컨텍스트, 캐시 키 및 가상 경로를 사용하여 지정된 가상 경로에 뷰를 삽입합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="key">캐시 키입니다.</param>
      <param name="virtualPath">가상 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>비어 있는 뷰 위치 캐시를 만듭니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>캐시 시간 범위를 가져오거나 설정합니다.</summary>
      <returns>캐시 시간 범위입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>
        <see cref="T:System.Web.Mvc.IDependencyResolver" /> 또는 공통 서비스 로케이터 IServiceLocator 인터페이스를 구현하는 종속성 확인자의 등록 지점을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.DependencyResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>종속성 확인자의 구현을 가져 옵니다.</summary>
      <returns>종속성 확인자의 구현입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns>종속성 확인자의 구현입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="getService">서비스를 제공하는 함수입니다.</param>
      <param name="getServices">서비스를 제공하는 함수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="commonServiceLocator">공통 서비스 로케이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="resolver">종속성 확인자를 구현하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>지정된 서비스 대리자 및 지정된 서비스 컬렉션 대리자를 사용하여 종속성 확인자의 등록 지점을 제공합니다.</summary>
      <param name="getService">서비스 대리자입니다.</param>
      <param name="getServices">서비스 대리자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>서비스 로케이터 인터페이스를 사용하는 경우 제공된 공통 서비스 로케이터를 이용해 종속성 확인자의 등록 지점을 제공합니다.</summary>
      <param name="commonServiceLocator">공통 서비스 로케이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>지정된 종속성 확인자 인터페이스를 사용하여 종속성 확인자의 등록 지점을 제공합니다.</summary>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>
        <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> 및 <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />의 형식 안전 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>임의의 개체 생성을 지원하는 단일 등록 서비스를 확인합니다.</summary>
      <returns>요청된 서비스 또는 개체입니다.</returns>
      <param name="resolver">이 메서드가 확장하는 종속성 확인자 인스턴스입니다.</param>
      <typeparam name="TService">요청된 서비스 또는 개체의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>여러 번 등록된 서비스를 확인합니다.</summary>
      <returns>요청된 서비스입니다.</returns>
      <param name="resolver">이 메서드가 확장하는 종속성 확인자 인스턴스입니다.</param>
      <typeparam name="TService">요청된 서비스의 형식입니다.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인터페이스를 구현하는 컬렉션에서 값을 가져오는 값 공급자에 대한 기본 클래스를 나타냅니다.</summary>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dictionary">값 공급자를 초기화하는 데 사용되는 이름/값 쌍입니다.</param>
      <param name="culture">culture 이름, 쓰기 시스템 및 사용된 달력과 같은 특정 culture에 대한 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>컬렉션이 지정된 접두사를 포함하는지 확인합니다.</summary>
      <returns>지정된 접두사가 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>접두사에서 키를 가져옵니다.</summary>
      <returns>접두사의 키입니다.</returns>
      <param name="prefix">접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>지정된 키와 컨트롤러 컨텍스트를 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">검색할 값 개체의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>메타데이터가 필요하지 않은 데이터 모델에 빈 메타데이터 공급자를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> 클래스의 새 인스턴스입니다.</returns>
      <param name="attributes">특성입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
      <param name="propertyName">모델의 이름입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>유효성 검사기가 필요하지 않은 모델에 대한 빈 유효성 검사 공급자를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>빈 모델 유효성 검사기를 가져옵니다.</summary>
      <returns>빈 모델 유효성 검사기입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>아무것도 반환하지 않는 컨트롤러 동작 메서드 같이 아무 작업도 수행하지 않는 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.EmptyResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>지정된 결과 컨텍스트를 실행합니다.</summary>
      <param name="context">결과 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>
        <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 클래스 사용에 대한 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ExceptionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 예외에 대한 <see cref="T:System.Web.Mvc.ExceptionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="exception">예외입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>예외 개체를 가져오거나 설정합니다.</summary>
      <returns>예외 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>예외가 처리되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>예외가 처리되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>작업 결과를 가져오거나 설정합니다.</summary>
      <returns>작업 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>식에서 모델 이름을 가져오는 도우미 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>람다 식에서 모델 이름을 가져옵니다.</summary>
      <returns>모델 이름입니다.</returns>
      <param name="expression">식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>문자열 식에서 모델 이름을 가져옵니다.</summary>
      <returns>모델 이름입니다.</returns>
      <param name="expression">식입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>클라이언트 쪽 필드 유효성 검사 메타데이터에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FieldValidationMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>데이터 필드의 이름을 가져오거나 설정합니다.</summary>
      <returns>데이터 필드의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>유효성 검사 메시지 내용을 클라이언트 유효성 검사 오류로 대체해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>유효성 검사 메시지 내용을 클라이언트 유효성 검사 오류로 대체해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>유효성 검사기 메시지 ID를 가져오거나 설정합니다.</summary>
      <returns>유효성 검사기 메시지 ID입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>클라이언트 유효성 검사 규칙을 가져옵니다.</summary>
      <returns>클라이언트 유효성 검사 규칙입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>이진 파일의 내용을 응답에 보냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>지정된 파일 내용과 콘텐츠 형식을 사용하여 <see cref="T:System.Web.Mvc.FileContentResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileContents">응답에 보낼 바이트 배열입니다.</param>
      <param name="contentType">응답에 사용할 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileContents" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>응답에 보낼 이진 콘텐츠입니다.</summary>
      <returns>파일 내용입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>응답에 파일 내용을 씁니다.</summary>
      <param name="response">응답입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>파일 내용을 응답에 보냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>지정된 파일 이름과 콘텐츠 형식을 사용하여 <see cref="T:System.Web.Mvc.FilePathResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileName">응답에 보낼 파일의 이름입니다.</param>
      <param name="contentType">응답의 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>응답에 보낸 파일의 경로를 가져오거나 설정합니다.</summary>
      <returns>응답에 보낸 파일의 경로입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>응답에 파일을 씁니다.</summary>
      <param name="response">응답입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>이진 파일의 내용을 응답에 보내는 데 사용되는 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.FileResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contentType">콘텐츠의 형식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="contentType" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>응답에 사용할 콘텐츠 형식을 가져옵니다.</summary>
      <returns>콘텐츠의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>지정된 파일 이름이 포함된 파일 다운로드 대화 상자가 브라우저에 표시되도록 콘텐츠 처리 헤더를 가져오거나 설정합니다.</summary>
      <returns>파일 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>응답에 파일을 씁니다.</summary>
      <param name="response">응답입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>
        <see cref="T:System.IO.Stream" /> 인스턴스를 사용하여 응답에 이진 콘텐츠를 보냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.FileStreamResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream">응답에 보낼 스트림입니다.</param>
      <param name="contentType">응답에 사용할 콘텐츠 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>응답에 보낼 스트림을 가져옵니다.</summary>
      <returns>파일 스트림입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>응답에 파일을 씁니다.</summary>
      <param name="response">응답입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>하나 이상의 필터 인터페이스 구현, 필터 순서 및 필터 범위에 대한 참조를 포함하는 메타데이터 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>
        <see cref="T:System.Web.Mvc.Filter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="instance">인스턴스입니다.</param>
      <param name="scope">범위입니다.</param>
      <param name="order">순서입니다.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>필터의 기본 순서를 지정하는 데 사용되는 상수를 나타냅니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>이 클래스의 인스턴스를 가져옵니다.</summary>
      <returns>이 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>필터가 적용된 순서를 가져옵니다.</summary>
      <returns>필터가 적용된 순서입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>필터의 범위 순서를 가져옵니다.</summary>
      <returns>필터의 범위 순서입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>작업 및 결과 필터 특성에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FilterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>필터 특성의 인스턴스를 둘 이상 지정할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>필터 특성의 인스턴스를 둘 이상 지정할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>작업 필터가 실행되는 순서를 가져오거나 설정합니다.</summary>
      <returns>작업 필터가 실행되는 순서입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>필터 특성에 대한 필터 공급자를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> 클래스의 새 인스턴스를 초기화하고 필요에 따라 특성 인스턴스를 캐시합니다.</summary>
      <param name="cacheAttributeInstances">특성 인스턴스를 캐시하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>사용자 지정 작업 특성의 컬렉션을 가져옵니다.</summary>
      <returns>사용자 지정 작업 특성의 컬렉션입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>컨트롤러 특성의 컬렉션을 가져옵니다.</summary>
      <returns>컨트롤러 특성의 컬렉션입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>모든 필터 공급자의 필터를 하나의 컬렉션에 집계합니다.</summary>
      <returns>모든 필터 공급자의 컬렉션 필터입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>사용 가능한 작업 필터에 대한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FilterInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>지정된 필터 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.FilterInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filters">필터 컬렉션입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>응용 프로그램에 있는 모든 작업 필터를 가져옵니다.</summary>
      <returns>작업 필터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>응용 프로그램에 있는 모든 인증 필터를 가져옵니다.</summary>
      <returns>인증 필터 목록입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>응용 프로그램에 있는 모든 권한 부여 필터를 가져옵니다.</summary>
      <returns>권한 부여 필터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>응용 프로그램에 있는 모든 예외 필터를 가져옵니다.</summary>
      <returns>예외 필터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>응용 프로그램에 있는 모든 결과 필터를 가져옵니다.</summary>
      <returns>결과 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>응용 프로그램에 대한 필터 공급자의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>지정된 필터 공급자 목록을 사용하여 <see cref="T:System.Web.Mvc.FilterProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providers">필터 공급자 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>컬렉션에서 모든 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>필터 공급자 컬렉션을 반환합니다.</summary>
      <returns>필터 공급자 컬렉션입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>컬렉션 내의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">0부터 시작하는 인덱스이며 항목을 삽입해야 합니다.</param>
      <param name="item">삽입할 개체입니다.참조 형식의 경우 값이 null일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>지정된 컬렉션 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>지정된 인덱스에 있는 요소를 바꿉니다.</summary>
      <param name="index">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">지정된 인덱스에 있는 요소의 새 값입니다.참조 형식의 경우 값이 null일 수 있습니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>필터의 등록 지점을 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>필터의 등록 지점을 제공합니다.</summary>
      <returns>필터 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>ASP.NET MVC 필터가 같은 필터 형식과 필터 순서 내에서 실행되는 순서를 지정하는 값을 정의합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>
        <see cref="F:System.Web.Mvc.FilterScope.Last" /> 전과 <see cref="F:System.Web.Mvc.FilterScope.Controller" /> 후의 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>
        <see cref="F:System.Web.Mvc.FilterScope.Action" /> 전과 <see cref="F:System.Web.Mvc.FilterScope.Global" /> 후의 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>가장 먼저 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>
        <see cref="F:System.Web.Mvc.FilterScope.Controller" /> 전과 <see cref="F:System.Web.Mvc.FilterScope.First" /> 후의 순서를 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>가장 마지막에 지정합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>응용 프로그램의 폼 값 공급자를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FormCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>
        <see cref="T:System.Web.Mvc.FormCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection">컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>지정된 값 공급자를 가져옵니다.</summary>
      <returns>값 공급자입니다.</returns>
      <param name="name">가져올 값 공급자의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>값 공급자에 지정된 접두사가 있는 항목이 포함되어 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>지정된 접두사가 있는 항목이 값 공급자에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 공급자에서 값을 가져옵니다.</summary>
      <returns>값 공급자에서 가져온 값입니다.</returns>
      <param name="key">키입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>값 공급자가 들어 있는 사전을 반환합니다.</summary>
      <returns>값 공급자 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>HTML 폼의 입력 데이터 유효성을 검사하고 해당 데이터를 처리하는 데 필요한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FormContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>폼에 대한 필드 유효성 검사기를 가져옵니다.</summary>
      <returns>폼에 대한 필드 유효성 검사기 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>폼 식별자를 가져오거나 설정합니다.</summary>
      <returns>폼 식별자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>폼에 대한 폼 식별자 및 필드 유효성 검사 값을 포함하는 직렬화된 개체를 반환합니다.</summary>
      <returns>폼의 폼 식별자 및 필드 유효성 검사 값을 포함하는 직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>지정된 입력 필드의 유효성 검사 값을 반환합니다.</summary>
      <returns>필드 입력의 유효성을 검사하는 데 사용할 값입니다.</returns>
      <param name="fieldName">유효성 검사 값을 검색할 필드의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>지정된 입력 필드의 유효성 검사 값과 유효성 검사 값을 찾을 수 없는 경우 수행할 작업을 나타내는 값을 반환합니다.</summary>
      <returns>필드 입력의 유효성을 검사하는 데 사용할 값입니다.</returns>
      <param name="fieldName">유효성 검사 값을 검색할 필드의 이름입니다.</param>
      <param name="createIfNotFound">값을 찾을 수 없는 경우 유효성 검사 값을 만들려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fieldName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>지정된 필드가 폼에서 렌더링되었는지를 나타내는 값을 반환합니다.</summary>
      <returns>필드가 렌더링되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="fieldName">필드 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>지정된 필드가 폼에서 렌더링되었는지를 나타내는 값을 설정합니다.</summary>
      <param name="fieldName">필드 이름입니다.</param>
      <param name="value">폼에서 렌더링된 필드를 지정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>클라이언트 유효성 검사 오류를 유효성 검사 요약에 동적으로 추가할 것인지 확인합니다.</summary>
      <returns>클라이언트 유효성 검사 오류를 유효성 검사 요약에 추가하려면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>유효성 검사 요약의 식별자를 가져오거나 설정합니다.</summary>
      <returns>유효성 검사 요약의 식별자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>폼에 대한 HTTP 요청 형식을 열거합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>GET 요청을 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>POST 요청을 지정합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체에 포함된 폼 값에 대한 값 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.FormValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>폼 값 공급자 개체의 새 인스턴스를 만드는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.FormValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트의 폼 값 공급자 개체를 반환합니다.</summary>
      <returns>폼 값 공급자 개체입니다.</returns>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>모든 전역 필터가 들어 있는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.GlobalFilterCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>지정된 필터를 전역 필터 컬렉션에 추가합니다.</summary>
      <param name="filter">필터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>지정된 필터 실행 순서를 사용하여 지정된 필터를 전역 필터 컬렉션에 추가합니다.</summary>
      <param name="filter">필터입니다.</param>
      <param name="order">필터 실행 순서입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>전역 필터 컬렉션에서 모든 필터를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>전역 필터 컬렉션에 필터가 있는지 확인합니다.</summary>
      <returns>
        <paramref name="filter" />가 전역 필터 컬렉션에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="filter">필터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>전역 필터 컬렉션의 필터 수를 가져옵니다.</summary>
      <returns>전역 필터 컬렉션의 필터 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>전역 필터 컬렉션 전체에서 반복되는 열거자를 반환합니다.</summary>
      <returns>전역 필터 컬렉션 전체에서 반복되는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>지정된 필터와 일치하는 모든 필터를 제거합니다.</summary>
      <param name="filter">삭제할 필터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다. </summary>
      <returns>전역 필터 컬렉션 전체에서 반복되는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>이 API는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns>전역 필터 컬렉션 전체에서 반복되는 열거자입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>전역 필터 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>전역 필터 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>전역 필터 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>동작 메서드에서 throw된 예외를 처리하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HandleErrorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>예외의 형식을 가져오거나 설정합니다.</summary>
      <returns>예외의 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>예외 정보를 표시하기 위한 마스터 뷰를 가져오거나 설정합니다.</summary>
      <returns>마스터 뷰입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>예외가 발생하는 경우 호출됩니다.</summary>
      <param name="filterContext">작업 필터 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>이 특성의 고유 식별자를 가져옵니다.</summary>
      <returns>이 특성의 고유 식별자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>예외 정보를 표시하기 위한 페이지 뷰를 가져오거나 설정합니다.</summary>
      <returns>페이지 뷰입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>동작 메서드에서 throw된 오류를 처리하기 위한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.HandleErrorInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exception">예외입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerName" /> 또는 <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>예외가 throw되었을 때 실행하고 있던 작업의 이름을 가져오거나 설정합니다.</summary>
      <returns>작업 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>예외를 throw한 동작 메서드가 들어 있는 컨트롤러의 이름을 가져오거나 설정합니다.</summary>
      <returns>컨트롤러의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>예외 개체를 가져오거나 설정합니다.</summary>
      <returns>예외 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>속성이나 필드 값을 숨겨진 input 요소로 렌더링해야 하는지를 나타내는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HiddenInputAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>숨겨진 input 요소의 값을 표시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>값을 표시해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>HTML5에 대한 날짜 렌더링 모드를 열거합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>현재 culture 서식입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>RFC 3339 서식입니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>뷰의 HTML 컨트롤 렌더링 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>지정된 뷰 컨텍스트와 뷰 데이터 컨테이너를 사용하여 <see cref="T:System.Web.Mvc.HtmlHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Web.Mvc.ViewContext" /> 또는 viewDataContainer 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>지정된 뷰 컨텍스트, 뷰 데이터 컨테이너 및 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.HtmlHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <param name="routeCollection">경로 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">하나 이상의 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>지정된 HTML 특성에서 밑줄 문자(_)를 하이픈(-)으로 바꿉니다.</summary>
      <returns>밑줄 문자가 하이픈으로 바뀐 HTML 특성입니다.</returns>
      <param name="htmlAttributes">HTML 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>폼을 제출할 때 유효성이 검사되는 숨겨진 폼 필드(위조 방지 토큰)를 생성합니다.</summary>
      <returns>생성된 폼 필드(위조 방지 토큰)입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>폼을 제출할 때 유효성이 검사되는 숨겨진 폼 필드(위조 방지 토큰)를 생성합니다.필드 값은 지정된 솔트 값을 사용하여 생성됩니다.</summary>
      <returns>생성된 폼 필드(위조 방지 토큰)입니다.</returns>
      <param name="salt">솔트 값입니다. 이 값은 비어 있지 않은 모든 문자열일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>폼을 제출할 때 유효성이 검사되는 숨겨진 폼 필드(위조 방지 토큰)를 생성합니다.필드 값은 지정된 솔트 값, 도메인 및 경로를 사용하여 생성됩니다.</summary>
      <returns>생성된 폼 필드(위조 방지 토큰)입니다.</returns>
      <param name="salt">솔트 값입니다. 이 값은 비어 있지 않은 모든 문자열일 수 있습니다.</param>
      <param name="domain">응용 프로그램 도메인입니다.</param>
      <param name="path">가상 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>지정된 특성 값을 HTML 인코딩된 문자열로 변환합니다.</summary>
      <returns>HTML 인코딩된 문자열입니다.값 매개 변수가 null이거나 비어 있으면 이 메서드는 빈 문자열을 반환합니다.</returns>
      <param name="value">인코딩할 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>지정된 특성 값을 HTML 인코딩된 문자열로 변환합니다.</summary>
      <returns>HTML 인코딩된 문자열입니다.값 매개 변수가 null이거나 비어 있으면 이 메서드는 빈 문자열을 반환합니다.</returns>
      <param name="value">인코딩할 문자열입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>클라이언트 유효성 검사를 사용하도록 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>클라이언트 유효성 검사가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>브라우저에서 클라이언트 스크립트를 사용하여 수행되는 입력 유효성 검사를 사용하도록 설정합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>클라이언트 유효성 검사를 사용하거나 사용하지 않도록 설정합니다.</summary>
      <param name="enabled">클라이언트 유효성 검사를 사용하도록 설정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>비간섭 JavaScript를 사용하거나 사용하지 않도록 설정합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>비간섭 JavaScript를 사용하거나 사용하지 않도록 설정합니다.</summary>
      <param name="enabled">비간섭 JavaScript 유효성 검사를 사용하도록 설정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>지정된 개체의 값을 HTML 인코딩된 문자열로 변환합니다.</summary>
      <returns>HTML 인코딩된 문자열입니다.</returns>
      <param name="value">인코딩할 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>지정된 문자열을 HTML 인코딩된 문자열로 변환합니다.</summary>
      <returns>HTML 인코딩된 문자열입니다.</returns>
      <param name="value">인코딩할 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>값의 형식을 지정합니다.</summary>
      <returns>형식이 지정된 값입니다.</returns>
      <param name="value">값입니다.</param>
      <param name="format">형식 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>지정된 요소 이름을 사용하여 HTML 요소 ID를 만듭니다.</summary>
      <returns>HTML 요소의 ID입니다.</returns>
      <param name="name">HTML 요소의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">name 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>지정된 요소 이름과 이름에서 점을 대체하는 문자열을 사용하여 HTML 요소 ID를 만듭니다.</summary>
      <returns>HTML 요소의 ID입니다.</returns>
      <param name="name">HTML 요소의 이름입니다.</param>
      <param name="idAttributeDotReplacement">name 매개 변수에서 점(.)을 대체하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">name 매개 변수 또는 idAttributeDotReplacement 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드에 연결되어 사용자가 통신 프로토콜, 호스트 이름 및 URL 조각을 지정할 수 있게 하는 HTML 앵커 요소(a 요소)를 생성합니다.</summary>
      <returns>지정된 동작 메서드에 연결되는 HTML 요소입니다.</returns>
      <param name="requestContext">HTTP 요청의 컨텍스트입니다.</param>
      <param name="routeCollection">URL 경로의 컬렉션입니다.</param>
      <param name="linkText">링크에 대해 표시할 텍스트 캡션입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="protocol">통신 프로토콜입니다(예: HTTP 또는 HTTPS).이 매개 변수가 null이면 프로토콜은 HTTP로 기본 설정됩니다.</param>
      <param name="hostName">호스트의 이름입니다.</param>
      <param name="fragment">조각 식별자입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드에 연결되는 HTML 앵커 요소(a 요소)를 생성합니다.</summary>
      <returns>지정된 동작 메서드에 연결되는 HTML 요소입니다.</returns>
      <param name="requestContext">HTTP 요청의 컨텍스트입니다.</param>
      <param name="routeCollection">URL 경로의 컬렉션입니다.</param>
      <param name="linkText">링크에 대해 표시할 텍스트 캡션입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 URL 경로에 연결되어 사용자가 통신 프로토콜, 호스트 이름 및 URL 조각을 지정할 수 있게 하는 HTML 앵커 요소(a 요소)를 생성합니다.</summary>
      <returns>지정된 URL 경로에 연결되는 HTML 요소입니다.</returns>
      <param name="requestContext">HTTP 요청의 컨텍스트입니다.</param>
      <param name="routeCollection">URL 경로의 컬렉션입니다.</param>
      <param name="linkText">링크에 대해 표시할 텍스트 캡션입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="protocol">통신 프로토콜입니다(예: HTTP 또는 HTTPS).이 매개 변수가 null이면 프로토콜은 HTTP로 기본 설정됩니다.</param>
      <param name="hostName">호스트의 이름입니다.</param>
      <param name="fragment">조각 식별자입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 URL 경로에 연결되는 HTML 앵커 요소(a 요소)를 생성합니다.</summary>
      <returns>지정된 URL 경로에 연결되는 HTML 요소입니다.</returns>
      <param name="requestContext">HTTP 요청의 컨텍스트입니다.</param>
      <param name="routeCollection">URL 경로의 컬렉션입니다.</param>
      <param name="linkText">링크에 대해 표시할 텍스트 캡션입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>폼 입력(GET 또는 POST)을 처리하는 HTTP 메서드를 문자열로 반환합니다.</summary>
      <returns>폼 메서드 문자열("get" 또는 "post")입니다.</returns>
      <param name="method">폼을 처리하는 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>HTML 입력 컨트롤 형식을 문자열로 반환합니다.</summary>
      <returns>입력 형식 문자열("checkbox", "hidden", "password", "radio" 또는 "text")입니다.</returns>
      <param name="inputType">열거된 입력 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>지정된 HTML name 특성을 사용하여 비가시적인 JavaScript 유효성 검사 특성의 컬렉션을 가져옵니다.</summary>
      <returns>비간섭 JavaScript 유효성 검사 특성의 컬렉션입니다.</returns>
      <param name="name">HTML name 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>지정된 HTML name 특성 및 모델 메타데이터를 사용하여 비가시적인 JavaScript 유효성 검사 특성의 컬렉션을 가져옵니다.</summary>
      <returns>비간섭 JavaScript 유효성 검사 특성의 컬렉션입니다.</returns>
      <param name="name">HTML name 특성입니다.</param>
      <param name="metadata">모델 메타데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>HTML5 날짜 렌더링 모드를 가져오거나 설정합니다.</summary>
      <returns>HTML5 날짜 렌더링 모드입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>클라이언트에서 사용한 지정된 HTTP 데이터 전송 메서드에 대한 재정의 메서드를 식별하는 숨겨진 input 요소를 반환합니다.</summary>
      <returns>클라이언트에서 사용한 HTTP 데이터 전송 메서드를 사용하는 재정의 메서드입니다.</returns>
      <param name="httpMethod">클라이언트에서 사용한 HTTP 데이터 전송 메서드입니다(DELETE, HEAD 또는 PUT).</param>
      <exception cref="T:System.ArgumentNullException">httpVerb 매개 변수가 "PUT", "DELETE" 또는 "HEAD"가 아닙니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>클라이언트에서 사용한 HTTP 데이터 전송 메서드를 나타내는 지정된 동사에 대한 재정의 메서드를 식별하는 숨겨진 input 요소를 반환합니다.</summary>
      <returns>클라이언트에서 사용한 HTTP 데이터 전송 메서드를 나타내는 동사를 사용하는 재정의 메서드입니다.</returns>
      <param name="httpVerb">클라이언트에서 사용한 HTTP 데이터 전송 메서드를 나타내는 동사입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpVerb 매개 변수가 "PUT", "DELETE" 또는 "HEAD"가 아닙니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>요소의 ID 특성에서 마침표를 대체하는 문자를 가져오거나 설정합니다.</summary>
      <returns>요소의 ID 특성에서 마침표를 대체하는 문자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>HTML로 인코딩되지 않은 태그를 반환합니다.</summary>
      <returns>인코딩되지 않은 HTML 태그입니다.</returns>
      <param name="value">HTML 태그입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>HTML로 인코딩되지 않은 태그를 반환합니다.</summary>
      <returns>인코딩되지 않은 HTML 태그입니다.</returns>
      <param name="value">HTML 태그입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>응용 프로그램에 대한 경로 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>응용 프로그램에 대한 URL 경로의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>비간섭 JavaScript를 사용하도록 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>비간섭 JavaScript가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>유효성 검사 오류가 발생한 경우 입력 필드의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>입력이 유효할 경우 입력 필드의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>유효성 검사 오류가 발생한 경우 오류 메시지의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>입력이 유효할 경우 유효성 검사 메시지의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>유효성 검사 요약 오류 메시지의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>입력이 유효할 경우 유효성 검사 요약의 스타일을 지정하는 데 사용되는 CSS 클래스의 이름입니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>뷰에 대한 컨텍스트 정보를 가져오거나 설정합니다.</summary>
      <returns>뷰의 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>현재 뷰 데이터 사전을 가져옵니다.</summary>
      <returns>뷰 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>뷰 데이터 컨테이너를 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터 컨테이너입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>강력한 형식의 뷰의 HTML 컨트롤 렌더링 지원을 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>지정된 뷰 컨텍스트와 뷰 데이터 컨테이너를 사용하여 <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>지정된 뷰 컨텍스트, 뷰 데이터 컨테이너 및 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="viewDataContainer">뷰 데이터 컨테이너입니다.</param>
      <param name="routeCollection">경로 컬렉션입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>강력한 형식의 뷰 데이터 사전을 가져옵니다.</summary>
      <returns>강력한 형식의 뷰 데이터 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>HTTP DELETE 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpDeleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드의 delete 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>HTTP 파일의 컬렉션에서 가져온 값에 사용할 값 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>HTTP 파일 컬렉션 값 공급자 개체의 새 인스턴스를 만드는 것을 담당하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 값 공급자 개체를 반환합니다.</summary>
      <returns>HTTP 파일 컬렉션 값 공급자입니다.</returns>
      <param name="controllerContext">HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>HTTP GET 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpGetAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드의 get 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>HTTP 요청이 HTTP HEAD 메서드가 되어야 함을 지정합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpHeadAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>요청된 리소스를 찾을 수 없음을 나타내는 데 사용되는 개체를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>상태 설명을 사용하여 <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusDescription">상태 설명입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>HTTP OPTIONS 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpOptionsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>HTTP PATCH 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpPatchAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>HTTP POST 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpPostAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드의 post 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>모델을 게시된 파일에 바인딩합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>모델을 바인딩합니다.</summary>
      <returns>바인딩된 값입니다.구현<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="bindingContext">바인딩 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">두 매개 변수 중 하나 이상이 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>HTTP PUT 요청만 처리하도록 동작 메서드를 제한하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpPutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>동작 메서드의 put 요청이 지정된 컨트롤러 컨텍스트에 적합한지 확인합니다.</summary>
      <returns>동작 메서드 요청이 지정된 컨트롤러 컨텍스트에 적합하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">동작 메서드에 대한 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>웹 요청 중에 클라이언트에서 보낸 HTTP 값을 포함하는 <see cref="T:System.Web.HttpRequestBase" /> 클래스를 확장합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>클라이언트에서 사용한 HTTP 데이터 전송 메서드 재정의를 검색합니다.</summary>
      <returns>클라이언트에서 사용한 HTTP 데이터 전송 메서드 재정의입니다.</returns>
      <param name="request">웹 요청 중에 클라이언트에서 보낸 HTTP 값을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.NotImplementedException">HTTP 데이터 전송 메서드 재정의가 구현되지 않았습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>특정 HTTP 응답 상태 코드 및 설명과 함께 작업 결과를 반환하는 방법을 설명합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>상태 코드를 사용하여 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusCode">상태 코드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>상태 코드와 상태 설명을 사용하여 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusCode">상태 코드입니다.</param>
      <param name="statusDescription">상태 설명입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>상태 코드를 사용하여 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusCode">상태 코드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>상태 코드와 상태 설명을 사용하여 <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusCode">상태 코드입니다.</param>
      <param name="statusDescription">상태 설명입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>HTTP 상태 코드를 가져옵니다.</summary>
      <returns>HTTP 상태 코드입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>HTTP 상태 설명을 가져옵니다.</summary>
      <returns>HTTP 상태 설명입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>권한이 없는 HTTP 요청의 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>상태 설명을 사용하여 <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="statusDescription">상태 설명입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>HTTP 동사를 열거합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>지정된 URI를 삭제하도록 요청합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>요청의 URI로 식별되는 정보 또는 엔터티를 검색합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>요청의 URI로 식별되는 정보 또는 엔터티에 대한 메시지 헤더를 검색합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>요청의 URI로 식별되는 요청/응답 체인에서 사용 가능한 통신 옵션에 대한 정보 요청을 나타냅니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>요청 엔터티에 설명된 변경 집합을 요청의 URI로 식별되는 리소스에 적용하도록 요청합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>URI에 추가하여 새 엔터티를 게시합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>URI로 식별되는 엔터티를 바꿉니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>작업 필터에 사용되는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>동작 메서드가 실행된 후 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>동작 메서드가 실행되기 전에 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>HTTP 요청에 대한 응답으로 작업을 호출하는 데 사용되는 작업 호출자에 대한 계약을 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 작업을 호출합니다.</summary>
      <returns>작업이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>권한 부여 필터에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>권한 부여가 필요한 경우 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>ASP.NET MVC 유효성 검사 프레임워크에서 런타임 시 유효성 검사기가 클라이언트 유효성 검사를 지원하는지 확인하는 방법을 설명합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>클래스에서 구현되는 경우 해당 클래스에 대한 클라이언트 유효성 검사 규칙을 반환합니다.</summary>
      <returns>이 유효성 검사기에 대한 클라이언트 유효성 검사 규칙입니다.</returns>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>컨트롤러에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 실행합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>종속성 주입을 사용하여 컨트롤러를 인스턴스화하는 방법에 대한 세분화된 제어를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>클래스에서 구현되는 경우 컨트롤러를 만듭니다.</summary>
      <returns>만든 컨트롤러입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controllerType">컨트롤러 형식입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>컨트롤러 팩터리에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>지정된 요청 컨텍스트를 사용하여 지정된 컨트롤러를 만듭니다.</summary>
      <returns>컨트롤러입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>컨트롤러의 세션 동작을 가져옵니다.</summary>
      <returns>컨트롤러의 세션 동작입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="controllerName">세션 동작을 가져오려는 컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>지정된 컨트롤러를 해제합니다.</summary>
      <param name="controller">컨트롤러입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>서비스 위치 및 종속성 확인을 단순화하는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>임의의 개체 생성을 지원하는 단일 등록 서비스를 확인합니다.</summary>
      <returns>요청된 서비스 또는 개체입니다.</returns>
      <param name="serviceType">요청된 서비스 또는 개체의 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>여러 번 등록된 서비스를 확인합니다.</summary>
      <returns>요청된 서비스입니다.</returns>
      <param name="serviceType">요청된 서비스의 형식입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>열거할 수 있는 기능이 있는 특수 <see cref="T:System.Web.Mvc.IValueProvider" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>접두사에서 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
      <param name="prefix">접두사입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>예외 필터에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>예외가 발생하는 경우 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>필터를 찾기 위한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>서비스 로케이터에서 모든 <see cref="T:System.Web.Mvc.IFilterProvider" /> 인스턴스를 포함하는 열거자를 반환합니다.</summary>
      <returns>서비스 로케이터에서 모든 <see cref="T:System.Web.Mvc.IFilterProvider" /> 인스턴스를 포함하는 열거자입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>
        <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" /> 클래스에 특성을 노출하기 위한 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>클래스에서 구현되는 경우 메타데이터를 모델 메타데이터 생성 프로세스에 제공합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>모델 바인더에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 모델을 값에 바인딩합니다.</summary>
      <returns>바인딩된 값입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="bindingContext">바인딩 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>
        <see cref="T:System.Web.Mvc.IModelBinder" /> 인터페이스를 구현하는 클래스에 대한 모델 바인딩의 동적 구현을 활성화하는 메서드를 정의합니다. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>지정된 형식에 대한 모델 바인더를 반환합니다.</summary>
      <returns>지정된 형식에 대한 모델 바인더입니다.</returns>
      <param name="modelType">모델 유형입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>필터 순서를 지정하는 멤버를 정의하고, 여러 필터가 허용되는지를 정의합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>클래스에서 구현되는 경우 여러 필터가 허용되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>여러 필터가 허용되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>클래스에서 구현되는 경우 필터 순서를 가져옵니다.</summary>
      <returns>필터 순서입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>입력 컨트롤의 형식을 열거합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>확인란입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>숨겨진 필드입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>암호 상자입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>라디오 단추입니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>텍스트 상자입니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>결과 필터에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>작업 결과가 실행된 후 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>작업 결과가 실행되기 전에 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>경로를 ASP.NET MVC 응용 프로그램의 영역과 연결합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>경로를 연결할 영역의 이름을 가져옵니다.</summary>
      <returns>경로를 연결할 영역의 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>다음 요청 시 표시되는 데이터를 저장하는 임시 데이터 공급자에 대한 계약을 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>임시 데이터를 로드합니다.</summary>
      <returns>임시 데이터입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>임시 데이터를 저장합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="values">값입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>요청 유효성 검사를 건너뛸 수 있는 <see cref="T:System.Web.Mvc.IValueProvider" /> 인터페이스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>지정된 키와 연결된 개체의 값을 검색합니다.</summary>
      <returns>지정된 키에 대한 개체 값입니다.</returns>
      <param name="key">키입니다.</param>
      <param name="skipValidation">유효성 검사를 건너뛰려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>ASP.NET MVC의 값 공급자에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>컬렉션이 지정된 접두사를 포함하는지 확인합니다.</summary>
      <returns>지정된 접두사가 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 개체를 검색합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">검색할 값 개체의 키입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>뷰에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>지정된 기록기 개체를 사용하여 지정된 뷰 컨텍스트를 렌더링합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="writer">기록기 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>뷰 데이터 사전에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>뷰 데이터 사전을 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>뷰 엔진에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 부분 뷰를 찾습니다.</summary>
      <returns>부분 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="useCache">뷰 엔진에서 캐시된 뷰를 반환하도록 지정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 뷰를 찾습니다.</summary>
      <returns>페이지 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewName">뷰의 이름입니다.</param>
      <param name="masterName">마스터의 이름입니다.</param>
      <param name="useCache">뷰 엔진에서 캐시된 뷰를 반환하도록 지정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 뷰를 해제합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="view">뷰입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>뷰 위치를 메모리에 캐시하기 위해 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>지정된 HTTP 컨텍스트와 캐시 키를 사용하여 뷰 위치를 가져옵니다.</summary>
      <returns>뷰 위치입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="key">캐시 키입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>지정된 HTTP 컨텍스트와 캐시 키를 사용하여 지정된 뷰 위치를 캐시에 삽입합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="key">캐시 키입니다.</param>
      <param name="virtualPath">가상 경로입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>종속성 주입을 사용하여 뷰 페이지를 만드는 방법에 대한 세분화된 제어를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>종속성 주입을 사용하여 뷰 페이지를 만드는 방법에 대한 세분화된 제어를 제공합니다.</summary>
      <returns>만든 뷰 페이지입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="type">컨트롤러의 형식입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>JavaScript 콘텐츠를 응답에 보냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.JavaScriptResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>스크립트를 가져오거나 설정합니다.</summary>
      <returns>스크립트입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>클라이언트의 HTTP GET 요청이 허용되는지 지정합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>클라이언트의 HTTP GET 요청이 허용됩니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>클라이언트의 HTTP GET 요청이 허용되지 않습니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>JSON 형식 콘텐츠를 응답에 보내는 데 사용되는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.JsonResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>콘텐츠 인코딩을 가져오거나 설정합니다.</summary>
      <returns>콘텐츠 인코딩입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>콘텐츠의 형식을 가져오거나 설정합니다.</summary>
      <returns>콘텐츠의 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>데이터를 가져오거나 설정합니다.</summary>
      <returns>데이터입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>클라이언트의 HTTP GET 요청이 허용되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>클라이언트의 HTTP GET 요청이 허용되는지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>최대 데이터 길이를 가져오거나 설정합니다.</summary>
      <returns>최대 데이터 길이입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>재귀 제한을 가져오거나 설정합니다.</summary>
      <returns>재귀 제한입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>동작 메서드가 JSON 형식의 텍스트를 주고받고, 동작 메서드의 매개 변수에 JSON 텍스트를 모델 바인딩할 수 있도록 합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.JsonValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 JSON 값 공급자 개체를 반환합니다.</summary>
      <returns>지정된 컨트롤러 컨텍스트에 대한 JSON 값 공급자 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>브라우저 요청을 LINQ <see cref="T:System.Data.Linq.Binary" /> 개체에 매핑합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>지정된 컨트롤러 컨텍스트와 바인딩 컨텍스트를 사용하여 모델을 바인딩합니다.</summary>
      <returns>바인딩된 데이터 개체입니다.모델을 바인딩할 수 없으면 이 메서드에서 null을 반환합니다.구현<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">컨트롤러가 작동하는 컨텍스트입니다.컨텍스트 정보에는 컨트롤러, HTTP 콘텐츠, 요청 컨텍스트 및 경로 데이터가 포함됩니다.</param>
      <param name="bindingContext">모델이 바인딩되는 컨텍스트입니다.컨텍스트에는 모델 개체, 모델 이름, 모델 형식, 속성 필터, 값 공급자 등의 정보가 포함됩니다.</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>MaxLengthAttribute 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>MaxLengthAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">MaxLength 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>최대 길이를 확인하기 위한 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>확인을 위한 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>MinLengthAttribute 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>MinLenghtAttribute 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">최소 길이 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>최소 길이를 확인하기 위한 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>확인을 위한 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>모델 형식을 모델 빌더 형식에 연결하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelBinderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="binderType">바인더의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binderType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>바인더의 형식을 가져오거나 설정합니다.</summary>
      <returns>바인더의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>모델 바인더의 인스턴스를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.IModelBinder" /> 인터페이스를 구현하는 개체에 대한 참조입니다.</returns>
      <exception cref="T:System.InvalidOperationException">모델 바인더의 인스턴스를 만드는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>바인더 형식별로 나열된 응용 프로그램의 모든 모델 바인더를 포함하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelBinderDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>모델 바인더 사전에 지정된 항목을 추가합니다.</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 인스턴스에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>지정된 키를 사용하여 모델 바인더 사전에 지정된 항목을 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">같은 키가 포함된 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>모델 바인더 사전에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>모델 바인더 사전에 지정된 값이 들어 있는지 확인합니다.</summary>
      <returns>
        <paramref name="item" />이 모델 바인더 사전에 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>모델 바인더 사전에 지정된 키가 포함된 요소가 들어 있는지 확인합니다.</summary>
      <returns>모델 바인더 사전에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에서 찾을 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 모델 바인더 사전의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 복사한 요소의 대상인 1차원 배열입니다.배열에는 0부터 시작하는 인덱스를 사용해야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열입니다.또는 <paramref name="arrayIndex" />가 <paramref name="array" />의 길이보다 크거나 같습니다.또는 소스 <see cref="T:System.Collections.Generic.ICollection`1" /> 개체의 요소 수가 <paramref name="arrayIndex" />에서 대상 배열 끝까지 사용 가능한 공간보다 큽니다. 또는 <paramref name="T" /> 형식을 대상 배열의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>모델 바인더 사전의 요소 수를 가져옵니다.</summary>
      <returns>모델 바인더 사전의 요소 수입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>기본 모델 바인더를 가져오거나 설정합니다.</summary>
      <returns>기본 모델 바인더입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>지정된 형식에 대한 모델 바인더를 검색합니다.</summary>
      <returns>모델 바인더입니다.</returns>
      <param name="modelType">검색할 모델의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>지정된 형식에 대한 모델 바인더를 검색하거나 기본 모델 바인더를 검색합니다.</summary>
      <returns>모델 바인더입니다.</returns>
      <param name="modelType">검색할 모델의 형식입니다.</param>
      <param name="fallbackToDefault">기본 모델 바인더를 검색하려면 true입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>모델 바인더 사전이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>모델 바인더 사전이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>
        <see cref="T:System.Web.Mvc.IModelBinder" /> 인터페이스를 구현하는 개체에서 지정된 키를 가져오거나 설정합니다.</summary>
      <returns>지정된 항목의 키입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>모델 바인더 사전의 키가 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>모델 바인더 사전의 키가 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>모델 바인더 사전에서 맨 처음 발견되는 지정된 요소를 제거합니다.</summary>
      <returns>
        <paramref name="item" />이 모델 바인더 사전에서 제거되었으면 true이고, 그렇지 않으면 false입니다.모델 바인더 사전에서 <paramref name="item" />을 찾을 수 없는 경우에도 false가 반환됩니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>모델 바인더 사전에서 지정된 키가 포함된 요소를 제거합니다.</summary>
      <returns>요소가 제거되었으면 true이고, 그렇지 않으면 false입니다.모델 바인더 사전에서 <paramref name="key" />를 찾을 수 없는 경우에도 false가 반환됩니다.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>지정된 키와 연결된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>모델 바인더 사전의 값이 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>모델 바인더 사전의 값이 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>모델 바인더 공급자 목록을 사용하여 <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">모델 바인더 공급자의 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>컬렉션에서 모든 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>지정된 형식의 모델 바인더를 반환합니다.</summary>
      <returns>지정된 형식의 모델 바인더입니다.</returns>
      <param name="modelType">모델 바인더의 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>지정된 인덱스에 있는 ModelBinderProviderCollection에 모델 바인더 공급자를 삽입합니다.</summary>
      <param name="index">인덱스입니다.</param>
      <param name="item">모델 바인더 공급자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>지정된 컬렉션 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>지정된 인덱스에 있는 모델 바인더 공급자 요소를 바꿉니다.</summary>
      <param name="index">인덱스입니다.</param>
      <param name="item">모델 바인더 공급자입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>모델 바인더 공급자에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>종속성 주입을 사용하지 않는 응용 프로그램의 모델 바인더 공급자에 대한 등록 지점을 제공합니다.</summary>
      <returns>모델 바인더 공급자 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>응용 프로그램의 모델 바인더에 대한 전역 액세스 권한을 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>응용 프로그램의 모델 바인더를 가져옵니다.</summary>
      <returns>응용 프로그램의 모델 바인더입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>모델 바인더가 작동하는 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelBindingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>바인딩 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.ModelBindingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="bindingContext">바인딩 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>바인더가 빈 접두사를 사용해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>바인더가 빈 접두사를 사용해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>모델을 가져오거나 설정합니다.</summary>
      <returns>모델입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>모델 메타데이터를 가져오거나 설정합니다.</summary>
      <returns>모델 메타데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>모델의 이름을 가져오거나 설정합니다.</summary>
      <returns>모델의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>모델의 상태를 가져오거나 설정합니다.</summary>
      <returns>모델의 상태입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>모델의 형식을 가져오거나 설정합니다.</summary>
      <returns>모델 유형입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>속성 필터를 가져오거나 설정합니다.</summary>
      <returns>속성 필터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>속성 메타데이터를 가져옵니다.</summary>
      <returns>속성 메타데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>값 공급자를 가져오거나 설정합니다.</summary>
      <returns>값 공급자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>모델 바인딩 중에 발생하는 오류를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>지정된 예외를 사용하여 <see cref="T:System.Web.Mvc.ModelError" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exception">예외입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>지정된 예외와 오류 메시지를 사용하여 <see cref="T:System.Web.Mvc.ModelError" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exception">예외입니다.</param>
      <param name="errorMessage">오류 메시지입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Web.Mvc.ModelError" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorMessage">오류 메시지입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>오류 메시지를 가져오거나 설정합니다.</summary>
      <returns>오류 메시지입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>예외 개체를 가져오거나 설정합니다.</summary>
      <returns>예외 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>
        <see cref="T:System.Web.Mvc.ModelError" /> 인스턴스의 컬렉션입니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelErrorCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>모델 오류 컬렉션에 지정된 <see cref="T:System.Exception" /> 개체를 추가합니다.</summary>
      <param name="exception">예외입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>모델 오류 컬렉션에 지정된 오류 메시지를 추가합니다.</summary>
      <param name="errorMessage">오류 메시지입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>데이터 모델의 일반 메타데이터, <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 클래스 및 <see cref="T:System.Web.Mvc.ModelValidator" /> 클래스에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">공급자입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
      <param name="propertyName">모델의 이름입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>모델에 대한 추가 메타데이터를 포함하는 사전을 가져옵니다.</summary>
      <returns>모델에 대한 추가 메타데이터를 포함하는 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>모델 컨테이너의 형식을 가져오거나 설정합니다.</summary>
      <returns>모델 컨테이너의 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>폼에 다시 게시된 빈 문자열을 null로 변환할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>폼에 다시 게시된 빈 문자열을 null로 변환하려면 true이고, 그렇지 않으면 false입니다.기본값은 true입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>데이터 형식에 대한 메타 정보를 가져오거나 설정합니다. </summary>
      <returns>데이터 형식에 대한 메타 정보입니다. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>기본 순서 값, 10000입니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>모델에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>모델에 대한 설명입니다.기본값은 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>모델의 표시 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 형식 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>모델의 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>모델의 편집 형식 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 편집 형식 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>모델의 <see cref="T:System.Linq.Expressions.Expression" /> 매개 변수에서 메타데이터를 반환합니다.</summary>
      <returns>메타데이터입니다.</returns>
      <param name="expression">모델을 식별하는 식입니다.</param>
      <param name="viewData">뷰 데이터 사전입니다.</param>
      <typeparam name="TParameter">매개 변수의 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>모델의 식 매개 변수에서 메타데이터를 가져옵니다.</summary>
      <returns>모델의 메타데이터입니다.</returns>
      <param name="expression">모델을 식별하는 식입니다.</param>
      <param name="viewData">뷰 데이터 사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>모델의 표시 이름을 가져옵니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>모델에 대한 간단한 설명을 반환합니다.</summary>
      <returns>모델에 대한 간단한 설명입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>모델의 유효성 검사기 목록을 가져옵니다.</summary>
      <returns>모델의 유효성 검사기 목록입니다.</returns>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>관련 HTML 요소를 사용해 모델 개체를 렌더링할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델 개체가 포함된 관련 HTML 요소를 개체에 포함하려면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>모델이 복합 형식인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>MVC 프레임워크에서 모델이 복합 형식으로 간주되는지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>형식이 nullable인지를 나타내는 값을 가져옵니다.</summary>
      <returns>형식이 nullable이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>모델이 읽기 전용인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>모델이 필요한지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델이 필요하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>모델의 값을 가져옵니다.</summary>
      <returns>모델의 값입니다.<see cref="T:System.Web.Mvc.ModelMetadata" />에 대한 자세한 내용은 Brad Wilson의 블로그에서 ASP.NET MVC 2 Templates, Part 2: ModelMetadata 항목을 참조하십시오.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>모델의 형식을 가져옵니다.</summary>
      <returns>모델 유형입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>null 값에 대해 표시할 문자열을 가져오거나 설정합니다.</summary>
      <returns>null 값에 대해 표시할 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>현재 메타데이터의 순서를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>현재 메타데이터의 순서 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>모델의 속성을 설명하는 모델 메타데이터 개체의 컬렉션을 가져옵니다.</summary>
      <returns>모델의 속성을 설명하는 모델 메타데이터 개체의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>속성 이름을 가져옵니다.</summary>
      <returns>속성 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>공급자를 가져오거나 설정합니다.</summary>
      <returns>공급자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>요청 유효성 검사를 사용하도록 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>요청 유효성 검사가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>짧은 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>짧은 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>목록 뷰 및 상세 뷰와 같은 읽기 전용 뷰에 속성을 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>읽기 전용 뷰에 모델을 표시해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>편집 가능한 뷰에 모델을 표시해야 하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>편집 가능한 뷰에 모델을 표시해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>모델의 단순 표시 문자열을 가져오거나 설정합니다.</summary>
      <returns>모델의 단순 표시 문자열입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>이 모델에 사용할 템플릿을 제안하는 힌트를 가져오거나 설정합니다.</summary>
      <returns>이 모델에 사용할 템플릿을 제안하는 힌트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>워터마크로 사용할 수 있는 값을 가져오거나 설정합니다.</summary>
      <returns>워터마크입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>사용자 지정 메타데이터 공급자에 대한 추상 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>파생 클래스에서 재정의할 경우 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 클래스에서 파생되는 개체의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>모델의 각 속성에 대한 <see cref="T:System.Web.Mvc.ModelMetadata" /> 개체를 가져옵니다.</summary>
      <returns>모델의 각 속성에 대한 <see cref="T:System.Web.Mvc.ModelMetadata" /> 개체입니다.</returns>
      <param name="container">컨테이너입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>지정된 속성에 대한 메타데이터를 가져옵니다.</summary>
      <returns>속성에 대한 <see cref="T:System.Web.Mvc.ModelMetadata" /> 개체입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="containerType">컨테이너의 유형입니다.</param>
      <param name="propertyName">메타데이터 모델을 가져올 속성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>지정된 모델 접근자와 모델 형식에 대한 메타데이터를 가져옵니다.</summary>
      <returns>지정된 모델 접근자와 모델 형식에 대한 <see cref="T:System.Web.Mvc.ModelMetadata" /> 개체입니다.</returns>
      <param name="modelAccessor">모델 접근자입니다.</param>
      <param name="modelType">모델 유형입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>현재 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 인스턴스에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>현재 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>현재 <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>동작 메서드 인수의 속성 또는 인수 자체에 대한 모델 바인딩의 상태를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>모델 바인딩 중에 발생한 오류를 포함하는 <see cref="T:System.Web.Mvc.ModelErrorCollection" /> 개체를 반환합니다.</summary>
      <returns>오류입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>모델 바인딩 중에 바인딩되는 값을 캡슐화하는 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 개체를 반환합니다.</summary>
      <returns>값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>유효성 검사 정보를 비롯하여 게시된 폼을 동작 메서드에 바인딩하려는 상태를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>지정된 모델 상태 사전에서 복사한 값을 사용하여 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dictionary">모델 상태 사전입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary " /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>모델 상태 사전에 지정된 항목을 추가합니다.</summary>
      <param name="item">모델 상태 사전에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">모델 상태 사전이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>모델 상태 사전에 지정된 키와 값이 있는 요소를 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">모델 상태 사전이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">모델 상태 사전에 지정된 키가 포함된 요소가 이미 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>지정된 키에 연결된 모델 상태 사전에 대한 오류 컬렉션에 지정된 모델 오류를 추가합니다.</summary>
      <param name="key">키입니다.</param>
      <param name="exception">예외입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>지정된 키에 연결된 모델 상태 사전에 대한 오류 컬렉션에 지정된 오류 메시지를 추가합니다.</summary>
      <param name="key">키입니다.</param>
      <param name="errorMessage">오류 메시지입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>모델 상태 사전에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">모델 상태 사전이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>모델 상태 사전에 특정 값이 들어 있는지 확인합니다.</summary>
      <returns>
        <paramref name="item" />이 모델 상태 사전에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">모델 상태 사전에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>모델 상태 사전에 지정된 키가 들어 있는지 확인합니다.</summary>
      <returns>모델 상태 사전에 지정된 키가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">모델 상태 사전에서 찾을 키입니다. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>지정된 인덱스에서 시작하여 모델 상태 사전의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체에서 복사한 요소의 대상인 1차원 배열입니다.배열에는 0부터 시작하는 인덱스를 사용해야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열입니다.또는 <paramref name="arrayIndex" />가 <paramref name="array" />의 길이보다 크거나 같습니다.또는 소스 컬렉션의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큽니다.또는 <paramref name="T" /> 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>컬렉션에 있는 키/값 쌍의 개수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 키/값 쌍의 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>모델 상태 사전의 이 인스턴스가 유효한지를 나타내는 값을 가져옵니다.</summary>
      <returns>이 인스턴스가 유효하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>지정된 키에 연결되었거나 지정된 키가 접두사로 사용된 <see cref="T:System.Web.Mvc.ModelError" /> 개체가 있는지 확인합니다.</summary>
      <returns>지정된 키에 연결된 값이 모델 상태 사전에 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>지정된 키와 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>모델 상태 항목입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>사전의 키가 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>모델 상태 사전의 키가 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>지정된 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 값을 이 사전에 복사하고 키가 동일한 경우 기존 값을 덮어씁니다.</summary>
      <param name="dictionary">사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>모델 상태 사전에서 맨 처음 발견되는 지정된 개체를 제거합니다.</summary>
      <returns>
        <paramref name="item" />이 모델 상태 사전에서 제거되었으면 true이고, 그렇지 않으면 false입니다.모델 상태 사전에서 <paramref name="item" />을 찾을 수 없는 경우에도 false가 반환됩니다.</returns>
      <param name="item">모델 상태 사전에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">모델 상태 사전이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>모델 상태 사전에서 지정된 키가 있는 요소를 제거합니다.</summary>
      <returns>요소가 제거되었으면 true이고, 그렇지 않으면 false입니다.모델 상태 사전에서 <paramref name="key" />를 찾을 수 없는 경우에도 false가 반환됩니다.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">모델 상태 사전이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>지정된 값 공급자 사전을 사용해 지정된 키의 값을 설정합니다.</summary>
      <param name="key">키입니다.</param>
      <param name="value">값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>지정된 키에 연결된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>사전의 값이 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>모델 상태 사전의 값이 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>유효성 검사 결과에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelValidationResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>멤버의 이름을 가져오거나 설정합니다.</summary>
      <returns>멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>유효성 검사 결과 메시지를 가져오거나 설정합니다.</summary>
      <returns>유효성 검사 결과 메시지입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>유효성 검사 논리를 구현하기 위한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelValidator" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
      <param name="metadata">메타데이터입니다.</param>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>컨트롤러 컨텍스트를 가져옵니다.</summary>
      <returns>컨트롤러 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>파생 클래스에서 구현되는 경우 클라이언트 유효성 검사에 대한 메타데이터를 반환합니다.</summary>
      <returns>클라이언트 유효성 검사에 대한 메타데이터입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>모델에 대한 복합 모델 유효성 검사기를 반환합니다.</summary>
      <returns>모델에 대한 복합 모델 유효성 검사기입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>모델 속성이 필요한지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>모델 속성이 필요하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>모델 유효성 검사기에 대한 메타데이터를 가져옵니다.</summary>
      <returns>모델 유효성 검사기에 대한 메타데이터입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>파생 클래스에서 구현될 때 개체의 유효성을 검사합니다.</summary>
      <returns>유효성 검사 결과의 목록입니다.</returns>
      <param name="container">컨테이너입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>모델 유효성 검사기 목록을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>파생 클래스에서 구현될 때 <see cref="T:System.Web.Mvc.ModelValidatorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>유효성 검사기 목록을 가져옵니다.</summary>
      <returns>유효성 검사기 목록입니다.</returns>
      <param name="metadata">메타데이터입니다.</param>
      <param name="context">컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>모델 유효성 검사 공급자 목록을 사용하여 <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">모델 유효성 검사 공급자의 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>컬렉션에서 모든 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>모델 유효성 검사기 목록을 반환합니다.</summary>
      <returns>모델 유효성 검사기 목록입니다.</returns>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>컬렉션에 모델 유효성 검사기 공급자를 삽입합니다.</summary>
      <param name="index">0부터 시작하는 인덱스이며 항목을 삽입해야 합니다.</param>
      <param name="item">삽입할 모델 유효성 검사기 공급자 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>지정된 컬렉션 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>지정된 인덱스에 있는 모델 유효성 검사기 공급자 요소를 바꿉니다.</summary>
      <param name="index">바꿀 모델 유효성 검사기 공급자 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">모델 유효성 검사기 공급자 요소의 새 값입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>현재 유효성 검사 공급자에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>모델 유효성 검사기 공급자 컬렉션을 가져옵니다.</summary>
      <returns>모델 유효성 검사기 공급자 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>사용자가 여러 항목을 선택할 수 있는 항목 목록을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>목록에 포함할 지정된 항목을 사용하여 <see cref="T:System.Web.Mvc.MultiSelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>목록에 포함할 지정된 항목과 선택한 값을 사용하여 <see cref="T:System.Web.Mvc.MultiSelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="selectedValues">선택한 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>목록에 포함할 항목, 데이터 값 필드 및 데이터 텍스트 필드를 사용하여 <see cref="T:System.Web.Mvc.MultiSelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="dataValueField">데이터 값 필드입니다.</param>
      <param name="dataTextField">데이터 텍스트 필드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>목록에 포함할 항목, 데이터 값 필드, 데이터 텍스트 필드 및 선택한 값을 사용하여 <see cref="T:System.Web.Mvc.MultiSelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="dataValueField">데이터 값 필드입니다.</param>
      <param name="dataTextField">데이터 텍스트 필드입니다.</param>
      <param name="selectedValues">선택한 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>데이터 텍스트 필드를 가져오거나 설정합니다.</summary>
      <returns>데이터 텍스트 필드입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>데이터 값 필드를 가져오거나 설정합니다.</summary>
      <returns>데이터 값 필드입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>목록의 항목을 가져오거나 설정합니다.</summary>
      <returns>목록의 항목입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>선택한 값을 가져오거나 설정합니다.</summary>
      <returns>선택한 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>파생 클래스에서 구현되는 경우 하나 이상의 필터 인터페이스 구현, 필터 순서 및 필터 범위에 대한 참조를 포함하는 메타데이터 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.MvcFilter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>
        <see cref="T:System.Web.Mvc.MvcFilter" /> 클래스의 새 인스턴스를 초기화한 다음 필터 순서를 지정하고 여러 필터를 허용할 것인지를 지정합니다.</summary>
      <param name="allowMultiple">같은 형식의 필터를 여러 개 허용하도록 지정하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="order">필터 순서입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>필터 특성의 인스턴스를 둘 이상 지정할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>필터 특성의 인스턴스를 둘 이상 지정할 수 있으면 true이고, 그렇지 않으면 false입니다.구현<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>필터가 적용되는 순서를 나타내는 값을 가져옵니다.</summary>
      <returns>필터가 적용되는 순서를 나타내는 값입니다.구현<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>HTTP 요청을 처리할 컨트롤러를 선택합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>
        <see cref="T:System.Web.Mvc.MvcHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>지정된 HTTP 컨텍스트를 사용하여 버전 헤더를 추가합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백 메서드입니다.</param>
      <param name="state">비동기 개체의 상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>기본 HTTP 컨텍스트를 사용하여 비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백 메서드입니다.</param>
      <param name="state">비동기 개체의 상태입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>MVC 응답 헤더를 사용하지 않도록 설정했는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>MVC 응답 헤더를 사용할 수 없으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>비동기 요청 처리가 종료될 때 ASP.NET에서 호출됩니다.</summary>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>다른 요청에서 <see cref="T:System.Web.IHttpHandler" /> 인스턴스를 사용할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.IHttpHandler" /> 인스턴스를 다시 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>ASP.NET MVC 버전의 헤더 이름을 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>지정된 HTTP 요청 컨텍스트를 사용하여 요청을 처리합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>지정된 기본 HTTP 요청 컨텍스트를 사용하여 요청을 처리합니다.</summary>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>요청 컨텍스트를 가져옵니다.</summary>
      <returns>요청 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>기본 HTTP 컨텍스트를 사용하여 비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="context">HTTP 컨텍스트입니다.</param>
      <param name="cb">비동기 콜백 메서드입니다.</param>
      <param name="extraData">데이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>비동기 요청 처리가 종료될 때 ASP.NET에서 호출됩니다.</summary>
      <param name="result">비동기 결과입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>다른 요청에서 <see cref="T:System.Web.IHttpHandler" /> 인스턴스를 사용할 수 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.IHttpHandler" /> 인스턴스를 다시 사용할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>
        <see cref="T:System.Web.IHttpHandler" /> 인터페이스를 구현하는 사용자 지정 HTTP 처리기를 사용하여 HTTP 웹 요청을 처리할 수 있도록 합니다.</summary>
      <param name="httpContext">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체(예: Request, Response, Session 및 Server)에 대한 참조를 제공하는 <see cref="T:System.Web.HttpContext" /> 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>다시 인코딩되지 않아야 하는 HTML 인코딩된 문자열을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.MvcHtmlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">만들 문자열입니다.값을 할당하지 않으면 빈 문자열 값을 사용하여 개체가 만들어집니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>지정된 텍스트 값을 사용하여 HTML 인코딩된 문자열을 만듭니다.</summary>
      <returns>HTML 인코딩된 문자열입니다.</returns>
      <param name="value">만들 문자열의 값입니다.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>빈 HTML 문자열을 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>지정된 문자열에 콘텐츠가 포함되어 있는지, 또는 null이거나 비어 있는지 확인합니다.</summary>
      <returns>문자열이 null이거나 비어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">문자열입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>HTTP 요청을 확인하고 처리합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.MvcHttpHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백 메서드입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="httpContext">기본 HTTP 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백 메서드입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>비동기 요청 처리가 종료될 때 ASP.NET에서 호출됩니다.</summary>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>비동기 요청 처리를 시작하기 위해 ASP.NET에서 호출됩니다.</summary>
      <returns>비동기 호출의 상태입니다.</returns>
      <param name="context">컨텍스트입니다.</param>
      <param name="cb">비동기 콜백 메서드입니다.</param>
      <param name="extraData">데이터를 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>비동기 요청 처리가 종료될 때 ASP.NET에서 호출됩니다.</summary>
      <param name="result">비동기 작업의 상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>HTTP 요청을 확인하고 처리합니다.</summary>
      <param name="httpHandler">HTTP 처리기입니다.</param>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>IHttpHandler 인터페이스를 구현하는 개체를 만들고 이 개체로 요청 컨텍스트를 전달합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.MvcRouteHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>지정된 팩터리 컨트롤러 개체를 사용하여 <see cref="T:System.Web.Mvc.MvcRouteHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerFactory">컨트롤러 팩터리입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>지정된 HTTP 컨텍스트를 사용하여 HTTP 처리기를 반환합니다.</summary>
      <returns>HTTP 처리기입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>세션 동작을 반환합니다.</summary>
      <returns>세션 동작입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 사용하여 HTTP 처리기를 반환합니다.</summary>
      <returns>HTTP 처리기입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>
        <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" /> 파일의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Razor 호스트를 만듭니다.</summary>
      <returns>Razor 호스트입니다.</returns>
      <param name="virtualPath">대상 파일의 가상 경로입니다.</param>
      <param name="physicalPath">대상 파일의 실제 경로입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>컬렉션을 지정된 사전에 복사할 수 있도록 NameValueCollection 개체를 확장합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 컬렉션을 지정된 대상에 복사합니다.</summary>
      <param name="collection">컬렉션입니다.</param>
      <param name="destination">대상입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>지정된 컬렉션을 지정된 대상에 복사하고 선택적으로 이전 항목을 바꿉니다.</summary>
      <param name="collection">컬렉션입니다.</param>
      <param name="destination">대상입니다.</param>
      <param name="replaceEntries">이전 항목을 바꾸려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체에서 값을 가져오는 값 공급자에 대한 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>유효성 검사를 하지 않은 지정된 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection">공급자를 초기화하는 데 사용되는 값을 포함하는 컬렉션입니다.</param>
      <param name="unvalidatedCollection">공급자를 초기화하는 데 사용되는 값을 포함하는 컬렉션입니다.이 컬렉션은 유효성을 검사하지 않습니다.</param>
      <param name="culture">대상 culture에 대한 정보를 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection">공급자를 초기화하는 데 사용되는 값을 포함하는 컬렉션입니다.</param>
      <param name="culture">대상 culture에 대한 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>컬렉션이 지정된 접두사를 포함하는지 확인합니다.</summary>
      <returns>지정된 접두사가 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>지정된 접두사를 사용하여 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
      <param name="prefix">접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">검색할 값 개체의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>지정된 키와 유효성 검사 지시문을 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">키입니다.</param>
      <param name="skipValidation">유효성 검사를 건너뛰려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>
        <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" /> 특성에 편리한 래퍼를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>컨트롤러 메서드가 동작 메서드가 아님을 표시하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.NonActionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 특성이 동작 메서드가 아닌 메서드를 표시하는지 확인합니다.</summary>
      <returns>특성이 동작 메서드가 아닌 유효한 메서드를 표시하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="methodInfo">메서드 정보입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>출력이 캐시될 동작 메서드를 표시하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OutputCacheAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>캐시 프로필 이름을 가져오거나 설정합니다.</summary>
      <returns>캐시 프로필 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>자식 동작 캐시를 가져오거나 설정합니다.</summary>
      <returns>자식 동작 캐시입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>캐시 시간(초)을 가져오거나 설정합니다.</summary>
      <returns>캐시 기간입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>자식 동작 캐시가 활성 상태인지를 나타내는 값을 반환합니다.</summary>
      <returns>자식 동작 캐시가 활성 상태이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>위치를 가져오거나 설정합니다.</summary>
      <returns>위치를 나타냅니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>캐시를 저장할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>캐시를 저장해야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>이 메서드는 <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />의 구현이며 ASP.NET MVC 인프라를 지원합니다.코드에서 직접 사용할 수는 없습니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>이 메서드는 <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />의 구현이며 ASP.NET MVC 인프라를 지원합니다.코드에서 직접 사용할 수는 없습니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>이 메서드는 <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" />의 구현이며 ASP.NET MVC 인프라를 지원합니다.코드에서 직접 사용할 수는 없습니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>이 메서드는 <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />의 구현이며 ASP.NET MVC 인프라를 지원합니다.코드에서 직접 사용할 수는 없습니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>작업 결과가 실행되기 전에 호출됩니다.</summary>
      <param name="filterContext">
        <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> 사용에 대한 정보를 캡슐화하는 필터 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>SQL 종속성을 가져오거나 설정합니다.</summary>
      <returns>SQL 종속성입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>vary-by-content 인코딩을 가져오거나 설정합니다.</summary>
      <returns>vary-by-content 인코딩입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>vary-by-custom 값을 가져오거나 설정합니다.</summary>
      <returns>vary-by-custom 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>vary-by-header 값을 가져오거나 설정합니다.</summary>
      <returns>vary-by-header 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>vary-by-param 값을 가져오거나 설정합니다.</summary>
      <returns>vary-by-param 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>재정의 필터와 연관된 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>이 인스턴스에 대해 재정의할 필터를 가져옵니다.</summary>
      <returns>이 인스턴스에 대해 재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>인증과 연관된 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>이 인스턴스에 대해 재정의할 필터를 가져옵니다.</summary>
      <returns>이 인스턴스에 대해 재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>권한 부여와 연관된 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>이 인스턴스에 대해 재정의할 필터를 가져옵니다.</summary>
      <returns>이 인스턴스에 대해 재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>예외 필터와 연관된 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>이 인스턴스에 대해 재정의할 필터를 가져옵니다.</summary>
      <returns>이 인스턴스에 대해 재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>결과 필터와 연관된 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>이 인스턴스에 대해 재정의할 필터를 가져옵니다.</summary>
      <returns>이 인스턴스에 대해 재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>동작 메서드 매개 변수를 데이터 모델에 바인딩하기 위한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ParameterBindingInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>모델 바인더를 가져옵니다.</summary>
      <returns>모델 바인더입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>바인딩을 사용할 수 없는 속성 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns>제외 목록입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>바인딩을 사용할 수 있는 속성 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns>포함 목록입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>MVC 프레임워크에서 작업 매개 변수나 모델 속성에 값을 바인딩할 때 사용할 접두사를 가져옵니다.</summary>
      <returns>접두사입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>매개 변수를 설명하는 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ParameterDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>작업 설명자를 가져옵니다.</summary>
      <returns>작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>바인딩 정보를 가져옵니다.</summary>
      <returns>바인딩 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>매개 변수의 기본값을 가져옵니다.</summary>
      <returns>매개 변수의 기본값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 사용자 지정 특성 형식의 인스턴스가 하나 이상 정의되어 있는지를 나타냅니다.</summary>
      <returns>이 멤버에 대해 사용자 지정 특성 형식이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>매개 변수의 이름을 가져옵니다.</summary>
      <returns>매개 변수의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>매개 변수의 유형을 가져옵니다.</summary>
      <returns>매개 변수의 유형입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>부분 뷰를 응답에 보내는 데 사용되는 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.PartialViewResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>뷰를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 개체를 반환합니다.</summary>
      <returns>뷰 엔진 결과입니다.</returns>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <exception cref="T:System.InvalidOperationException">메서드가 뷰를 찾으려고 시도하는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>ASP.NET Razor 응용 프로그램 시작 전 코드에 대한 등록 지점을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Razor 응용 프로그램 시작 전 코드를 등록합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체에 포함된 쿼리 문자열에 대한 값 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.QueryStringValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>쿼리 문자열 값 공급자 개체의 새 인스턴스를 만드는 작업을 담당하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 값 공급자 개체를 반환합니다.</summary>
      <returns>쿼리 문자열 값 공급자 개체입니다.</returns>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">범위 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>범위를 확인하기 위한 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>범위를 확인하기 위한 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Razor 구문이 있는 뷰를 만드는 데 사용된 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <see cref="T:System.Web.Mvc.RazorView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
      <param name="layoutPath">레이아웃 또는 마스터 페이지입니다.</param>
      <param name="runViewStartPages">뷰 시작 파일을 뷰 전에 실행해야 하는지를 나타내는 값입니다.</param>
      <param name="viewStartFileExtensions">뷰 시작 파일을 조회할 때 사용할 확장명의 집합입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>뷰 페이지 활성기를 사용하여 <see cref="T:System.Web.Mvc.RazorView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
      <param name="layoutPath">레이아웃 또는 마스터 페이지입니다.</param>
      <param name="runViewStartPages">뷰 시작 파일을 뷰 전에 실행해야 하는지를 나타내는 값입니다.</param>
      <param name="viewStartFileExtensions">뷰 시작 파일을 조회할 때 사용할 확장명의 집합입니다.</param>
      <param name="viewPageActivator">뷰 페이지 활성기입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>레이아웃 또는 마스터 페이지를 가져옵니다.</summary>
      <returns>레이아웃 또는 마스터 페이지입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>지정된 기록기 및 <see cref="T:System.Web.Mvc.WebViewPage" /> 인스턴스를 사용하여 지정된 뷰 컨텍스트를 렌더링합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
      <param name="writer">응답에 뷰를 렌더링하는 데 사용되는 기록기입니다.</param>
      <param name="instance">
        <see cref="T:System.Web.Mvc.WebViewPage" /> 인스턴스입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>뷰 시작 파일을 뷰 전에 실행해야 하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>뷰 시작 파일을 뷰 전에 실행해야 하는지를 나타내는 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>뷰 시작 파일을 조회할 때 사용할 파일 확장명의 집합을 가져오거나 설정합니다.</summary>
      <returns>뷰 시작 파일을 조회할 때 사용할 파일 확장명의 집합입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>ASP.NET Razor 구문을 사용하는 웹 페이지를 렌더링하는 데 사용되는 뷰 엔진을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RazorViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>뷰 페이지 활성기를 사용하여 <see cref="T:System.Web.Mvc.RazorViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewPageActivator">뷰 페이지 활성기입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트와 부분 경로를 사용하여 부분 뷰를 만듭니다.</summary>
      <returns>부분 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialPath">부분 뷰의 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>지정된 컨트롤러 컨텍스트, 뷰의 경로 및 마스터 뷰의 경로를 사용하여 뷰를 만듭니다.</summary>
      <returns>뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰에 대한 경로입니다.</param>
      <param name="masterPath">마스터 뷰에 대한 경로입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>지정된 URI로 리디렉션하여 응용 프로그램 작업의 처리를 제어합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url">대상 URL입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>지정된 URL과 영구 리디렉션 플래그를 사용하여 <see cref="T:System.Web.Mvc.RedirectResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url">URL입니다.</param>
      <param name="permanent">리디렉션이 영구적이어야 하는지를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>리디렉션이 영구적이어야 하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>리디렉션이 영구적이어야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>대상 URL을 가져오거나 설정합니다.</summary>
      <returns>대상 URL입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>지정된 경로 값 사전을 사용하여 리디렉션을 수행하는 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 이름 및 경로 값을 사용하여 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="routeName">경로의 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>지정된 경로 이름, 경로 값 및 영구 리디렉션 플래그를 사용하여 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="routeName">경로의 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
      <param name="permanent">리디렉션이 영구적이어야 하는지를 나타내는 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 값을 사용하여 <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ActionResult" /> 클래스에서 상속되는 사용자 지정 형식을 사용하여 동작 메서드의 결과를 처리할 수 있도록 합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>리디렉션이 영구적이어야 하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>리디렉션이 영구적이어야 하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>경로의 이름을 가져오거나 설정합니다.</summary>
      <returns>경로의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>경로 값을 가져오거나 설정합니다.</summary>
      <returns>경로 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>반영된 동작 메서드를 설명하는 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>
        <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodInfo">동작 메서드 정보입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerDescriptor">컨트롤러 설명자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="methodInfo" /> 또는 <paramref name="controllerDescriptor" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>작업의 이름을 가져옵니다.</summary>
      <returns>작업 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>컨트롤러 설명자를 가져옵니다.</summary>
      <returns>컨트롤러 설명자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드 매개 변수를 사용하여 지정된 컨트롤러 컨텍스트를 실행합니다.</summary>
      <returns>작업 반환 값입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> 또는 <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시를 사용하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>동작 메서드의 매개 변수를 검색합니다.</summary>
      <returns>동작 메서드의 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>작업 선택기를 검색합니다.</summary>
      <returns>작업 선택기입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 사용자 지정 특성 형식의 인스턴스가 하나 이상 정의되어 있는지를 나타냅니다.</summary>
      <returns>이 멤버에 대해 사용자 지정 특성 형식이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>동작 메서드 정보를 가져오거나 설정합니다.</summary>
      <returns>동작 메서드 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>초기화 지연을 사용해 반영된 동작 설명자의 고유 ID를 가져옵니다.</summary>
      <returns>고유 ID입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>반영된 컨트롤러를 설명하는 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerType">컨트롤러의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerType" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>컨트롤러의 형식을 가져옵니다.</summary>
      <returns>컨트롤러의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 지정된 작업을 찾습니다.</summary>
      <returns>작업에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>컨트롤러에 대한 작업 목록을 반환합니다.</summary>
      <returns>컨트롤러에 대한 작업 설명자 목록입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시를 사용하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 사용자 지정 특성 형식의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>이 멤버에 대해 사용자 지정 특성 형식이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>반영된 동작 메서드 매개 변수를 설명하는 정보를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>
        <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameterInfo">매개 변수 정보입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameterInfo" /> 또는 <paramref name="actionDescriptor" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>작업 설명자를 가져옵니다.</summary>
      <returns>작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>바인딩 정보를 가져옵니다.</summary>
      <returns>바인딩 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>반영된 매개 변수의 기본값을 가져옵니다.</summary>
      <returns>반영된 매개 변수의 기본값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.TypeLoadException">사용자 지정 특성 형식을 로드할 수 없습니다.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">이 멤버에 대해 정의된 <paramref name="attributeType" /> 형식의 특성이 여러 개 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 사용자 지정 특성 형식의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>이 멤버에 대해 사용자 지정 특성 형식이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>매개 변수 정보를 가져오거나 설정합니다.</summary>
      <returns>매개 변수 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>매개 변수의 이름을 가져옵니다.</summary>
      <returns>매개 변수의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>매개 변수의 유형을 가져옵니다.</summary>
      <returns>매개 변수의 유형입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>
        <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">정규식 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>정규식 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>정규식 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>jQuery 유효성 검사 플러그 인 원격 유효성 검사기를 사용하는 특성을 제공합니다. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RemoteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>지정된 경로 이름을 사용하여 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="routeName">경로 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>지정된 동작 메서드 이름과 컨트롤러 이름을 사용하여 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">동작 메서드의 이름입니다.</param>
      <param name="controller">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>지정된 동작 메서드 이름, 컨트롤러 이름 및 영역 이름을 사용하여 <see cref="T:System.Web.Mvc.RemoteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">동작 메서드의 이름입니다.</param>
      <param name="controller">컨트롤러의 이름입니다.</param>
      <param name="areaName">영역 이름입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>유효성 검사에 필요한 추가 필드를 가져오거나 설정합니다.</summary>
      <returns>유효성 검사에 필요한 추가 필드입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>쉼표로 구분된 유효성 검사 필드 이름의 문자열을 반환합니다.</summary>
      <returns>쉼표로 구분된 유효성 검사 필드 이름의 문자열입니다.</returns>
      <param name="property">유효성 검사 속성의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>유효성 검사가 실패했을 때 표시되는 오류 메시지의 서식을 지정합니다.</summary>
      <returns>형식이 지정된 오류 메시지입니다.</returns>
      <param name="name">오류 메시지와 함께 표시할 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>별표(*)와 점(.)을 앞에 추가하여 클라이언트 유효성 검사에 대한 속성의 서식을 지정합니다.</summary>
      <returns>문자열 "*"입니다. 속성 앞에 추가됩니다.</returns>
      <param name="property">속성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>속성에 대한 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>속성에 대한 원격 클라이언트 유효성 검사 규칙 목록입니다.</returns>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>원격 유효성 검사 호출에 대한 URL을 가져옵니다.</summary>
      <returns>원격 유효성 검사 호출에 대한 URL입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>원격 유효성 검사에 사용되는 HTTP 메서드를 가져오거나 설정합니다.</summary>
      <returns>원격 유효성 검사에 사용되는 HTTP 메서드입니다.기본값은 "Get"입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>이 메서드는 항상 true를 반환합니다.</summary>
      <returns>true</returns>
      <param name="value">유효성 검사 대상입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>경로 데이터 사전을 가져옵니다.</summary>
      <returns>경로 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>경로 이름을 가져오거나 설정합니다.</summary>
      <returns>경로 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>경로 테이블에서 경로 컬렉션을 가져옵니다.</summary>
      <returns>경로 테이블의 경로 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" /> 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>
        <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">필수 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>필수 값 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>필수 값 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>보안되지 않은 HTTP 요청을 강제로 HTTPS를 통해 다시 보내는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>동작 메서드에 보낸 보안되지 않은 HTTP 요청을 처리합니다.</summary>
      <param name="filterContext">
        <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 특성을 사용하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException">HTTP 요청에 잘못된 전송 메서드 재정의가 들어 있습니다.모든 GET 요청은 잘못된 것으로 간주됩니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>요청이 보안되었는지(HTTPS) 확인하고, 보안되지 않은 경우 <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" /> 메서드를 호출합니다.</summary>
      <param name="filterContext">
        <see cref="T:System.Web.Mvc.RequireHttpsAttribute" /> 특성을 사용하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> 메서드에 대한 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>
        <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="result">결과 개체입니다.</param>
      <param name="canceled">실행을 취소하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="exception">예외 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>이 <see cref="T:System.Web.Mvc.ResultExecutedContext" /> 인스턴스가 취소되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인스턴스가 취소되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>예외 개체를 가져오거나 설정합니다.</summary>
      <returns>예외 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>예외가 처리되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>예외가 처리되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>작업 결과를 가져오거나 설정합니다.</summary>
      <returns>작업 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>
        <see cref="T:System.Web.Mvc.ActionFilterAttribute" /> 클래스의 <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> 메서드에 대한 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>지정된 컨트롤러 컨텍스트와 작업 결과를 사용하여 <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="result">작업 결과입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>이 <see cref="T:System.Web.Mvc.ResultExecutingContext" /> 값이 "cancel"인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 값이 "cancel"이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>작업 결과를 가져오거나 설정합니다.</summary>
      <returns>작업 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>이 컨트롤러에 정의된 모든 경로에 설정할 영역을 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RouteAreaAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.RouteAreaAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="areaName">영역 이름입니다.값이 null이면 대상 컨트롤러의 네임스페이스에서 영역 이름을 유추하도록 시도합니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>컨트롤러에 정의된 모든 경로에 설정할 영역 이름을 가져옵니다.값이 null이면 대상 컨트롤러의 네임스페이스에서 영역 이름을 유추하도록 시도합니다.</summary>
      <returns>컨트롤러에 정의된 모든 경로에 설정할 영역 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>이 영역의 경로에 적용할 URL 접두사를 가져옵니다.기본값은 영역 이름입니다.</summary>
      <returns>이 영역의 경로에 적용할 URL 접두사입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>경로를 통해 직접 제공하도록 컨트롤러 또는 작업에 배치합니다.컨트롤러에 배치한 경우 작업 중에서 System.Web.Mvc.RouteAttribute가 없는 작업에 적용됩니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RouteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>지정된 템플릿으로 <see cref="T:System.Web.Mvc.RouteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="template">일치시킬 경로의 패턴입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>경로의 이름을 가져오거나 설정합니다.</summary>
      <returns>경로의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>경로가 적용된 순서를 가져옵니다.</summary>
      <returns>경로가 적용된 순서입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>직접 경로 항목을 만듭니다.</summary>
      <returns>직접 경로 항목입니다.</returns>
      <param name="context">경로를 만드는 데 사용되는 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>일치시킬 경로의 패턴을 가져옵니다.</summary>
      <returns>일치시킬 패턴입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>경로 컬렉션 특성에 대한 라우팅 확장을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>응용 프로그램에 대해 특성이 정의된 경로를 매핑합니다.</summary>
      <param name="routes">경로의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>응용 프로그램에 대해 특성이 정의된 경로를 매핑합니다.</summary>
      <param name="routes">경로의 컬렉션입니다.</param>
      <param name="constraintResolver">경로 템플릿에서 인라인 제약 조건을 확인하는 데 사용할 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>MVC 라우팅 시 <see cref="T:System.Web.Routing.RouteCollection" /> 개체를 확장합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>현재 영역에 URL을 생성한 결과인 경로와 가상 경로에 대한 정보를 포함하는 개체를 반환합니다.</summary>
      <returns>현재 영역에 URL을 생성한 결과인 경로와 가상 경로에 대한 정보를 포함하는 개체입니다.</returns>
      <param name="routes">응용 프로그램의 경로를 포함하는 개체입니다.</param>
      <param name="requestContext">요청된 경로에 대한 정보를 캡슐화하는 개체입니다.</param>
      <param name="name">URL 경로에 대한 정보를 검색할 때 사용할 경로의 이름입니다.</param>
      <param name="values">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>현재 영역에 URL을 생성한 결과인 경로와 가상 경로에 대한 정보를 포함하는 개체를 반환합니다.</summary>
      <returns>현재 영역에 URL을 생성한 결과인 경로와 가상 경로에 대한 정보를 포함하는 개체입니다.</returns>
      <param name="routes">응용 프로그램의 경로를 포함하는 개체입니다.</param>
      <param name="requestContext">요청된 경로에 대한 정보를 캡슐화하는 개체입니다.</param>
      <param name="values">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>지정된 사용 가능한 경로 목록에 대해 지정된 URL 경로를 무시합니다.</summary>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="url">무시할 경로의 URL 패턴입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>지정된 사용 가능한 경로 목록과 제약 조건 목록에 대해 지정된 URL 경로를 무시합니다.</summary>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="url">무시할 경로의 URL 패턴입니다.</param>
      <param name="constraints">
        <paramref name="url" /> 매개 변수에 대한 값을 지정하는 식의 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>지정된 URL 경로를 매핑합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>지정된 URL 경로를 매핑하고 기본 경로 값을 설정합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 URL 경로를 매핑하고 기본 경로 값과 제약 조건을 설정합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="constraints">
        <paramref name="url" /> 매개 변수에 대한 값을 지정하는 식의 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>지정된 URL 경로를 매핑하고 기본 경로 값, 제약 조건 및 네임스페이스를 설정합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="constraints">
        <paramref name="url" /> 매개 변수에 대한 값을 지정하는 식의 집합입니다.</param>
      <param name="namespaces">응용 프로그램의 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>지정된 URL 경로를 매핑하고 기본 경로 값과 네임스페이스를 설정합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="defaults">기본 경로 값을 포함하는 개체입니다.</param>
      <param name="namespaces">응용 프로그램의 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>지정된 URL 경로를 매핑하고 네임스페이스를 설정합니다.</summary>
      <returns>매핑된 경로에 대한 참조입니다.</returns>
      <param name="routes">응용 프로그램에 대한 경로의 컬렉션입니다.</param>
      <param name="name">매핑할 경로의 이름입니다.</param>
      <param name="url">경로의 URL 패턴입니다.</param>
      <param name="namespaces">응용 프로그램의 네임스페이스 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routes" /> 또는 <paramref name="url" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인터페이스를 구현하는 개체에 포함된 경로 데이터에 대한 값 공급자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.RouteDataValueProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">HTTP 요청에 대한 정보를 포함하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>경로 데이터 값 공급자 개체를 만들기 위한 팩터리를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 값 공급자 개체를 반환합니다.</summary>
      <returns>값 공급자 개체입니다.</returns>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>컨트롤러 내의 모든 작업에 적용되는 경로 접두사를 사용하여 컨트롤러에 주석을 지정합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>지정된 접두사를 사용하여 <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="prefix">컨트롤러의 경로 접두사입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>경로 접두사를 가져옵니다.</summary>
      <returns>경로 접두사입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>사용자가 한 항목을 선택할 수 있는 목록을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>목록에 지정된 항목을 사용하여 <see cref="T:System.Web.Mvc.SelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>목록에 지정된 항목과 선택한 값을 사용하여 <see cref="T:System.Web.Mvc.SelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="selectedValue">선택한 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>목록에 지정된 항목, 데이터 값 필드 및 데이터 텍스트 필드를 사용하여 <see cref="T:System.Web.Mvc.SelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="dataValueField">데이터 값 필드입니다.</param>
      <param name="dataTextField">데이터 텍스트 필드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>목록에 지정된 항목, 데이터 값 필드, 데이터 텍스트 필드 및 선택한 값을 사용하여 <see cref="T:System.Web.Mvc.SelectList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="items">항목입니다.</param>
      <param name="dataValueField">데이터 값 필드입니다.</param>
      <param name="dataTextField">데이터 텍스트 필드입니다.</param>
      <param name="selectedValue">선택한 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>사용자가 선택한 목록 값을 가져옵니다.</summary>
      <returns>선택한 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>
        <see cref="T:System.Web.Mvc.SelectList" /> 클래스의 인스턴스에서 선택한 항목을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.SelectListItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>이 <see cref="T:System.Web.Mvc.SelectListItem" />이 선택되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>항목이 선택되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>선택한 항목의 텍스트를 가져오거나 설정합니다.</summary>
      <returns>텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>선택한 항목의 값을 가져오거나 설정합니다.</summary>
      <returns>값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>컨트롤러의 세션 상태를 지정합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>
        <see cref="T:System.Web.Mvc.SessionStateAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="behavior">세션 상태의 형식입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>컨트롤러의 세션 상태 동작을 가져옵니다.</summary>
      <returns>컨트롤러의 세션 상태 동작입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>현재 <see cref="T:System.Web.Mvc.TempDataDictionary" /> 개체에 세션 상태 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 임시 데이터를 로드합니다.</summary>
      <returns>임시 데이터입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <exception cref="T:System.InvalidOperationException">세션 컨텍스트를 검색하는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 임시 데이터 사전에 지정된 값을 저장합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="values">값입니다.</param>
      <exception cref="T:System.InvalidOperationException">세션 컨텍스트를 검색하는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> 특성에 사용할 수 있는 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>
        <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <param name="attribute">문자열 길이 특성입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>문자열 길이 클라이언트 유효성 검사 규칙 목록을 가져옵니다.</summary>
      <returns>문자열 길이 클라이언트 유효성 검사 규칙 목록입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>한 요청에서 다음 요청까지만 지속되는 데이터 집합을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.TempDataDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>지정된 키와 값이 포함된 요소를 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">같은 키가 포함된 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" /> 인스턴스에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스에 지정된 키가 포함된 요소가 들어 있는지 확인합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스에 지정된 키가 포함된 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스에서 찾을 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>사전에 지정된 값이 들어 있는지 확인합니다.</summary>
      <returns>지정된 값이 사전에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체의 요소 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체의 요소 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>열거자를 가져옵니다.</summary>
      <returns>열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>지정된 키가 있는 개체를 가져오거나 설정합니다.</summary>
      <returns>지정된 키가 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>사전에 있는 모든 키를 보존용으로 표시합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>사전에 있는 특정 키를 보존용으로 표시합니다.</summary>
      <param name="key">사전에서 유지할 키입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있는 요소의 키가 포함된 <see cref="T:System.Collections.Generic.ICollection`1" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있는 요소의 키입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>지정된 데이터 공급자를 사용하여 지정된 컨트롤러 컨텍스트를 로드합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="tempDataProvider">임시 데이터 공급자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>키에 삭제 표시를 하지 않고 지정된 키와 연결된 요소가 포함된 개체를 반환합니다.</summary>
      <returns>지정된 키와 연결된 요소가 포함된 개체입니다.</returns>
      <param name="key">반환할 요소의 키입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에서 지정된 키가 포함된 요소를 제거합니다.</summary>
      <returns>요소가 제거되었으면 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="key" />가 <see cref="T:System.Collections.Generic.IDictionary`2" />에 없는 경우에도 false를 반환합니다.반환됩니다.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>지정된 데이터 공급자를 사용하여 지정된 컨트롤러 컨텍스트를 저장합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="tempDataProvider">임시 데이터 공급자입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>지정된 키/값 쌍을 사전에 추가합니다.</summary>
      <param name="keyValuePair">키/값 쌍입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 확인합니다.</summary>
      <returns>지정된 키/값 쌍이 사전에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyValuePair">검색할 키/값 쌍입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>지정된 배열의 지정된 인덱스에 키/값 쌍을 복사합니다.</summary>
      <param name="array">대상 배열입니다.</param>
      <param name="index">인덱스입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>사전이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>사전이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>사전에서 지정된 키/값 쌍을 삭제합니다.</summary>
      <returns>키/값 쌍이 제거되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyValuePair">키/값 쌍입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>지정된 키가 있는 요소의 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 이 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체의 값이 들어 있는 <see cref="T:System.Collections.Generic.ICollection`1" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 있는 요소의 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>현재 템플릿 컨텍스트에 대한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.TemplateInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>서식이 지정된 모델 값을 가져오거나 설정합니다.</summary>
      <returns>서식이 지정된 모델 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>지정된 HTML name 특성을 사용하여 필드의 전체 DOM ID를 검색합니다.</summary>
      <returns>전체 DOM ID입니다.</returns>
      <param name="partialFieldName">HTML name 특성의 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>지정된 HTML name 특성을 사용하여 필드의 정규화된 이름(접두사 포함)을 검색합니다.</summary>
      <returns>접두사가 있는 필드 이름입니다.</returns>
      <param name="partialFieldName">HTML name 특성의 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>HTML 필드 접두사를 가져오거나 설정합니다.</summary>
      <returns>HTML 필드 접두사입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>사용자가 방문한 개체의 수를 포함합니다.</summary>
      <returns>개체 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>사용자가 템플릿을 방문한 적이 있는지 확인합니다.</summary>
      <returns>사용자가 템플릿을 방문한 적이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="metadata">모델을 설명하는 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>응용 프로그램 내에서 ASP.NET MVC의 URL을 빌드하는 메서드를 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.UrlHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>지정된 요청 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.UrlHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="requestContext">현재 요청 및 일치한 경로에 대한 정보가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>지정된 요청 컨텍스트와 경로 컬렉션을 사용하여 <see cref="T:System.Web.Mvc.UrlHelper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="requestContext">현재 요청 및 일치한 경로에 대한 정보가 들어 있는 개체입니다.</param>
      <param name="routeCollection">경로의 컬렉션입니다.</param>
      <exception cref="ArgumentNullException">
        <paramref name="requestContext" /> 또는 <paramref name="routeCollection" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>동작 메서드의 정규화된 URL에 대한 문자열을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL에 대한 문자열입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>지정된 작업 이름을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>지정된 작업 이름과 경로 값을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>지정된 작업 이름과 컨트롤러 이름을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>지정된 작업 이름, 컨트롤러 이름, 경로 값 및 사용할 프로토콜을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업 이름, 컨트롤러 이름 및 경로 값을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>지정된 작업 이름, 컨트롤러 이름, 경로 값 및 사용할 프로토콜을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>지정된 작업 이름, 컨트롤러 이름, 경로 값, 사용할 프로토콜 및 호스트 이름을 사용하여 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업 이름과 경로 값에 대해 동작 메서드의 정규화된 URL을 생성합니다.</summary>
      <returns>동작 메서드의 정규화된 URL입니다.</returns>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>가상(상대) 경로를 응용 프로그램 절대 경로로 변환합니다.</summary>
      <returns>응용 프로그램 절대 경로입니다.</returns>
      <param name="contentPath">콘텐츠의 가상 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>URL 문자열의 특수 문자를 해당하는 문자 엔터티로 인코딩합니다.</summary>
      <returns>인코딩된 URL 문자열입니다.</returns>
      <param name="url">인코딩할 텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>콘텐츠 URL이 포함된 문자열을 반환합니다.</summary>
      <returns>콘텐츠 URL이 포함된 문자열입니다.</returns>
      <param name="contentPath">콘텐츠 경로입니다.</param>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>URL이 포함된 문자열을 반환합니다.</summary>
      <returns>URL이 포함된 문자열입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
      <param name="protocol">HTTP 프로토콜입니다.</param>
      <param name="hostName">호스트 이름입니다.</param>
      <param name="fragment">조각입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
      <param name="routeCollection">경로 컬렉션입니다.</param>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="includeImplicitMvcValues">암시적 MVC 값을 포함하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>URL이 포함된 문자열을 반환합니다.</summary>
      <returns>URL이 포함된 문자열입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
      <param name="routeCollection">경로 컬렉션입니다.</param>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="includeImplicitMvcValues">암시적 MVC 값을 포함하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>지정된 경로 값에 대해 정규화된 URL을 생성합니다.</summary>
      <returns>지정된 경로 값에 대해 정규화된 URL입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 값에 대해 정규화된 URL을 생성합니다.</summary>
      <returns>지정된 경로 값에 대해 정규화된 URL입니다.</returns>
      <param name="routeName">경로 이름입니다.</param>
      <param name="routeValues">경로 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>URL이 로컬인지를 나타내는 값을 반환합니다.</summary>
      <returns>URL이 로컬이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="url">URL입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>정의된 경로와 일치하는 HTTP 요청에 대한 정보를 가져옵니다.</summary>
      <returns>요청 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>응용 프로그램에 대해 등록된 경로가 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>경로 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>지정된 경로 값에 대해 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>지정된 경로 이름에 대해 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeName">URL을 생성하는 데 사용되는 경로의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>경로 이름을 사용하여 지정된 경로 값에 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeName">URL을 생성하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>경로 이름과 사용할 프로토콜을 사용하여 지정된 경로 값의 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeName">URL을 생성하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>경로 이름을 사용하여 지정된 경로 값에 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeName">URL을 생성하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>지정된 경로 이름, 사용할 프로토콜 및 호스트 이름을 사용하여 지정된 경로 값의 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeName">URL을 생성하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 경로 값에 대해 정규화된 URL을 생성합니다.</summary>
      <returns>정규화된 URL입니다.</returns>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>라우팅 중에 <see cref="T:System.Web.Mvc.MvcHandler" /> 클래스에서 사용하는 선택적 매개 변수를 나타냅니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>선택적 매개 변수에 대한 읽기 전용 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>빈 문자열을 반환합니다.이 메서드는 ASP.NET MVC 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
      <returns>빈 문자열입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>유효성을 검사할 수 있는 개체 어댑터를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="metadata">모델 메타데이터입니다.</param>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>지정된 개체의 유효성을 검사합니다.</summary>
      <returns>유효성 검사 결과의 목록입니다.</returns>
      <param name="container">컨테이너입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>요청 위조를 방지하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>권한 부여가 필요한 경우 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>솔트 문자열을 가져오거나 설정합니다.</summary>
      <returns>솔트 문자열입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>입력의 유효성을 검사해야 하는 동작 메서드를 표시하는 데 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Web.Mvc.ValidateInputAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enableValidation">유효성 검사를 사용하도록 설정하려면 true입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>유효성 검사를 사용하도록 설정되어 있는지 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>유효성 검사를 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>권한 부여가 필요한 경우 호출됩니다.</summary>
      <param name="filterContext">필터 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filterContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>응용 프로그램에 대한 값 공급자 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderCollection" /> 클래스의 새 인스턴스를 초기화하고 지정된 값 공급자를 등록합니다.</summary>
      <param name="list">등록할 값 공급자 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>컬렉션이 지정된 접두사를 포함하는지 확인합니다.</summary>
      <returns>지정된 접두사가 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>지정된 접두사를 사용하여 키를 가져옵니다.</summary>
      <returns>키입니다.</returns>
      <param name="prefix">접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">검색할 값 개체의 키입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>지정된 키와 건너뛰기 유효성 검사 매개 변수를 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">검색할 값 개체의 키입니다.</param>
      <param name="skipValidation">유효성 검사를 건너뛰도록 지정하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>지정된 값 공급자 개체를 컬렉션의 지정된 인덱스 위치에 삽입합니다.</summary>
      <param name="index">값 공급자를 컬렉션에 삽입할 인덱스 위치(0부터 시작)입니다.</param>
      <param name="item">삽입할 값 공급자 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>지정된 인덱스 위치에 있는 값 공급자를 새 값 공급자로 바꿉니다.</summary>
      <param name="index">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">지정된 인덱스에 있는 요소의 새 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>참고: 이 API는 현재 사용되지 않습니다.응용 프로그램의 값 공급자 사전을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>값 공급자 컬렉션에 지정된 항목을 추가합니다.</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>값 공급자 컬렉션에 지정된 키와 값이 포함된 요소를 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">지정된 키가 포함된 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>값 공급자 컬렉션에 지정된 키와 값이 포함된 요소를 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">지정된 키가 포함된 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>값 공급자 컬렉션에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>값 공급자 컬렉션에 지정된 항목이 들어 있는지 확인합니다.</summary>
      <returns>값 공급자 컬렉션에 <paramref name="item" />이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 인스턴스에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>값 공급자 컬렉션에 지정된 키가 포함된 요소가 들어 있는지 확인합니다.</summary>
      <returns>값 공급자 컬렉션에 해당 키가 포함된 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스에서 찾을 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>컨트롤러 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>컨트롤러 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>지정된 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체에서 복사한 요소의 대상인 1차원 배열입니다.배열에는 0부터 시작하는 인덱스를 사용해야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열입니다.또는<paramref name="arrayIndex" />가 <paramref name="array" />의 길이보다 크거나 같습니다.또는소스 컬렉션의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큽니다.또는<paramref name="T" /> 형식을 대상 배열의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>컬렉션에 있는 요소의 개수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>지정된 키가 포함된 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Web.Mvc.ValueProviderResult" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스의 키가 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인터페이스를 구현하는 개체의 키가 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>값 공급자 컬렉션에서 맨 처음 발견되는 지정된 항목을 제거합니다.</summary>
      <returns>컬렉션에서 <paramref name="item" />을 제거한 경우 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="item" />이 컬렉션에 없는 경우에도 false를 반환합니다.</returns>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 인스턴스에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>값 공급자 컬렉션에서 지정된 키가 포함된 요소를 제거합니다.</summary>
      <returns>요소가 제거되었으면 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="key" />이 컬렉션에 없는 경우에도 false를 반환합니다.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>컬렉션이 지정된 접두사를 포함하는지 확인합니다.</summary>
      <returns>지정된 접두사가 컬렉션에 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="prefix">검색할 접두사입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>지정된 키를 사용하여 값 개체를 반환합니다.</summary>
      <returns>지정된 키에 대한 값 개체입니다.</returns>
      <param name="key">반환할 값 개체의 키입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>지정된 키가 있는 요소의 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 요소의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 이 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체의 값이 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 인터페이스를 구현하는 개체의 값 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>값 공급자 팩터리 개체의 컨테이너를 나타냅니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>응용 프로그램에 대한 값 공급자 팩터리의 컬렉션을 가져옵니다.</summary>
      <returns>값 공급자 팩터리 개체의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>값 공급자 개체를 만들기 위한 팩터리를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 값 공급자 개체를 반환합니다.</summary>
      <returns>값 공급자 개체입니다.</returns>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>응용 프로그램에 대한 값 공급자 팩터리의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>지정된 값 공급자 팩터리 목록을 사용하여 <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">컬렉션을 초기화하는 데 사용되는 값 공급자 팩터리 목록입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>컬렉션에서 모든 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>지정된 컨트롤러 컨텍스트에 대한 값 공급자 팩터리를 반환합니다.</summary>
      <returns>지정된 컨트롤러 컨텍스트에 대한 값 공급자 팩터리 개체입니다.</returns>
      <param name="controllerContext">현재 HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>지정된 값 공급자 팩터리 개체를 지정된 인덱스 위치에 삽입합니다.</summary>
      <param name="index">값 공급자를 컬렉션에 삽입할 인덱스 위치(0부터 시작)입니다.</param>
      <param name="item">삽입할 값 공급자 팩터리 개체입니다.</param>
      <exception cref="[ArgumentNullException]">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>지정된 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Index" />가 0보다 작습니다.또는<paramref name="Index" />가 <see cref="T:System.Collections.ObjectModel.Collection`1.Count" />보다 크거나 같습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>지정된 값 공급자 팩터리 개체를 지정된 인덱스 위치에 설정합니다.</summary>
      <param name="index">값 공급자를 컬렉션에 삽입할 인덱스 위치(0부터 시작)입니다.</param>
      <param name="item">설정할 값 공급자 팩터리 개체입니다.</param>
      <exception cref="[ArgumentNullException]">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>동작 메서드 인수 속성 또는 인수 자체에 폼 게시, 쿼리 문자열 등의 값을 바인딩한 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ValueProviderResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>지정된 원시 값, 시도된 값 및 culture 정보를 사용하여 <see cref="T:System.Web.Mvc.ValueProviderResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="rawValue">원시 값입니다.</param>
      <param name="attemptedValue">시도된 값입니다.</param>
      <param name="culture">culture입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>표시를 위해 문자열로 변환되는 원시 값을 가져오거나 설정합니다.</summary>
      <returns>원시 값입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>이 결과로 캡슐화된 값을 지정된 형식으로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="type">대상 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>지정된 culture 정보를 사용하여 이 결과로 캡슐화된 값을 지정된 형식으로 변환합니다.</summary>
      <returns>변환된 값입니다.</returns>
      <param name="type">대상 형식입니다.</param>
      <param name="culture">변환에 사용할 culture입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>culture를 가져오거나 설정합니다.</summary>
      <returns>culture입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>값 공급자가 제공하는 원시 값을 가져오거나 설정합니다.</summary>
      <returns>원시 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>뷰 렌더링과 관련된 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>지정된 컨트롤러 컨텍스트, 뷰, 뷰 데이터 사전, 임시 데이터 사전 및 텍스트 기록기를 사용하여 <see cref="T:System.Web.Mvc.ViewContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">HTTP 요청에 대한 정보를 캡슐화합니다.</param>
      <param name="view">렌더링할 뷰입니다.</param>
      <param name="viewData">뷰를 렌더링하는 데 필요한 데이터를 포함하는 사전입니다.</param>
      <param name="tempData">뷰의 임시 데이터를 포함하는 사전입니다.</param>
      <param name="writer">HTML 출력을 쓰는 데 사용되는 텍스트 기록기 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">매개 변수 중 하나가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>클라이언트 쪽 유효성 검사를 수행할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>클라이언트 쪽 유효성 검사가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>HTML 폼의 입력 데이터 유효성을 검사하고 해당 데이터를 처리하는 데 필요한 정보를 캡슐화하는 개체를 가져오거나 설정합니다.</summary>
      <returns>HTML 폼의 입력 데이터 유효성을 검사하고 해당 데이터를 처리하는 데 필요한 정보를 캡슐화하는 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>HTTP 응답에 클라이언트 유효성 검사 정보를 씁니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>이 요청에 연결되어 있고 한 요청에만 사용할 수 있는 데이터를 가져옵니다.</summary>
      <returns>임시 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>비간섭 JavaScript를 사용하도록 설정되어 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>비간섭 JavaScript가 사용하도록 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>브라우저에서 렌더링할 <see cref="T:System.Web.Mvc.IView" /> 인터페이스를 구현하는 개체를 가져옵니다.</summary>
      <returns>뷰입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>동적 뷰 데이터 사전을 가져옵니다.</summary>
      <returns>동적 뷰 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>뷰에 전달되는 뷰 데이터를 가져옵니다.</summary>
      <returns>뷰 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>HTML 출력을 쓰는 데 사용되는 텍스트 기록기 개체를 가져오거나 설정합니다.</summary>
      <returns>HTML 출력을 쓰는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>컨트롤러와 뷰 간에 데이터를 전달하는 데 사용되는 컨테이너를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>지정된 모델을 사용하여 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="model">모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>지정된 사전을 사용하여 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dictionary">사전입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>지정된 항목을 컬렉션에 추가합니다.</summary>
      <param name="item">컬렉션에 추가할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>지정된 키와 값을 사용하여 컬렉션에 요소를 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체가 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">키가 같은 요소가 이미 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체에 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 개체가 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>컬렉션에 지정된 항목이 포함되는지를 결정합니다.</summary>
      <returns>
        <paramref name="item" />이 컬렉션에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">컬렉션에서 찾을 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>지정된 키가 있는 요소가 컬렉션에 들어 있는지 확인합니다.</summary>
      <returns>컬렉션에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">컬렉션에서 찾을 요소의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>특정 인덱스에서 시작하여 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.배열에는 0부터 시작하는 인덱스를 사용해야 합니다.</param>
      <param name="arrayIndex">
        <paramref name="array" />에서 복사가 시작되는 인덱스이며 0부터 시작합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" />가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열입니다.또는 <paramref name="arrayIndex" />가 <paramref name="array" />의 길이보다 크거나 같습니다.또는 소스 컬렉션의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큽니다.또는 <paramref name="T" /> 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>컬렉션에 있는 요소의 개수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 요소의 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>지정된 식을 계산합니다.</summary>
      <returns>계산 결과입니다.</returns>
      <param name="expression">식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>지정된 형식을 사용하여 지정된 식을 계산합니다.</summary>
      <returns>계산 결과입니다.</returns>
      <param name="expression">식입니다.</param>
      <param name="format">형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>
        <paramref name="expression" /> 매개 변수로 정의된 뷰 데이터에 대한 정보를 반환합니다.</summary>
      <returns>
        <paramref name="expression" /> 매개 변수로 정의되는 뷰 데이터 정보를 포함하는 개체입니다.</returns>
      <param name="expression">반환할 뷰 데이터 정보를 정의하는 키/값 쌍의 집합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>지정된 키와 연결된 항목을 가져오거나 설정합니다.</summary>
      <returns>선택한 항목의 값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>이 사전의 키가 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체의 키가 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>뷰 데이터와 연결된 모델을 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터와 연결된 모델입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>모델에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>모델에 대한 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>모델의 상태를 가져옵니다.</summary>
      <returns>모델의 상태입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>컬렉션에서 맨 처음 발견되는 지정된 개체를 제거합니다.</summary>
      <returns>컬렉션에서 <paramref name="item" />을 제거한 경우 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="item" />이 컬렉션에 없는 경우에도 false를 반환합니다.</returns>
      <param name="item">컬렉션에서 제거할 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>지정된 키를 사용하여 컬렉션에서 요소를 제거합니다.</summary>
      <returns>요소가 제거되었으면 true이고, 그렇지 않으면 false입니다.이 메서드는 <paramref name="key" />가 원래 컬렉션에 없는 경우에도 false를 반환합니다.</returns>
      <param name="key">제거할 요소의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>뷰에 사용할 데이터 모델을 설정합니다.</summary>
      <param name="value">뷰에 사용할 데이터 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 데 사용될 수 있는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용될 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>현재 템플릿 컨텍스트에 대한 정보를 캡슐화하는 개체를 가져오거나 설정합니다.</summary>
      <returns>현재 템플릿에 대한 정보를 포함하는 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>지정된 키와 연결된 값을 검색합니다.</summary>
      <returns>컬렉션에 지정된 키가 있는 요소가 들어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 이 키와 연결된 값이고, 그렇지 않으면 <paramref name="value" /> 매개 변수의 형식에 대한 기본값입니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>이 사전의 값이 들어 있는 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" />를 구현하는 개체의 값이 들어 있는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>컨트롤러와 뷰 간에 강력한 형식의 데이터를 전달하는 데 사용되는 컨테이너를 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>지정된 뷰 데이터 사전을 사용하여 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewDataDictionary">이 인스턴스에 복사할 기존 뷰 데이터 사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>지정된 모델을 사용하여 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="model">뷰에 사용할 데이터 모델입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>모델을 가져오거나 설정합니다.</summary>
      <returns>데이터 모델에 대한 참조입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>모델에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>모델에 대한 정보입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>뷰에 사용할 데이터 모델을 설정합니다.</summary>
      <param name="value">뷰에 사용할 데이터 모델입니다.</param>
      <exception cref="T:System.InvalidOperationException">모델을 설정하는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>템플릿을 개발하는 데 사용되는 현재 템플릿 콘텐츠 관련 정보 및 템플릿과 상호 작용하는 HTML 도우미 관련 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewDataInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>T:System.Web.Mvc.ViewDataInfo 클래스의 새 인스턴스를 초기화하고 뷰 데이터 정보에 액세스하는 대리자를 연결합니다.</summary>
      <param name="valueAccessor">뷰 데이터 정보에 액세스하는 방법을 정의하는 대리자입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>템플릿에서 표시할 값을 포함하는 개체를 가져오거나 설정합니다.</summary>
      <returns>템플릿에서 표시할 값을 포함하는 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>템플릿에서 표시할 속성에 대한 설명을 가져오거나 설정합니다.</summary>
      <returns>템플릿에서 표시할 속성에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>템플릿에서 표시할 현재 값을 가져오거나 설정합니다.</summary>
      <returns>템플릿에서 표시할 현재 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>응용 프로그램에 사용할 수 있는 뷰 엔진의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewEngineCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>지정된 뷰 엔진 목록을 사용하여 <see cref="T:System.Web.Mvc.ViewEngineCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">새 컬렉션이 래핑하는 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" />가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>
        <see cref="T:System.Collections.ObjectModel.Collection`1" />에서 모든 요소를 제거합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 부분 뷰를 찾습니다.</summary>
      <returns>부분 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>지정된 컨트롤러 컨텍스트와 마스터 뷰를 사용하여 지정된 뷰를 찾습니다.</summary>
      <returns>뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewName">뷰의 이름입니다.</param>
      <param name="masterName">마스터 뷰의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>컬렉션 내의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">0부터 시작하는 인덱스이며 항목을 삽입해야 합니다.</param>
      <param name="item">삽입할 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는<paramref name="index" />가 컬렉션의 항목 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>지정된 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는<paramref name="index" />가 <see cref="T:System.Collections.ObjectModel.Collection`1.Count" />보다 크거나 같습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>지정된 인덱스에 있는 요소를 바꿉니다.</summary>
      <param name="index">바꿀 요소의 인덱스(0부터 시작)입니다.</param>
      <param name="item">지정된 인덱스에 있는 요소의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는<paramref name="index" />가 컬렉션의 항목 수보다 큽니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>뷰 엔진을 찾은 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>지정된 검색 위치를 사용하여 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="searchedLocations">검색 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchedLocations" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>지정된 뷰와 뷰 엔진을 사용하여 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="view">뷰입니다.</param>
      <param name="viewEngine">뷰 엔진입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view " /> 또는 <paramref name="viewEngine" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>검색 위치를 가져오거나 설정합니다.</summary>
      <returns>검색 위치입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>뷰를 가져오거나 설정합니다.</summary>
      <returns>뷰입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>뷰 엔진을 가져오거나 설정합니다.</summary>
      <returns>뷰 엔진입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>응용 프로그램에 사용할 수 있는 뷰 엔진의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>뷰 엔진을 가져옵니다.</summary>
      <returns>뷰 엔진입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>마스터 뷰 페이지를 빌드하는 데 필요한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewMasterPage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>마스터 페이지의 AJAX 스크립트를 가져옵니다.</summary>
      <returns>마스터 페이지의 AJAX 스크립트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>마스터 페이지의 HTML을 가져옵니다.</summary>
      <returns>마스터 페이지의 HTML입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>모델을 가져옵니다.</summary>
      <returns>모델입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>임시 데이터를 가져옵니다.</summary>
      <returns>임시 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>URL을 가져옵니다.</summary>
      <returns>URL입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>동적 뷰 모음 사전을 가져옵니다.</summary>
      <returns>동적 뷰 모음 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>뷰 컨텍스트를 가져옵니다.</summary>
      <returns>뷰 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>뷰 데이터를 가져옵니다.</summary>
      <returns>뷰 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>마스터 페이지를 렌더링하는 데 사용되는 기록기를 가져옵니다.</summary>
      <returns>마스터 페이지를 렌더링하는 데 사용되는 기록기입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>강력한 형식의 마스터 뷰 페이지를 빌드하기 위해 필요한 정보를 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewMasterPage`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>마스터 페이지의 AJAX 스크립트를 가져옵니다.</summary>
      <returns>마스터 페이지의 AJAX 스크립트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>마스터 페이지의 HTML을 가져옵니다.</summary>
      <returns>마스터 페이지의 HTML입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>모델을 가져옵니다.</summary>
      <returns>데이터 모델에 대한 참조입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>뷰 데이터를 가져옵니다.</summary>
      <returns>뷰 데이터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>뷰를 Web Forms 페이지로 렌더링하는 데 필요한 속성과 메서드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewPage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Ajax 시나리오에서 HTML을 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.AjaxHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰와 연결된 Ajax 도우미 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>HTML 요소를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰와 연결된 HTML 도우미 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>
        <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> 및 <see cref="P:System.Web.Mvc.ViewPage.Url" /> 속성을 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>마스터 뷰의 경로를 가져오거나 설정합니다.</summary>
      <returns>마스터 뷰의 경로입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>페이지 초기화가 시작될 때 <see cref="E:System.Web.UI.Page.PreInit" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>ASP.NET MVC 프레임워크의 지정된 HTTP 요청을 처리할 수 있도록 합니다.</summary>
      <param name="context">현재 HTTP 요청에 대한 HTTP 관련 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>렌더링할 페이지 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 초기화합니다.</summary>
      <param name="writer">페이지 콘텐츠를 받는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>지정된 뷰 컨텍스트를 사용하여 뷰 페이지를 응답에 렌더링합니다.</summary>
      <param name="viewContext">컨트롤러 컨텍스트, 폼 컨텍스트, 임시 데이터 및 연결된 뷰에 대한 뷰 데이터를 포함하여 뷰를 렌더링하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>참고: 이 API는 현재 사용되지 않습니다.응답에 뷰를 렌더링하는 데 사용되는 텍스트 기록기를 설정합니다.</summary>
      <param name="textWriter">응답에 뷰를 렌더링하는 데 사용되는 기록기입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>연결된 뷰에 대한 뷰 데이터 사전을 설정합니다.</summary>
      <param name="viewData">뷰에 전달할 데이터 사전입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>뷰에 전달할 임시 데이터를 가져옵니다.</summary>
      <returns>뷰에 전달할 임시 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>렌더링된 페이지의 URL을 가져오거나 설정합니다.</summary>
      <returns>렌더링된 페이지의 URL입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>뷰를 렌더링하는 데 사용되는 정보를 가져오거나 설정합니다.</summary>
      <returns>뷰를 렌더링하는 데 사용되는 정보입니다. 여기에는 폼 컨텍스트, 임시 데이터, 연결된 뷰의 뷰 데이터가 포함됩니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전을 가져오거나 설정합니다.</summary>
      <returns>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>응답에 뷰를 렌더링하는 데 사용되는 텍스트 기록기를 가져옵니다.</summary>
      <returns>응답에 뷰를 렌더링하는 데 사용되는 텍스트 기록기입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>강력한 형식의 뷰를 Web Forms 페이지로 렌더링하는 데 필요한 정보를 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewPage`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Ajax 시나리오에서 HTML 렌더링을 지원하는 <see cref="T:System.Web.Mvc.AjaxHelper`1" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰와 연결된 Ajax 도우미 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>요소 렌더링을 지원하는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰와 연결된 HTML 도우미 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>
        <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> 및 <see cref="P:System.Web.Mvc.ViewPage`1.Html" /> 속성을 인스턴스화하고 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 개체의 <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> 속성을 가져옵니다.</summary>
      <returns>데이터 모델에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>연결된 뷰에 대한 뷰 데이터 사전을 설정합니다.</summary>
      <param name="viewData">뷰에 전달할 데이터 사전입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전을 가져오거나 설정합니다.</summary>
      <returns>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>
        <see cref="T:System.Web.Mvc.IViewEngine" /> 개체에서 반환된 <see cref="T:System.Web.Mvc.IView" /> 인스턴스를 사용하여 뷰를 렌더링하는 데 사용되는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>등록된 뷰 엔진을 검색하고 뷰를 렌더링하는 데 사용되는 개체를 반환합니다.</summary>
      <returns>뷰를 렌더링하는 데 사용되는 개체입니다.</returns>
      <param name="context">컨트롤러 컨텍스트입니다.</param>
      <exception cref="T:System.InvalidOperationException">메서드가 뷰를 검색하는 도중 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>뷰를 렌더링할 때 사용할 마스터 뷰(예: 마스터 페이지 또는 템플릿)의 이름을 가져옵니다.</summary>
      <returns>마스터 뷰의 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>뷰에 모델을 제공한 다음 응답에 뷰를 렌더링하는 데 사용되는 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewResultBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>작업 호출자가 호출하면 응답에 뷰를 렌더링합니다.</summary>
      <param name="context">결과가 실행되는 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>뷰를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewEngineResult" /> 개체를 반환합니다.</summary>
      <returns>뷰 엔진입니다.</returns>
      <param name="context">컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>뷰 데이터 모델을 가져옵니다.</summary>
      <returns>뷰 데이터 모델입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>이 결과에 대한 <see cref="T:System.Web.Mvc.TempDataDictionary" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>임시 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>응답에 렌더링되는 <see cref="T:System.Web.Mvc.IView" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>이 결과에 대한 뷰 데이터 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>이 결과에 연결된 뷰 엔진의 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>뷰 엔진의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>렌더링할 뷰의 이름을 가져오거나 설정합니다.</summary>
      <returns>뷰의 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>뷰 시작(마스터) 페이지를 구현하는 데 사용할 수 있는 추상 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>파생 클래스에서 구현될 때 <see cref="T:System.Web.Mvc.ViewStartPage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>파생 클래스에서 구현되는 경우 뷰 시작 페이지에 대한 HTML 태그를 가져옵니다.</summary>
      <returns>뷰 시작 페이지에 대한 HTML 태그입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>파생 클래스에서 구현되는 경우 뷰 시작 페이지의 URL을 가져옵니다.</summary>
      <returns>뷰 시작 페이지에 대한 URL입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>파생 클래스에서 구현되는 경우 뷰 시작 페이지에 대한 뷰 컨텍스트를 가져옵니다.</summary>
      <returns>뷰 시작 페이지에 대한 뷰 컨텍스트입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>
        <see cref="T:System.Web.Mvc.TemplateInfo" /> 개체에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewTemplateUserControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>
        <see cref="T:System.Web.Mvc.TemplateInfo" /> 개체에 대한 컨테이너를 제공합니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>서식이 지정된 값을 가져옵니다.</summary>
      <returns>형식이 지정된 값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>뷰의 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>형식의 이름을 가져오거나 설정합니다.</summary>
      <returns>형식의 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>사용자 컨트롤을 빌드하는 데 필요한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewUserControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>뷰의 AJAX 스크립트를 가져옵니다.</summary>
      <returns>뷰의 AJAX 스크립트입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>뷰 데이터가 있는 경우 사용자 컨트롤의 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에 뷰 데이터가 추가되도록 합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>뷰의 HTML을 가져옵니다.</summary>
      <returns>뷰의 HTML입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>모델을 가져옵니다.</summary>
      <returns>모델입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>지정된 뷰 컨텍스트를 사용하여 뷰를 렌더링합니다.</summary>
      <param name="viewContext">뷰 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>응답에 뷰를 렌더링하는 데 사용되는 텍스트 기록기를 설정합니다.</summary>
      <param name="textWriter">응답에 뷰를 렌더링하는 데 사용되는 기록기입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>지정된 뷰 데이터를 사용하여 뷰 데이터 사전을 설정합니다.</summary>
      <param name="viewData">뷰 데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>임시 데이터 사전을 가져옵니다.</summary>
      <returns>임시 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>뷰의 URL을 가져옵니다.</summary>
      <returns>뷰의 URL입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>뷰 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns>뷰 컨텍스트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>뷰 데이터 사전을 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터 사전입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>뷰 데이터 키를 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터 키입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>응답에 뷰를 렌더링하는 데 사용되는 기록기를 가져옵니다.</summary>
      <returns>응답에 뷰를 렌더링하는 데 사용되는 기록기입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>강력한 형식의 사용자 컨트롤을 빌드하기 위해 필요한 정보를 나타냅니다.</summary>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.ViewUserControl`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>뷰의 AJAX 스크립트를 가져옵니다.</summary>
      <returns>뷰의 AJAX 스크립트입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>뷰의 HTML을 가져옵니다.</summary>
      <returns>뷰의 HTML입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>모델을 가져옵니다.</summary>
      <returns>데이터 모델에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>뷰에 대한 뷰 데이터를 설정합니다.</summary>
      <param name="viewData">뷰 데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>뷰 데이터를 가져오거나 설정합니다.</summary>
      <returns>뷰 데이터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>
        <see cref="T:System.Web.Mvc.IViewEngine" /> 인터페이스의 추상 기본 클래스 구현을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>영역 사용이 가능한 마스터 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>영역 사용이 가능한 마스터 위치 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>영역 사용이 가능한 부분 뷰 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>영역 사용이 가능한 부분 뷰 위치 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>영역 사용이 가능한 뷰 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>영역 사용이 가능한 뷰 위치 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 부분 뷰를 만듭니다.</summary>
      <returns>부분 뷰에 대한 참조입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialPath">새 부분 뷰의 부분 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>컨트롤러 컨텍스트, 뷰의 경로 및 마스터 뷰의 경로를 사용하여 지정된 뷰를 만듭니다.</summary>
      <returns>뷰에 대한 참조입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰의 경로입니다.</param>
      <param name="masterPath">마스터 뷰의 경로입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>표시 모드 공급자를 가져오거나 설정합니다.</summary>
      <returns>표시 모드 공급자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 파일이 지정된 경로에 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>파일이 지정된 경로에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="virtualPath">가상 경로입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>뷰를 찾는 데 사용되는 파일 이름 확장명을 가져오거나 설정합니다.</summary>
      <returns>뷰를 찾는 데 사용되는 파일 이름 확장명입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 부분 뷰를 찾습니다.</summary>
      <returns>부분 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="useCache">캐시된 부분 뷰를 사용하려면 true입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partialViewName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>지정된 컨트롤러 컨텍스트와 마스터 뷰 이름을 사용하여 지정된 뷰를 찾습니다.</summary>
      <returns>페이지 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewName">뷰의 이름입니다.</param>
      <param name="masterName">마스터 뷰의 이름입니다.</param>
      <param name="useCache">캐시된 뷰를 사용하려면 true입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controllerContext" /> 매개 변수가 null(Visual Basic의 경우 Nothing)입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>마스터 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>마스터 위치 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>부분 뷰 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>부분 뷰 위치 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 뷰를 해제합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="view">해제할 뷰입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>뷰 위치 캐시를 가져오거나 설정합니다.</summary>
      <returns>뷰 위치 캐시입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>뷰 위치 형식을 가져오거나 설정합니다.</summary>
      <returns>뷰 위치 형식입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>가상 경로 공급자를 가져오거나 설정합니다.</summary>
      <returns>가상 경로 공급자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>ASP.NET MVC에서 Web Forms 페이지를 빌드하는 데 필요한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>컨트롤러 컨텍스트와 뷰 경로를 사용하여 <see cref="T:System.Web.Mvc.WebFormView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>컨트롤러 컨텍스트, 뷰 경로 및 마스터 페이지 경로를 사용하여 <see cref="T:System.Web.Mvc.WebFormView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
      <param name="masterPath">마스터 페이지에 대한 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>컨트롤러 컨텍스트, 뷰 경로, 마스터 페이지 경로 및 <see cref="T:System.Web.Mvc.IViewPageActivator" /> 인스턴스를 사용하여 <see cref="T:System.Web.Mvc.WebFormView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
      <param name="masterPath">마스터 페이지에 대한 경로입니다.</param>
      <param name="viewPageActivator">뷰 페이지 활성기 인터페이스의 인스턴스입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>마스터 경로를 가져오거나 설정합니다.</summary>
      <returns>마스터 경로입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>뷰를 응답에 렌더링합니다.</summary>
      <param name="viewContext">컨트롤러 컨텍스트, 폼 컨텍스트, 임시 데이터 및 연결된 뷰에 대한 뷰 데이터를 포함하여 뷰를 렌더링하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
      <param name="writer">HTML 출력을 쓰는 데 사용되는 텍스트 기록기 개체입니다.</param>
      <param name="instance">뷰 페이지 인스턴스입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Web Forms 페이지를 응답에 렌더링하는 데 사용되는 뷰 엔진을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.WebFormViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>지정된 뷰 페이지 활성기를 사용하여 <see cref="T:System.Web.Mvc.WebFormViewEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewPageActivator">
        <see cref="T:System.Web.Mvc.IViewPageActivator" /> 인터페이스를 구현하는 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 컨트롤러 컨텍스트를 사용하여 지정된 부분 뷰를 만듭니다.</summary>
      <returns>부분 뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="partialPath">부분 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>지정된 컨트롤러 컨텍스트, 뷰의 경로 및 마스터 뷰의 경로를 사용하여 지정된 뷰를 만듭니다.</summary>
      <returns>뷰입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="viewPath">뷰 경로입니다.</param>
      <param name="masterPath">마스터 뷰 경로입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>ASP.NET Razor 구문을 사용하는 뷰를 렌더링하는 데 필요한 속성과 메서드를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.WebViewPage" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Ajax를 사용하여 HTML을 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.AjaxHelper" /> 개체를 가져오거나 설정합니다. </summary>
      <returns>Ajax를 사용하여 HTML을 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.AjaxHelper" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>페이지에 대한 뷰 컨텍스트 및 뷰 데이터를 설정합니다.</summary>
      <param name="parentPage">부모 페이지입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>페이지와 연결된 <see cref="T:System.Web.HttpContext" /> 개체를 가져옵니다.</summary>
      <returns>페이지와 연결된 <see cref="T:System.Web.HttpContext" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>ASP.NET Razor 실행 파이프라인의 페이지 계층을 실행합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>HTML 요소를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>HTML 요소를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>
        <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> 및 <see cref="T:System.Web.Mvc.UrlHelper" /> 클래스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>뷰 데이터를 설정합니다.</summary>
      <param name="viewData">뷰 데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>뷰에 전달할 임시 데이터를 가져옵니다.</summary>
      <returns>뷰에 전달할 임시 데이터입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>렌더링된 페이지의 URL을 가져오거나 설정합니다.</summary>
      <returns>렌더링된 페이지의 URL입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>뷰 모음을 가져옵니다.</summary>
      <returns>뷰 모음입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>뷰를 렌더링하는 데 사용되는 정보를 가져오거나 설정합니다.</summary>
      <returns>뷰를 렌더링하는 데 사용되는 정보입니다. 여기에는 폼 컨텍스트, 임시 데이터, 연결된 뷰의 뷰 데이터가 포함됩니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전을 가져오거나 설정합니다.</summary>
      <returns>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>ASP.NET Razor 구문을 사용하는 뷰를 렌더링하는 데 필요한 속성과 메서드를 나타냅니다.</summary>
      <typeparam name="TModel">뷰 데이터 모델의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.WebViewPage`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Ajax를 사용하여 HTML 태그를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.AjaxHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>Ajax를 사용하여 HTML 태그를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.AjaxHelper" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>HTML 요소를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>HTML 요소를 렌더링하는 데 사용되는 <see cref="T:System.Web.Mvc.HtmlHelper" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>
        <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> 및 <see cref="T:System.Web.Mvc.UrlHelper" /> 클래스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성을 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 Model 속성입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>뷰 데이터를 설정합니다.</summary>
      <param name="viewData">뷰 데이터입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전을 가져오거나 설정합니다.</summary>
      <returns>컨트롤러와 뷰 간에 전달할 데이터가 들어 있는 사전입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>ASP.NET MVC 응용 프로그램 내의 ASP.NET AJAX 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 동작 메서드에 URL이 포함되어 있는 앵커 요소를 반환합니다. 작업 링크를 클릭하면 JavaScript를 사용하여 동작 메서드가 비동기적으로 호출됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다. </summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="actionName">요청을 처리할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 라우팅 정보를 사용하여 응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 라우팅 정보를 사용하여 응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 라우팅 정보를 사용하여 응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 라우팅 정보를 사용하여 응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 라우팅 정보를 사용하여 응답에 여는 &lt;form&gt; 태그를 씁니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>culture 정보를 정의하는 전역화 스크립트에 대한 참조가 포함된 HTML script 요소를 반환합니다.</summary>
      <returns>다음 예제와 같이 해당 src 특성이 전역화 스크립트로 설정되어 있는 script 요소입니다. &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">이 메서드가 확장하는 AJAX 도우미 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>지정된 culture 정보를 정의하는 전역화 스크립트에 대한 참조가 포함된 HTML script 요소를 반환합니다.</summary>
      <returns>다음 예제와 같이 해당 src 특성이 전역화 스크립트로 설정되어 있는 HTML script 요소입니다.&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">이 메서드가 확장하는 AJAX 도우미 개체입니다.</param>
      <param name="cultureInfo">대상 culture에 대한 정보(예: 날짜 서식)를 캡슐화합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureInfo" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 경로 값의 가상 경로를 포함하는 앵커 요소를 반환합니다. 링크를 클릭하면 JavaScript를 사용하여 가상 경로에 대한 요청이 비동기적으로 수행됩니다.</summary>
      <returns>앵커 요소입니다.</returns>
      <param name="ajaxHelper">AJAX 도우미입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="ajaxOptions">비동기 요청에 대한 옵션을 제공하는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>ASP.NET MVC 응용 프로그램에서 Ajax 스크립트를 실행하기 위한 옵션 설정을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>요청을 전송하기 전에 확인 창에 표시할 메시지를 가져오거나 설정합니다.</summary>
      <returns>확인 창에 표시할 메시지입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>HTTP 요청 메서드("Get" 또는 "Post")를 가져오거나 설정합니다.</summary>
      <returns>HTTP 요청 메서드입니다.기본값은 "Post"입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>대상 DOM 요소에 응답을 삽입하는 방법을 지정하는 모드를 가져오거나 설정합니다.</summary>
      <returns>삽입 모드("InsertAfter", "InsertBefore" 또는 "Replace")입니다.기본값은 "Replace"입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>로드 중인 요소를 표시하거나 숨길 때 애니메이션의 지속 시간을 제어하는 값(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>로드 중인 요소를 표시하거나 숨길 때 애니메이션의 지속 시간을 제어하는 값(밀리초)입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Ajax 함수를 로드하는 동안 표시되는 HTML 요소의 id 특성을 가져오거나 설정합니다.</summary>
      <returns>Ajax 함수를 로드하는 동안 표시되는 요소의 ID입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>페이지가 업데이트되기 직전에 호출할 JavaScript 함수의 이름을 가져오거나 설정합니다.</summary>
      <returns>페이지가 업데이트되기 전에 호출할 JavaScript 함수의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>응답 데이터가 인스턴스화된 경우 페이지가 업데이트되기 전에 호출할 JavaScript 함수를 가져오거나 설정합니다.</summary>
      <returns>응답 데이터가 인스턴스화된 경우 호출할 JavaScript 함수입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>페이지를 업데이트하지 못할 경우 호출할 JavaScript 함수를 가져오거나 설정합니다.</summary>
      <returns>페이지를 업데이트하지 못할 경우에 호출할 JavaScript 함수입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>페이지가 업데이트된 후 호출할 JavaScript 함수를 가져오거나 설정합니다.</summary>
      <returns>페이지가 업데이트된 후 호출할 JavaScript 함수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>비간섭 JavaScript를 지원할 HTML 특성의 컬렉션으로 Ajax 옵션을 반환합니다.</summary>
      <returns>비간섭 JavaScript를 지원할 HTML 특성의 컬렉션으로서의 Ajax 옵션입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>서버에서 응답을 사용하여 업데이트할 DOM 요소의 ID를 가져오거나 설정합니다.</summary>
      <returns>업데이트할 DOM 요소의 ID입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>요청을 보낼 URL을 가져오거나 설정합니다.</summary>
      <returns>요청을 보낼 URL입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>AJAX 스크립트 삽입 모드를 열거합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>요소 뒤에 삽입합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>요소 앞에 삽입합니다.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>요소를 바꿉니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>비동기 동작 메서드의 이름, 컨트롤러, 매개 변수, 특성, 필터와 같은 비동기 동작 메서드에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>지정된 매개 변수와 컨트롤러 컨텍스트를 사용하여 비동기 동작 메서드를 호출합니다.</summary>
      <returns>비동기 호출의 결과가 들어 있는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>비동기 작업의 결과를 반환합니다.</summary>
      <returns>비동기 작업의 결과입니다.</returns>
      <param name="asyncResult">비동기 작업의 상태를 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 매개 변수와 컨트롤러 컨텍스트를 사용하여 비동기 동작 메서드를 실행합니다.</summary>
      <returns>비동기 동작 메서드의 실행 결과입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>비동기 컨트롤러의 동작 메서드를 호출하는 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>지정된 컨트롤러 컨텍스트, 작업 이름, 콜백 메서드 및 상태를 사용하여 비동기 동작 메서드를 호출합니다.</summary>
      <returns>비동기 작업의 결과가 들어 있는 개체입니다.구현<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>지정된 컨트롤러 컨텍스트, 작업 설명자, 매개 변수, 콜백 메서드 및 상태를 사용하여 비동기 동작 메서드를 호출합니다.</summary>
      <returns>비동기 작업의 결과가 들어 있는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="parameters">비동기 동작 메서드의 매개 변수입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>지정된 컨트롤러 컨텍스트, 필터, 작업 설명자, 매개 변수, 콜백 메서드 및 상태를 사용하여 비동기 동작 메서드를 호출합니다.</summary>
      <returns>비동기 작업의 결과가 들어 있는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="filters">필터입니다.</param>
      <param name="actionDescriptor">작업 설명자입니다.</param>
      <param name="parameters">비동기 동작 메서드의 매개 변수입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>작업을 취소합니다.</summary>
      <returns>작업이 취소되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="asyncResult">비동기 작업에 대한 정보를 한정하거나 포함하는 사용자 정의 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>작업을 취소합니다.</summary>
      <returns>작업이 취소되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="asyncResult">비동기 작업에 대한 정보를 한정하거나 포함하는 사용자 정의 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>작업을 취소합니다.</summary>
      <returns>작업이 취소되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="asyncResult">비동기 작업에 대한 정보를 한정하거나 포함하는 사용자 정의 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>컨트롤러 설명자를 반환합니다.</summary>
      <returns>컨트롤러 설명자입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>
        <see cref="T:System.Web.Mvc.AsyncController" /> 클래스에 대한 비동기 작업을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Async.AsyncManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>동기화 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.Async.AsyncManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="syncContext">동기화 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>모든 비동기 작업이 완료되었음을 ASP.NET에 알립니다.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>
        <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" /> 메서드가 호출될 때 발생합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>처리 중인 작업의 개수를 가져옵니다.</summary>
      <returns>처리 중인 작업의 개수입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>비동기 완료 메서드에 전달된 매개 변수를 가져옵니다.</summary>
      <returns>비동기 완료 메서드에 전달된 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>현재 동기화 컨텍스트에서 콜백을 수행합니다.</summary>
      <param name="action">비동기 작업입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>비동기 제한 시간 값(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>비동기 제한 시간 값(밀리초)입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>HTTP 요청에 대한 응답으로 비동기 작업을 호출하는 데 사용되는 작업 호출자의 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>지정된 작업을 호출합니다.</summary>
      <returns>비동기 결과의 상태입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">비동기 작업의 이름입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>비동기 작업을 취소합니다.</summary>
      <returns>비동기 작업을 취소할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>비동기 컨트롤러에 필요한 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>지정된 요청 컨텍스트를 실행합니다.</summary>
      <returns>비동기 작업의 상태입니다.</returns>
      <param name="requestContext">요청 컨텍스트입니다.</param>
      <param name="callback">비동기 콜백 메서드입니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>비동기 작업을 종료합니다.</summary>
      <param name="asyncResult">비동기 결과입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>비동기 관리자 개체에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>비동기 관리자 개체를 가져옵니다.</summary>
      <returns>비동기 관리자 개체입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>보류 중인 비동기 작업의 수를 유지하는 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Async.OperationCounter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>비동기 메서드가 완료되면 발생합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>작업 수를 가져옵니다.</summary>
      <returns>작업 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>작업 수를 1만큼 줄입니다.</summary>
      <returns>업데이트된 작업 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>작업 수를 지정된 값만큼 줄입니다.</summary>
      <returns>업데이트된 작업 수입니다.</returns>
      <param name="value">한 번에 줄어들 작업의 수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>작업 수를 1만큼 늘립니다.</summary>
      <returns>업데이트된 작업 수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>작업 수를 지정된 값만큼 늘립니다.</summary>
      <returns>업데이트된 작업 수입니다.</returns>
      <param name="value">한 번에 늘어날 작업의 수입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>비동기 동작 메서드의 이름, 컨트롤러, 매개 변수, 특성, 필터와 같은 비동기 동작 메서드에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>
        <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="asyncMethodInfo">비동기 작업을 시작하는 메서드(이름이 "Asynch"로 끝나는 메서드)에 대한 정보가 들어 있는 개체입니다.</param>
      <param name="completedMethodInfo">완료 메서드(이름이 "Completed"로 끝나는 메서드)에 대한 정보가 들어 있는 개체입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerDescriptor">컨트롤러 설명자입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>동작 메서드의 이름을 가져옵니다.</summary>
      <returns>동작 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>비동기 동작 메서드에 대한 메서드 정보를 가져옵니다.</summary>
      <returns>비동기 동작 메서드에 대한 메서드 정보입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>지정된 매개 변수와 컨트롤러 컨텍스트를 사용하여 비동기 동작 메서드를 실행하기 시작합니다.</summary>
      <returns>비동기 호출의 결과가 들어 있는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
      <param name="callback">콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>비동기 완료 메서드에 대한 메서드 정보를 가져옵니다.</summary>
      <returns>비동기 완료 메서드에 대한 메서드 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>비동기 동작 메서드에 대한 컨트롤러 설명자를 가져옵니다.</summary>
      <returns>비동기 동작 메서드에 대한 컨트롤러 설명자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>비동기 작업의 결과를 반환합니다.</summary>
      <returns>비동기 작업의 결과입니다.</returns>
      <param name="asyncResult">비동기 작업의 상태를 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 지정된 형식의 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">반환할 사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시 플래그를 사용합니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>동작 메서드의 매개 변수를 반환합니다.</summary>
      <returns>동작 메서드의 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>동작 메서드 선택기를 반환합니다.</summary>
      <returns>동작 메서드 선택기입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>작업 멤버에 대해 지정된 특성 형식의 인스턴스가 하나 이상 정의되어 있는지 확인합니다.</summary>
      <returns>이 멤버에 대해 <paramref name="attributeType" />이 나타내는 형식의 특성이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>이 클래스 인스턴스의 초기화 지연된 고유 ID를 가져옵니다.</summary>
      <returns>이 클래스 인스턴스의 초기화 지연된 고유 ID입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>비동기 컨트롤러의 이름, 형식, 작업 등 비동기 컨트롤러를 설명하는 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerType">컨트롤러의 형식입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>컨트롤러의 형식을 가져옵니다.</summary>
      <returns>컨트롤러의 형식입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>지정된 이름과 컨트롤러 컨텍스트를 사용하여 동작 메서드를 찾습니다.</summary>
      <returns>동작 메서드에 대한 정보입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>컨트롤러의 동작 메서드 설명자 목록을 반환합니다.</summary>
      <returns>컨트롤러의 동작 메서드 설명자 목록입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 지정된 형식의 사용자 지정 특성을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>필터 특성을 가져옵니다.</summary>
      <returns>필터 특성입니다.</returns>
      <param name="useCache">캐시를 사용하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 지정된 사용자 지정 특성의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>이 멤버에 대해 <paramref name="attributeType" />이 나타내는 형식의 특성이 정의되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>ASP.NET MVC 응용 프로그램에서 HTTP 요청을 동기적으로 처리하는 동안 발생한 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>시스템 제공 메시지를 사용하여 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>지정된 메시지를 사용하여 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 culture에 따라 지역화되었는지 확인해야 합니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 이 예외의 원인이 되는 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 culture에 따라 지역화되었는지 확인해야 합니다.</param>
      <param name="innerException">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아닌 경우, 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>동작 메서드에서 작업(Task 또는 Task&lt;T&gt;)을 반환하면 <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />가 동작에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>
        <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="taskMethodInfo">작업 메서드 정보입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerDescriptor">컨트롤러 설명자입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>동작 메서드의 이름을 가져옵니다.</summary>
      <returns>동작 메서드의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>지정된 매개 변수, 컨트롤러 컨텍스트 콜백 및 상태를 사용하여 비동기 동작 메서드를 호출합니다.</summary>
      <returns>비동기 호출의 결과가 들어 있는 개체입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
      <param name="callback">선택적 콜백 메서드입니다.</param>
      <param name="state">콜백 메서드에서 사용할 정보가 들어 있는 개체입니다.이 매개 변수는 null일 수 있습니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>컨트롤러 설명자를 가져옵니다.</summary>
      <returns>컨트롤러 설명자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>비동기 작업을 종료합니다.</summary>
      <returns>비동기 작업의 결과입니다.</returns>
      <param name="asyncResult">비동기 작업의 상태를 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>비동기 동작 메서드를 실행합니다.</summary>
      <returns>비동기 동작 메서드의 실행 결과입니다.</returns>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="parameters">동작 메서드의 매개 변수입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(명명된 특성 제외).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 정의된 사용자 지정 특성의 배열을 반환합니다(형식으로 식별됨).</summary>
      <returns>사용자 지정 특성의 배열 또는 사용자 지정 특성이 없는 경우 빈 배열입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 유형입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>이 멤버에 적용된 모든 사용자 지정 특성의 배열을 반환합니다.</summary>
      <returns>이 멤버에 적용된 모든 사용자 지정 특성이 포함된 배열입니다. 또는 특성이 정의되지 않은 경우 요소가 없는 배열입니다.</returns>
      <param name="useCache">이 멤버의 상속 체인을 검색하여 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>비동기 동작 메서드의 매개 변수를 반환합니다.</summary>
      <returns>비동기 동작 메서드의 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>비동기 동작 메서드 선택기를 반환합니다.</summary>
      <returns>비동기 동작 메서드 선택기입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>이 멤버에 대해 지정된 사용자 지정 특성의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값을 반환합니다.</summary>
      <returns>이 멤버에 대해 지정된 사용자 지정 특성의 인스턴스가 하나 이상 정의되어 있는지를 나타내는 값입니다.</returns>
      <param name="attributeType">사용자 지정 특성의 형식입니다.</param>
      <param name="inherit">계층 구조 체인에서 상속된 사용자 지정 특성을 찾으려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>비동기 작업에 대한 정보를 가져옵니다.</summary>
      <returns>비동기 작업에 대한 정보입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>작업의 고유 ID를 가져옵니다.</summary>
      <returns>작업의 고유 ID입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>인증 챌린지를 실행하는 데 대한 정보가 포함된 인증 챌린지 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>
        <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="controllerContext">컨트롤러 컨텍스트입니다.</param>
      <param name="actionDescriptor">챌린지와 연관된 동작 메서드입니다.</param>
      <param name="result">챌린지 응답입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>작업 설명자를 가져오거나 설정합니다.</summary>
      <returns>챌린지와 연관된 작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>실행할 작업 결과를 가져오거나 설정합니다.</summary>
      <returns>챌린지 응답입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>인증을 수행하는 데 대한 정보가 포함된 인증 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>작업 설명자를 가져오거나 설정합니다.</summary>
      <returns>인증과 연관된 동작 메서드입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>현재 인증된 주체를 가져오거나 설정합니다.</summary>
      <returns>인증에 대한 보안 자격 증명입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>인증이 시도되었지만 실패했음을 나타내는 오류 결과를 가져오거나 설정합니다.</summary>
      <returns>인증 결과입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>인증을 수행하는 필터를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>요청을 인증합니다.</summary>
      <param name="filterContext">인증에 사용할 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>현재 <see cref="T:System.Web.Mvc.ActionResult" />에 인증 챌린지를 추가합니다.</summary>
      <param name="filterContext">인증 챌린지에 사용할 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>다른 필터를 재정의하는 필터를 정의합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>재정의할 필터 유형을 가져옵니다.</summary>
      <returns>재정의할 필터입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링하기 위한 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 매개 변수를 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 매개 변수와 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 매개 변수와 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 사전입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 매개 변수를 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 HTML 문자열로 반환합니다.</summary>
      <returns>자식 작업 결과를 HTML 문자열로 나타냅니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 사전입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 매개 변수를 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 매개 변수와 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 매개 변수와 컨트롤러 이름을 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <param name="controllerName">동작 메서드를 포함하는 컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 사전입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 매개 변수를 사용하여 지정된 자식 동작 메서드를 호출하고 결과를 부모 뷰에 인라인으로 렌더링합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">호출할 자식 동작 메서드의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 사전입니다.<paramref name="routeValues" />를 사용하면 동작 메서드 매개 변수에 바인딩되어 있는 매개 변수를 제공할 수 있습니다.<paramref name="routeValues" /> 매개 변수가 원래 경로 값과 병합되고 해당 값을 재정의합니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="htmlHelper" /> 매개 변수가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actionName" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">필요한 가상 경로 데이터를 찾을 수 없습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>HTML로 개체 값 렌더링 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>문자열 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>추가 뷰 데이터를 사용하여 문자열 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 템플릿을 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 문자열 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>지정된 템플릿과 HTML 필드 ID를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>지정된 템플릿, HTML 필드 ID 및 추가 뷰 데이터를 사용하여 문자열 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <see cref="T:System.Linq.Expressions.Expression" /> 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>추가 뷰 데이터를 사용하여 지정된 식이 나타내는 개체의 각 속성 값을 포함하는 문자열을 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>지정된 템플릿을 사용하여 <see cref="T:System.Linq.Expressions.Expression" />이 나타내는 개체의 각 속성 값을 포함하는 문자열을 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 지정된 식이 나타내는 개체의 각 속성 값을 포함하는 문자열을 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>지정된 템플릿과 HTML 필드 ID를 사용하여 <see cref="T:System.Linq.Expressions.Expression" />이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>템플릿, HTML 필드 ID 및 추가 뷰 데이터를 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 템플릿을 사용하여 모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 템플릿과 HTML 필드 ID를 사용하여 모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 템플릿, HTML 필드 ID 및 추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용되는 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>표시 이름을 가져올 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>표시 이름을 가져옵니다.</summary>
      <returns>표시 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시 이름이 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>모델의 표시 이름을 가져옵니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시 이름이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>모델의 표시 이름을 가져옵니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시 이름이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>모델의 표시 이름을 가져옵니다.</summary>
      <returns>모델의 표시 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>개체 값을 HTML로 렌더링하는 방법을 설명합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 HTML 태그를 반환합니다.</summary>
      <returns>각 속성에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TResult">결과의 형식입니다.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>응용 프로그램의 HTML input 요소에 대한 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 템플릿을 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>지정된 템플릿과 HTML 필드 이름을 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>지정된 템플릿, HTML 필드 이름 및 추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <see cref="T:System.Linq.Expressions.Expression" /> 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>지정된 템플릿을 사용하여 <see cref="T:System.Linq.Expressions.Expression" /> 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>지정된 템플릿과 HTML 필드 이름을 사용하여 <see cref="T:System.Linq.Expressions.Expression" /> 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>지정된 템플릿, HTML 필드 이름 및 추가 뷰 데이터를 사용하여 식이 나타내는 개체의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 템플릿을 사용하여 모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>지정된 템플릿 및 모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 템플릿과 추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 템플릿 이름과 HTML 필드 이름을 사용하여 모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>명명된 템플릿 및 모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>템플릿 이름, HTML 필드 이름 및 추가 뷰 데이터를 사용하여 모델의 각 속성에 대한 HTML input 요소를 반환합니다.</summary>
      <returns>모델의 각 속성에 대한 HTML input 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="templateName">개체를 렌더링하는 데 사용할 템플릿의 이름입니다.</param>
      <param name="htmlFieldName">이름이 같은 속성에 대해 렌더링되는 HTML input 요소의 이름을 명확히 구분하는 데 사용되는 문자열입니다.</param>
      <param name="additionalViewData">템플릿에 대해 생성되는 <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> 인스턴스에 병합될 추가 뷰 데이터를 포함할 수 있는 익명 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>열거 값 및 선택 목록 작업에 사용되는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>지정된 형식으로 정의된 열거 상수에 해당하는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 목록을 가져옵니다.</summary>
      <returns>지정된 <paramref name="type" />의 목록입니다.</returns>
      <param name="type">평가할 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>지정된 형식으로 정의된 열거 상수에 해당하는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 목록을 가져옵니다.또한 <paramref name="value" />가 정의된 상수와 일치하지 않고 반환된 목록에서 <paramref name="value" />와 일치하는 한 요소의 Selected 속성을 true로 설정하는 경우에도 이 값이 왕복하도록 합니다.</summary>
      <returns>인식되지 않는 <paramref name="value" />를 포함하도록 확장될 수 있는 지정된 <paramref name="type" />의 목록입니다.</returns>
      <param name="type">평가할 형식입니다.</param>
      <param name="value">선택할 형식의 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>지정된 메타데이터로 정의된 열거 상수에 해당하는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 목록을 가져옵니다.</summary>
      <returns>지정된 메타데이터의 목록입니다.</returns>
      <param name="metadata">평가할 모델 메타데이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>지정된 메타데이터로 정의된 열거 상수에 해당하는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 목록을 가져옵니다.또한 값이 정의된 상수와 일치하지 않고 반환된 목록에서 값과 일치하는 한 요소의 Selected 속성을 true로 설정하는 경우에도 이 값이 왕복하도록 합니다.</summary>
      <returns>인식되지 않는 <paramref name="value" />를 포함하도록 확장될 수 있는 지정된 <paramref name="metadata" />의 목록입니다.</returns>
      <param name="metadata">평가할 메타데이터입니다.</param>
      <param name="value">선택할 메타데이터 형식의 값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>지정된 형식 또는 이러한 형식의 식이 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> 및 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 호출에서 사용하기에 적합한지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" />가 지정된 형식을 전달한 시기를 throw하지 않고 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />이 이러한 형식의 식을 전달한 시기를 throw하지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="type">확인할 형식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>지정된 메타데이터 또는 관련 식이 <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> 및 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> 호출에서 사용하기에 적합한지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" />가 지정된 <see cref="T:System.Web.Mvc.ModelMetadata" />를 전달한 시기를 throw하지 않고 <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />이 관련 식을 전달한 시기를 throw하지 않으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="metadata">확인할 메타데이터입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>응용 프로그램의 HTML 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다. </returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="actionName">동작 메서드의 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 동작 메서드를 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.이 개체는 일반적으로 개체 이니셜라이저 구문을 사용하여 만듭니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 개체입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeName">폼 게시 URL을 가져오는 데 사용할 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 개체입니다.</param>
      <param name="method">GET 또는 POST인 폼을 처리하기 위한 HTTP 메서드입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>응답에 여는 &lt;form&gt; 태그를 씁니다.사용자가 폼을 제출하면 경로 대상을 통해 요청이 처리됩니다.</summary>
      <returns>여는 &lt;form&gt; 태그입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="routeValues">경로의 매개 변수를 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>닫는 &lt;/form&gt; 태그를 응답에 렌더링합니다. </summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>응용 프로그램의 HTML 입력 컨트롤 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드의 이름을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 확인란이 선택되었는지를 나타내는 값을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="isChecked">확인란을 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 확인란이 선택되었는지를 나타내는 값과 HTML 특성을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="isChecked">확인란을 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 확인란이 선택되었는지를 나타내는 값과 HTML 특성을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="isChecked">확인란을 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 HTML 특성을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 HTML 특성을 사용하여 확인란 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "checkbox"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 확인란 input 요소를 반환합니다.</summary>
      <returns>지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "checkbox"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 확인란 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "checkbox"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 확인란 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "checkbox"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드의 이름을 사용하여 숨겨진 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 값을 사용하여 숨겨진 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">숨겨진 input 요소의 값입니다.이 요소의 값은 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" />에서 요소가 검색되지 않으면 값 매개 변수가 사용됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 숨겨진 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">숨겨진 input 요소의 값입니다.이 요소의 값은 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 요소가 검색되지 않으면 값 매개 변수가 사용됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 숨겨진 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">숨겨진 input 요소입니다. 이 요소의 값은 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 요소가 검색되지 않으면 값 매개 변수가 사용됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 숨겨진 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 숨겨진 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 숨겨진 HTML input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "hidden"으로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드의 이름을 사용하여 암호 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "password"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 값을 사용하여 암호 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "password"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">암호 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 암호 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "password"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">암호 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 암호 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "password"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">암호 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 암호 input 요소를 반환합니다.</summary>
      <returns>지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "password"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 암호 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "password"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 암호 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "password"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="isChecked">라디오 단추를 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="isChecked">라디오 단추를 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="isChecked">라디오 단추를 선택하려면 true이고, 그렇지 않으면 false입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>함께 사용할 수 없는 옵션을 제공하는 데 사용되는 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "radio"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "radio"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "radio"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 라디오 단추 input 요소를 반환합니다.</summary>
      <returns>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대해 type 특성이 "radio"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="value">이 라디오 단추가 선택되면 폼이 게시될 때 제출된 라디오 단추의 값입니다.<see cref="T:System.Web.Mvc.ViewDataDictionary" /> 또는 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 선택된 라디오 단추의 값이 이 값과 일치하면 이 라디오 단추가 선택됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드의 이름을 사용하여 텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름 및 값을 사용하여 텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드의 이름, 값 및 지정된 HTML 특성을 사용하여 텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">값을 조회하는 데 사용되는 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 키와 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 input 요소의 값입니다.이 값이 null이면 요소의 값이 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체에서 검색됩니다.값이 없으면 이 값은 <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에서 검색됩니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 텍스트 input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "text"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 텍스트 input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "text"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 텍스트 input 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대해 type 특성이 "text"로 설정된 HTML input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="expression" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>텍스트 input 요소를 반환합니다.</summary>
      <returns>type 특성이 "text"로 설정된 input 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="format">입력 형식을 지정하는 데 사용되는 문자열입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>ASP.NET MVC 뷰의 HTML label 요소 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>레이블 텍스트를 사용하여 지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">표시할 레이블 텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>레이블 텍스트를 사용하여 지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">표시할 레이블 텍스트입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">표시할 레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성을 식별하는 식입니다.</param>
      <param name="labelText">레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TValue">값입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>모델이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>모델이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>레이블 텍스트를 사용하여 지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="labelText">표시할 레이블 텍스트입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="labelText">레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 식이 나타내는 속성의 이름과 HTML label 요소를 반환합니다.</summary>
      <returns>식이 나타내는 속성의 이름과 HTML label 요소입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="labelText">레이블 텍스트입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>응용 프로그램의 HTML 링크 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.특성은 개체의 속성을 검토하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="controllerName">컨트롤러의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="actionName">작업 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.매개 변수는 개체의 속성을 검사하여 리플렉션을 통해 검색됩니다.개체는 일반적으로 개체 이니셜라이저 구문을 사용해 만듭니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="protocol">URL의 프로토콜입니다(예: "http" 또는 "https").</param>
      <param name="hostName">URL의 호스트 이름입니다.</param>
      <param name="fragment">URL 조각 이름(앵커 이름)입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeName">가상 경로를 반환하는 데 사용되는 경로의 이름입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다. </param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 작업의 가상 경로를 포함하는 앵커 요소(a 요소)를 반환합니다.</summary>
      <returns>앵커 요소(a 요소)입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="linkText">앵커 요소의 내부 텍스트입니다.</param>
      <param name="routeValues">경로의 매개 변수가 들어 있는 개체입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="linkText" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>MVC 뷰의 HTML form 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>지정된 HTTP 응답 개체를 사용하여 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="httpResponse">HTTP 응답 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpResponse " /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>지정된 뷰 컨텍스트를 사용하여 <see cref="T:System.Web.Mvc.Html.MvcForm" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="viewContext">뷰를 렌더링하는 데 필요한 정보를 캡슐화하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewContext" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>
        <see cref="T:System.Web.Mvc.Html.MvcForm" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Web.Mvc.Html.MvcForm" /> 클래스의 현재 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 모두 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>폼을 종료하고 모든 폼 리소스를 삭제합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>
        <see cref="T:System.Web.Mvc.HtmlHelper" /> 문자열의 HTML ID 특성과 이름 특성을 가져옵니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.HtmlHelper" /> 문자열의 ID를 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 HTML ID 특성 값입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">ID가 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
        <see cref="T:System.Web.Mvc.HtmlHelper`1" /> 문자열의 ID를 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 HTML ID 특성 값입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">ID가 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>
        <see cref="T:System.Web.Mvc.HtmlHelper" /> 문자열의 ID를 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 HTML ID 특성 값입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>식이 나타내는 개체의 전체 HTML 필드 이름을 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 전체 HTML 필드 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">이름이 포함된 개체를 식별하는 식입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>식이 나타내는 개체의 전체 HTML 필드 이름을 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 전체 HTML 필드 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">이름이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>식이 나타내는 개체의 전체 HTML 필드 이름을 가져옵니다.</summary>
      <returns>식이 나타내는 개체의 전체 HTML 필드 이름입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>부분 뷰를 HTML 인코딩된 문자열로 렌더링하는 기능을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 부분 뷰를 HTML 인코딩된 문자열로 렌더링합니다.</summary>
      <returns>HTML 인코딩된 문자열로 렌더링되는 부분 뷰입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="partialViewName">렌더링할 부분 뷰의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 부분 뷰를 HTML 인코딩된 문자열로 렌더링합니다.</summary>
      <returns>HTML 인코딩된 문자열로 렌더링되는 부분 뷰입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="partialViewName">렌더링할 부분 뷰의 이름입니다.</param>
      <param name="model">부분 뷰의 모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>지정된 부분 뷰를 HTML 인코딩된 문자열로 렌더링합니다.</summary>
      <returns>HTML 인코딩된 문자열로 렌더링되는 부분 뷰입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="model">부분 뷰의 모델입니다.</param>
      <param name="viewData">부분 뷰의 뷰 데이터 사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>지정된 부분 뷰를 HTML 인코딩된 문자열로 렌더링합니다.</summary>
      <returns>HTML 인코딩된 문자열로 렌더링되는 부분 뷰입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="partialViewName">렌더링할 부분 뷰의 이름입니다.</param>
      <param name="viewData">부분 뷰의 뷰 데이터 사전입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>부분 뷰 렌더링을 지원합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미를 사용하여 지정된 부분 뷰를 렌더링합니다.</summary>
      <param name="htmlHelper">HTML 도우미입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>현재 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체의 복사본을 전달하고 Model 속성을 지정된 모델로 설정하여 지정된 부분 뷰를 렌더링합니다.</summary>
      <param name="htmlHelper">HTML 도우미입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="model">모델입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>부분 뷰의 ViewData 속성을 지정된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체로 대체하고 뷰 데이터의 Model 속성을 지정된 모델로 설정하여 지정된 부분 뷰를 렌더링합니다.</summary>
      <param name="htmlHelper">HTML 도우미입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="model">부분 뷰의 모델입니다.</param>
      <param name="viewData">부분 뷰의 뷰 데이터입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>ViewData 속성을 지정된 <see cref="T:System.Web.Mvc.ViewDataDictionary" /> 개체로 대체하여 지정된 부분 뷰를 렌더링합니다.</summary>
      <param name="htmlHelper">HTML 도우미입니다.</param>
      <param name="partialViewName">부분 뷰의 이름입니다.</param>
      <param name="viewData">뷰 데이터입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>목록에서 선택하는 작업에 대한 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드 이름을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 지정된 목록 항목을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목 및 지정된 HTML 특성을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목 및 지정된 HTML 특성을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목 및 옵션 레이블을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목, 옵션 레이블 및 지정된 HTML 특성을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목, 옵션 레이블 및 지정된 HTML 특성을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 옵션 레이블을 사용하여 단일 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>지정된 목록 항목을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 목록 항목과 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>지정된 목록 항목과 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>지정된 목록 항목과 옵션 레이블을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 목록 항목, 옵션 레이블 및 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>지정된 목록 항목, 옵션 레이블 및 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">값의 유형입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>지정된 식이 나타내는 열거의 각 값에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 열거의 각 값에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 값이 포함된 개체를 식별하는 식입니다.</param>
      <param name="optionLabel">비어 있는 기본 항목에 대한 텍스트입니다.이 매개 변수는 null일 수 있습니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TEnum">값의 유형입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드 이름을 사용하여 다중 선택 select 요소를 반환합니다.</summary>
      <returns>HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 지정된 목록 항목을 사용하여 다중 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 지정된 목록 항목 및 지정된 HTML 특성을 사용하여 다중 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 지정된 목록 항목을 사용하여 다중 선택 select 요소를 반환합니다.</summary>
      <returns>목록의 각 항목에 대한 option 하위 요소가 있는 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 null이거나 비어 있습니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>지정된 목록 항목을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 목록 항목과 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>지정된 목록 항목과 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML select 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML select 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">표시할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="selectList">드롭다운 목록을 채우는 데 사용되는 <see cref="T:System.Web.Mvc.SelectListItem" /> 개체의 컬렉션입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>HTML textarea 컨트롤 지원을 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 HTML 도우미와 폼 필드 이름을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 지정된 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>지정된 HTML 도우미와 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>지정된 HTML 도우미, 폼 필드 이름 및 텍스트 콘텐츠를 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 콘텐츠입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 텍스트 콘텐츠 및 지정된 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 콘텐츠입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 텍스트 콘텐츠, 행과 열 개수 및 지정된 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 콘텐츠입니다.</param>
      <param name="rows">행의 수입니다.</param>
      <param name="columns">열의 수입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 텍스트 콘텐츠, 행과 열 개수 및 지정된 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 콘텐츠입니다.</param>
      <param name="rows">행의 수입니다.</param>
      <param name="columns">열의 수입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>지정된 HTML 도우미, 폼 필드 이름, 텍스트 콘텐츠 및 지정된 HTML 특성을 사용하여 지정된 textarea 요소를 반환합니다.</summary>
      <returns>textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">반환할 폼 필드의 이름입니다.</param>
      <param name="value">텍스트 콘텐츠입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 HTML 특성 및 행과 열 수를 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="rows">행의 수입니다.</param>
      <param name="columns">열의 수입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>지정된 HTML 특성 및 행과 열 수를 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="rows">행의 수입니다.</param>
      <param name="columns">열의 수입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>지정된 HTML 특성을 사용하여 지정된 식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소를 반환합니다.</summary>
      <returns>식이 나타내는 개체의 각 속성에 대한 HTML textarea 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="htmlAttributes">요소에 대해 설정할 HTML 특성이 들어 있는 사전입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>HTML 폼의 입력 유효성 검사를 지원합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>지역화된 문자열 값을 포함하는 리소스 파일(클래스 키)의 이름을 가져오거나 설정합니다.</summary>
      <returns>리소스 파일(클래스 키)의 이름입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>지정된 모델의 유효성 검사 메타데이터를 검색하고 데이터 필드에 각 규칙을 적용합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="modelName" /> 매개 변수가 null입니다.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 모델의 유효성 검사 메타데이터를 검색하고 데이터 필드에 각 규칙을 적용합니다.</summary>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체의 지정된 필드에 오류가 있는 경우 유효성 검사 메시지를 표시합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="modelName">유효성 검사 중인 속성 또는 모델 개체의 이름입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>지정된 식이 나타내는 각 데이터 필드에 대한 유효성 검사 오류 메시지의 HTML 태그를 반환합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>지정된 메시지를 사용하여 지정된 식이 나타내는 각 데이터 필드에 대한 유효성 검사 오류 메시지의 HTML 태그를 반환합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>지정된 메시지와 HTML 특성을 사용하여 지정된 식이 나타내는 각 데이터 필드에 대한 유효성 검사 오류 메시지의 HTML 태그를 반환합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>지정된 메시지와 HTML 특성을 사용하여 지정된 식이 나타내는 각 데이터 필드에 대한 유효성 검사 오류 메시지의 HTML 태그를 반환합니다.</summary>
      <returns>속성이나 개체가 유효하면 빈 문자열이고, 그렇지 않으면 오류 메시지를 포함하는 span 요소입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">렌더링할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="validationMessage">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
      <typeparam name="TModel">모델 유형입니다.</typeparam>
      <typeparam name="TProperty">속성의 형식입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환하며 선택적으로 모델 수준의 오류만 표시합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="excludePropertyErrors">요약에 모델 수준의 오류만 표시하려면 true이고, 모든 오류를 표시하려면 false입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환하며 선택적으로 모델 수준의 오류만 표시합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="excludePropertyErrors">요약에 모델 수준의 오류만 표시하려면 true이고, 모든 오류를 표시하려면 false입니다.</param>
      <param name="message">유효성 검사 요약과 함께 표시할 메시지입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환하며 선택적으로 모델 수준의 오류만 표시합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="excludePropertyErrors">요약에 모델 수준의 오류만 표시하려면 true이고, 모든 오류를 표시하려면 false입니다.</param>
      <param name="message">유효성 검사 요약과 함께 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환하며 선택적으로 모델 수준의 오류만 표시합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="excludePropertyErrors">요약에 모델 수준의 오류만 표시하려면 true이고, 모든 오류를 표시하려면 false입니다.</param>
      <param name="message">유효성 검사 요약과 함께 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HMTL 도우미 인스턴스입니다.</param>
      <param name="message">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="message">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 사전입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Mvc.ModelStateDictionary" /> 개체에 있는 유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 반환합니다.</summary>
      <returns>유효성 검사 메시지의 순서가 지정되지 않은 목록(ul 요소)을 포함하는 문자열입니다.</returns>
      <param name="htmlHelper">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="message">지정된 필드에 오류가 포함된 경우 표시할 메시지입니다.</param>
      <param name="htmlAttributes">요소의 HTML 특성이 들어 있는 개체입니다. </param>
    </member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">모델의 이름입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="name">모델의 이름입니다.</param>
      <param name="format">형식 문자열입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">노출할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <typeparam name="TModel">모델입니다.</typeparam>
      <typeparam name="TProperty">속성입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="expression">노출할 속성이 포함된 개체를 식별하는 식입니다.</param>
      <param name="format">형식 문자열입니다.</param>
      <typeparam name="TModel">모델입니다.</typeparam>
      <typeparam name="TProperty">속성입니다.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>ASP.NET MVC 모델 바인더 및 템플릿과 호환되는 사용자 지정 HTML 태그를 만드는 메커니즘을 제공합니다.</summary>
      <returns>값에 대한 HTML 태그입니다.</returns>
      <param name="html">이 메서드가 확장하는 HTML 도우미 인스턴스입니다.</param>
      <param name="format">형식 문자열입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>ASP.NET Razor 뷰를 클래스로 컴파일합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>
        <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>상속 지시문입니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>모델 지시문입니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>@model 키워드를 지원하는 기능을 추가하여 VBCodeParser 클래스를 확장합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>현재 코드 블록 및 모델이 상속되어야 하는지를 나타내는 값을 설정합니다.</summary>
      <returns>코드 블록 및 모델이 상속되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>모델 형식 지시문입니다.</summary>
      <returns>void를 반환합니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>지정된 파일에 대한 ASP.NET Razor 파서와 코드 생성기를 구성합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="virtualPath">ASP.NET Razor 파일의 가상 경로입니다.</param>
      <param name="physicalPath">ASP.NET Razor 파일의 실제 경로입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>ASP.NET MVC 언어별 Razor 코드 생성기를 반환합니다.</summary>
      <returns>ASP.NET MVC 언어별 Razor 코드 생성기입니다.</returns>
      <param name="incomingCodeGenerator">C# 또는 Visual Basic 코드 생성기입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>지정된 언어 파서를 사용하여 ASP.NET MVC 언어별 Razor 코드 파서를 반환합니다.</summary>
      <returns>ASP.NET MVC 언어별 Razor 코드 파서입니다.</returns>
      <param name="incomingCodeParser">C# 또는 Visual Basic 코드 파서입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>기본 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> 구현입니다.제약 조건 키 및 제약 조건 인수를 구문 분석하고, 맵을 사용하여 제약 조건 형식을 확인하며, 제약 조건 형식의 해당 생성자를 호출하여 제약 조건을 확인합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>제약 조건 키를 특정 제약 조건 형식에 매핑하는 변경 가능한 사전을 가져옵니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>직접 경로를 만들 수 있는 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="areaPrefix">있는 경우 영역에서 정의된 경로 접두사입니다.</param>
      <param name="controllerPrefix">있는 경우 컨트롤러에서 정의된 경로 접두사입니다.</param>
      <param name="actions">경로를 만들 작업 설명자입니다.</param>
      <param name="inlineConstraintResolver">인라인 제약 조건 확인자입니다.</param>
      <param name="targetIsAction">경로가 작업 수준에서 구성되었는지 또는 컨트롤러 수준에서 구성되었는지를 나타내는 값입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>경로를 만들 작업 설명자를 가져옵니다.</summary>
      <returns>경로를 만들 작업 설명자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>있는 경우 영역에서 정의된 경로 접두사를 가져옵니다.</summary>
      <returns>있는 경우 영역에서 정의된 경로 접두사입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>있는 경우 컨트롤러에서 정의된 경로 접두사를 가져옵니다.</summary>
      <returns>있는 경우 컨트롤러에서 정의된 경로 접두사입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>이 컨텍스트와 일치하는 경로를 작성할 수 있는 경로 빌더를 만듭니다.</summary>
      <returns>이 컨텍스트와 일치하는 경로를 작성할 수 있는 경로 빌더입니다.</returns>
      <param name="template">경로 템플릿입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>이 컨텍스트와 일치하는 경로를 작성할 수 있는 경로 빌더를 만듭니다.</summary>
      <returns>이 컨텍스트와 일치하는 경로를 작성할 수 있는 경로 빌더입니다.</returns>
      <param name="template">경로 템플릿입니다.</param>
      <param name="constraintResolver">있는 경우 사용할 인라인 제약 조건 확인자이고, 그렇지 않으면 null입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>인라인 제약 조건 확인자를 가져옵니다.</summary>
      <returns>인라인 제약 조건 확인자입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>경로가 작업 수준에서 구성되었는지 또는 컨트롤러 수준에서 구성되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>경로가 작업 수준에서 구성된 경우 true이고, 그렇지 않고 경로가 컨트롤러 수준에서 구성된 경우 false입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>작업에 대한 직접 경로(특성 경로)를 만드는 빌더를 정의합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>경로를 만들 작업 설명자를 가져옵니다.</summary>
      <returns>경로를 만들 작업 설명자입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>현재 속성 값을 기반으로 경로 항목을 만듭니다.</summary>
      <returns>만들어진 경로 항목입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>경로 제약 조건을 가져오거나 설정합니다.</summary>
      <returns>경로 제약 조건입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>경로 데이터 토큰을 가져오거나 설정합니다.</summary>
      <returns>경로 데이터 토큰입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>경로 기본값을 가져오거나 설정합니다.</summary>
      <returns>경로 기본값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>경로 이름을 가져오거나 설정합니다.</summary>
      <returns>이름이 제공되지 않은 경우 경로 이름이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>경로 순서를 가져오거나 설정합니다.</summary>
      <returns>경로 순서입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>경로 우선 순위를 가져오거나 설정합니다.</summary>
      <returns>경로 우선 순위입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>경로가 작업 수준에서 구성되었는지 또는 컨트롤러 수준에서 구성되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>경로가 작업 수준에서 구성된 경우 true이고, 그렇지 않고 경로가 컨트롤러 수준에서 구성된 경우 false입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>경로 템플릿을 가져오거나 설정합니다.</summary>
      <returns>경로 템플릿입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>작업 설명자 집합에 대한 직접 경로(특성 경로)를 만드는 팩터리를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>직접 경로 항목을 만듭니다.</summary>
      <returns>직접 경로 항목입니다.</returns>
      <param name="context">경로를 만드는 데 사용되는 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>
        <see cref="T:System.Web.Routing.IRouteConstraint" /> 인스턴스로 인라인 제약 조건을 확인하는 추상화를 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>인라인 제약 조건을 확인합니다.</summary>
      <returns>인라인 제약 조건을 확인한 <see cref="T:System.Web.Routing.IRouteConstraint" />입니다.</returns>
      <param name="inlineConstraint">확인할 인라인 제약 조건입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>System.Web.Routing.Route 작성에 대한 정보를 제공합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>일치 기준으로 사용할 URI 패턴을 설명하는 경로 템플릿을 가져옵니다.</summary>
      <returns>일치 기준으로 사용할 URI 패턴을 설명하는 경로 템플릿입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>생성할 경로의 이름을 가져옵니다.</summary>
      <returns>생성할 경로의 이름입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>경로 접두사를 정의합니다.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>경로 접두사를 가져옵니다.</summary>
      <returns>경로 접두사입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>경로 정보를 기반으로 <see cref="T:System.Web.Routing.Route" /> 인스턴스를 작성합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>기본 인라인 제약 조건 해결 프로그램을 사용하여 <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="constraintResolver">인라인 제약 조건을 확인하는 데 사용할 <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>특정 작업에 대한 <see cref="T:System.Web.Routing.Route" />를 작성합니다.</summary>
      <returns>생성된 <see cref="T:System.Web.Routing.Route" />입니다.</returns>
      <param name="routeTemplate">경로에 대해 토큰화된 경로 템플릿입니다.</param>
      <param name="allowedMethods">경로에서 지원하는 HTTP 메서드입니다.값이 null이면 가능한 모든 메서드가 지원됨을 나타냅니다.</param>
      <param name="controllerName">연관된 컨트롤러의 이름입니다.</param>
      <param name="actionName">연관된 작업의 이름입니다.</param>
      <param name="targetMethod">경로 특성이 적용된 메서드입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>특정 작업에 대한 <see cref="T:System.Web.Routing.Route" />를 작성합니다.</summary>
      <returns>생성된 경로입니다.</returns>
      <param name="routeTemplate">경로에 대해 토큰화된 경로 템플릿입니다.</param>
      <param name="controllerDescriptor">경로 특성이 적용된 컨트롤러입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>
        <see cref="T:System.Web.Routing.Route" />를 작성합니다.</summary>
      <returns>생성된 <see cref="T:System.Web.Routing.Route" />입니다.</returns>
      <param name="defaults">경로 기본값입니다.</param>
      <param name="constraints">경로 제약 조건입니다.</param>
      <param name="routeTemplate">토큰화되지 않은 경로 템플릿입니다.</param>
      <param name="targetMethod">경로 특성이 적용된 메서드입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>인라인 제약 조건을 확인하기 위한 확인자를 가져옵니다.</summary>
      <returns>인라인 제약 조건을 확인하기 위한 확인자입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>명명된 경로를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">경로 이름입니다.</param>
      <param name="route">경로입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>경로 이름을 가져옵니다.</summary>
      <returns>있는 경우 경로 이름이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>경로를 가져옵니다.</summary>
      <returns>경로입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>사용자 지정 제약 조건을 포함할 수 있는 특성 경로를 나타냅니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="template">경로 템플릿입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>경로 제약 조건을 가져옵니다.</summary>
      <returns>있는 경우 경로 제약 조건이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>직접 경로 항목을 만듭니다.</summary>
      <returns>직접 경로 항목입니다.</returns>
      <param name="context">경로를 만드는 데 사용되는 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>경로 데이터 토큰을 가져옵니다.</summary>
      <returns>있는 경우 경로 데이터 토큰이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>경로 기본값을 가져옵니다.</summary>
      <returns>있는 경우 경로 기본값이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>경로 이름을 가져오거나 설정합니다.</summary>
      <returns>있는 경우 경로 이름이고, 그렇지 않으면 null입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>경로 순서를 가져오거나 설정합니다.</summary>
      <returns>경로 순서입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>경로 템플릿을 가져옵니다.</summary>
      <returns>경로 템플릿입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>영어 알파벳 A부터 Z까지의 소문자 또는 대문자만 포함하도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>부울 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>여러 자식 제약 조건으로 경로를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="constraints">일치시킬 이 제약 조건에 대해 일치해야 하는 자식 제약 조건입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>일치시킬 이 제약 조건에 대해 일치해야 하는 자식 제약 조건을 가져옵니다.</summary>
      <returns>일치시킬 이 제약 조건에 대해 일치해야 하는 자식 제약 조건입니다.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>
        <see cref="T:System.DateTime" /> 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>10진수 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>64비트 부동 소수점 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>32비트 부동 소수점 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>
        <see cref="T:System.Guid" /> 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>32비트 정수 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>지정된 길이 또는 지정된 길이 범위 내의 문자열이 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>지정된 길이의 문자열이 되도록 경로 매개 변수를 제한하는 <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength">경로 매개 변수의 최소 길이입니다.</param>
      <param name="maxLength">경로 매개 변수의 최대 길이입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>경로 매개 변수의 길이를 가져옵니다(설정된 경우).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>경로 매개 변수의 최대 길이를 가져옵니다(설정된 경우).</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>경로 매개 변수의 최소 길이를 가져옵니다(설정된 경우).</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>64비트 정수 값만 나타내도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>최대 길이를 사용하는 문자열이 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>경로 매개 변수의 최대 길이를 가져옵니다.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>최대값을 사용하는 정수가 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="max">최대값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>경로 매개 변수의 최대값을 가져옵니다.</summary>
      <returns>경로 매개 변수의 최대값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>최대 길이를 사용하는 문자열이 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="minLength">최소 길이입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">비교 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>경로 매개 변수의 최소 길이를 가져옵니다.</summary>
      <returns>경로 매개 변수의 최소 길이입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>최소값을 사용하는 Long이 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="min">최소값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>경로 매개 변수의 최소값을 가져옵니다.</summary>
      <returns>경로 매개 변수의 최소값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>선택적 매개 변수가 기본값으로 설정된 경우 실패하지 않는 내부 제약 조건으로 경로를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="innerConstraint">매개 변수가 값이 없는 선택적 매개 변수가 아닌 경우에 일치시킬 내부 제약 조건입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>매개 변수가 값이 없는 선택적 매개 변수가 아닌 경우에 일치시킬 내부 제약 조건을 가져옵니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>지정된 값 범위 내의 정수가 되도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>
        <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="min">최소값입니다.</param>
      <param name="max">최대값입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>경로 매개 변수의 최대값을 가져옵니다.</summary>
      <returns>경로 매개 변수의 최대값입니다.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>경로 매개 변수의 최소값을 가져옵니다.</summary>
      <returns>경로 매개 변수의 최소값입니다.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>정규식과 일치하도록 경로 매개 변수를 제한합니다.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>지정된 패턴으로 <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pattern">일치시킬 패턴입니다.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>이 인스턴스가 지정된 경로와 같은지 여부를 확인합니다.</summary>
      <returns>이 인스턴스가 지정된 경로와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="httpContext">HTTP 컨텍스트입니다.</param>
      <param name="route">비교할 경로입니다.</param>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="values">매개 변수 값의 목록입니다.</param>
      <param name="routeDirection">경로 방향입니다.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>일치시킬 정규식 패턴을 가져옵니다.</summary>
      <returns>일치시킬 정규식 패턴입니다.</returns>
    </member>
  </members>
</doc>